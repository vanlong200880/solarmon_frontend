{"ast":null,"code":"// import React from 'react';\nvar formatNum = require('format-number');\n\nconst roundTo = require('round-to');\n\nconst moment = require(\"moment\"); // import { toast } from 'react-toastify';\n\n\nvar Libs = {};\n/**\n * trim string\n * @param str\n * @returns\n */\n\nLibs.safeTrim = str => {\n  try {\n    return typeof str === 'string' ? str.trim() : str.toString();\n  } catch (e) {\n    return \"\";\n  }\n};\n/**\n * check blank object or string\n * @param str\n * @returns {Boolean}\n */\n\n\nLibs.isBlank = str => {\n  if (typeof str === undefined || str === null || Libs.safeTrim(str) === \"\") {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Check valid object\n * @param {*} obj \n */\n\n\nLibs.isObjectEmpty = obj => {\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  if (obj == null) return true;\n  if (obj.length > 0) return false;\n  if (obj.length === 0) return true;\n  if (typeof obj !== \"object\") return true;\n\n  for (var key in obj) {\n    if (hasOwnProperty.call(obj, key)) return false;\n  }\n\n  return true;\n};\n/**\n * Find objects in arrays by value and field\n * @param items\n * @param field\n * @param value\n * @returns\n */\n\n\nLibs.find = function (items, field, value) {\n  if (!items) return null;\n\n  for (var i = 0; i < items.length; i++) {\n    if (value === items[i][field]) {\n      return items[i];\n    }\n  }\n\n  return null;\n};\n/**\n * @description Check the array data \n * @param Array arr\n * @author: Luyen Nguyen\n * @return boolean\n */\n\n\nLibs.isArrayData = function (arr) {\n  if (Libs.isBlank(arr)) return false;\n  if (!Array.isArray(arr) || arr.length <= 0) return false;\n  return true;\n};\n\nLibs.isNumber = function (value) {\n  try {\n    var val = value;\n    if (typeof val === 'undefined' || val === null) return false;\n\n    if (typeof val === 'number') {\n      val = val.toString();\n    }\n\n    val = val.replace(/^-/, '');\n    return /^[0-9\\b]+$/.test(val);\n  } catch (err) {\n    return false;\n  }\n};\n/**\n* @description Check ext file upload\n* @author Long.Pham 10/05/2021\n* @param  String file_name: file name\n* @param  {int} ext_type: undefined: all file, 1: only image, 2: only file, 3: video\n*/\n\n\nLibs.checkExtensionFile = function (file_name, ext_type) {\n  if (file_name === 'undefined' || file_name === null) return;\n  var extImg = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF'];\n  var extFile = ['xlsx', 'xls', 'XLSX', 'XLS', 'doc', 'DOC', 'docs', 'DOCS', 'pdf', 'PDF'];\n  var extAll = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF', 'doc', 'DOC', 'docs', 'DOCS', 'docx', 'DOCX', 'pdf', 'PDF', 'mp4', 'MP4', 'avi', 'AVI'];\n  var extVideo = ['mp4', 'MP4', 'avi', 'AVI'];\n  var ext = file_name.substr(file_name.lastIndexOf('.') + 1);\n\n  if (ext_type === 'undefined' || ext_type === null) {\n    for (let i = 0; i < extAll.length; i++) {\n      if (ext === extAll[i]) {\n        return true;\n      }\n    }\n  } else if (ext_type === 1) {\n    for (let i = 0; i < extImg.length; i++) {\n      if (ext === extImg[i]) {\n        return true;\n      }\n    }\n  } else if (ext_type === 2) {\n    for (let i = 0; i < extFile.length; i++) {\n      if (ext === extFile[i]) {\n        return true;\n      }\n    }\n  } else if (ext_type === 3) {\n    for (let i = 0; i < extVideo.length; i++) {\n      if (ext === extVideo[i]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nLibs.convertStringToNumber = function (value) {\n  try {\n    var val = value;\n    if (typeof val === 'undefined' || val == null) return null;\n\n    if (typeof val === 'number') {\n      val = val.toString();\n    }\n\n    return Number(val.replace(/[^0-9]+/g, \"\"));\n  } catch (err) {\n    return null;\n  }\n};\n/**\n* Format number according to the format option in formatNum format of the library\n* By default #, ###. ## separated by commas, spread after decimal 2 digits\n*\n* @param {String} val\n* @param {String} pattern default #,###.##\n* @param {int} round default 0: Default rounding -1: rounding down, 1: rounding up\n* @author:  MinhPham 2018-11-18 11:16:34 \n*/\n\n\nLibs.formatNum = function (val, pattern = \"#,###.##\", round = 0) {\n  if (Libs.isBlank(val) || isNaN(val)) {\n    return \"\";\n  }\n\n  val = val * 1;\n  let comma = ',';\n  let decimal = '.';\n  let afterDecimalNum = 0; //After the decimal point take some numbers\n\n  if (Libs.isBlank(pattern)) {\n    pattern = \"#,###.##\";\n  }\n\n  const regex = new RegExp(\"[,.]+\", \"ig\");\n  let myArray;\n  let index = 0;\n  let afterDecimal = \"\";\n\n  while ((myArray = regex.exec(pattern)) !== null) {\n    //The first time is the comma\n    if (index === 0) {\n      comma = myArray[0];\n    } else if (comma !== myArray[0]) {\n      //The last time is the decimal separator\n      afterDecimal = myArray[0];\n    }\n\n    index++;\n  }\n\n  if (afterDecimal !== \"\") {\n    decimal = afterDecimal;\n    afterDecimalNum = pattern.length - (pattern.lastIndexOf(decimal) + 1);\n  }\n\n  var opts = {\n    \"negativeType\": 'left',\n    \"prefix\": '',\n    \"suffix\": '',\n    \"integerSeparator\": comma,\n    \"decimalsSeparator\": '',\n    \"decimal\": decimal,\n    \"padLeft\": -1,\n    \"round\": afterDecimalNum\n  };\n\n  if (round === 1) {\n    val = roundTo.up(val, afterDecimalNum);\n  } else if (round === 0) {\n    val = roundTo(val, afterDecimalNum);\n  } else {\n    val = roundTo.down(val, afterDecimalNum);\n  }\n\n  return formatNum(opts)(val);\n};\n/**\n * string format\n * ex: let a = Libs.stringAssign(\"hello $<0> $<1>\", [\"world\",\"rrr\"])\n * @param {string template} str \n * @param {Array} data \n * @param {regex} REG_ASSIGN_VARIBLE \n */\n\n\nLibs.stringAssign = function (str, data, REG_ASSIGN_VARIBLE) {\n  if (Libs.isBlank(REG_ASSIGN_VARIBLE)) {\n    REG_ASSIGN_VARIBLE = /\\$\\<([^{}]*?)\\>/g;\n  }\n\n  return str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n    return String(data[$1]);\n  });\n};\n\nLibs.convertStrtoDate = (_date, format) => {\n  if (null === _date || typeof _date === 'undefined' || _date === '') {\n    return '';\n  }\n\n  let date = _date;\n\n  if (typeof format === \"undefined\" || Libs.isBlank(format)) {\n    let arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"];\n\n    for (let i = 0; i < arrFormat.length; i++) {\n      date = moment(_date, arrFormat[i]);\n\n      if (date._isValid) {\n        return date._d;\n      }\n    }\n  } else {\n    if (format.toLowerCase() === 'utc') {\n      date = moment(_date);\n    } else date = moment(_date, format);\n\n    if (!date._isValid) {\n      return _date;\n    }\n\n    return date._d;\n  }\n\n  return _date;\n};\n/**\n  * format date to another format\n  * @param {String} _date \n  * @param {String} format \n  * @param {String} from_format \n  */\n\n\nLibs.dateFormat = (_date, format = \"DD/MM/YYYY HH:mm:ss\", from_format) => {\n  if (null === _date || typeof _date === 'undefined' || _date === '') {\n    return '';\n  }\n\n  let date = _date;\n\n  if (typeof from_format === \"undefined\" || Libs.isBlank(from_format)) {\n    let arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"];\n\n    for (let i = 0; i < arrFormat.length; i++) {\n      date = moment(_date, arrFormat[i]);\n\n      if (date._isValid) {\n        return date.format(format);\n      }\n    }\n  } else {\n    if (from_format.toLowerCase() === 'utc') {\n      date = moment(_date);\n    } else date = moment(_date, from_format);\n\n    if (!date._isValid) {\n      return _date;\n    }\n\n    return date.format(format);\n  }\n\n  return _date;\n};\n/**\n * Check input on/off 111111111 : nByte _________ 000000100 : bitIndex:2\n * =>pow(2,2){base 10}= 000000100{base 2} =========== 000000100=>input 3 is\n * on.\n *\n * @param nByte\n * @param bitIndex\n * @return\n */\n\n\nLibs.checkBitOnOff = (nByte, bitIndex) => {\n  let result = nByte & parseInt(Math.pow(2, bitIndex));\n  return result != 0 ? true : false;\n};\n\nLibs.getCurrentDDMMYYYY = function () {\n  let date = new Date();\n  let year = date.getFullYear().toString();\n  let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  let day = date.getDate().toString().padStart(2, \"0\");\n  return day + \"/\" + month + \"/\" + year;\n};\n\nLibs.SHA3 = function (plainText) {\n  if (typeof plainText === 'undefined') {\n    return plainText;\n  }\n\n  var CryptoLib = require('./Crypto.js');\n\n  return CryptoLib.SHA3(plainText);\n};\n/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */\n\n\nLibs.base64Encrypt = function (plaintext) {\n  if (Libs.isBlank(plaintext)) {\n    return plaintext;\n  }\n\n  var CryptoLib = require('./Crypto.js');\n\n  return CryptoLib.base64Encrypt(plaintext);\n};\n/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */\n\n\nLibs.base64Decrypt = function (ciph) {\n  if (Libs.isBlank(ciph)) {\n    return ciph;\n  }\n\n  var CryptoLib = require('./Crypto.js');\n\n  return CryptoLib.base64Decrypt(ciph);\n};\n/**\n * @description Generate sku\n * @author: Long.Pham\n * @return str\n */\n\n\nLibs.generateSKU = function (id_company, lenUpper) {\n  var uniqId = Math.round(new Date().getTime() + Math.random() * 100);\n  var d = new Date();\n  var n = d.getTime();\n  var randomString = '';\n  var uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n  for (var i = 0; i < lenUpper; i++) {\n    var randomUppercase = Math.floor(Math.random() * uppercase.length);\n    randomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n  }\n\n  return !Libs.isBlank(id_company) ? id_company + randomString + uniqId : randomString + uniqId;\n};\n/**\n * @description Generate random string chữ hoa, chữ thường, số, ký tự đặc biệt\n * @author: Long.Pham\n * @return str\n */\n\n\nLibs.generateStrRandom = function (lenUpper, lenLower, lenSpec, lenNumber) {\n  var uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  var lowercase = 'abcdefghijklmnopqrstuvwxyz';\n  var specialChar = '!@#$%^&*(){}<>?';\n  var charNumber = '0123456789';\n  var randomString = '';\n\n  for (let i = 0; i < lenUpper; i++) {\n    var randomUppercase = Math.floor(Math.random() * uppercase.length);\n    randomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n  }\n\n  for (let i = 0; i < lenLower; i++) {\n    var randomLowercase = Math.floor(Math.random() * lowercase.length);\n    randomString += lowercase.substring(randomLowercase, randomLowercase + 1);\n  }\n\n  for (let i = 0; i < lenSpec; i++) {\n    var randomSpecialChar = Math.floor(Math.random() * specialChar.length);\n    randomString += specialChar.substring(randomSpecialChar, randomSpecialChar + 1);\n  }\n\n  for (let i = 0; i < lenNumber; i++) {\n    var randomCharNumber = Math.floor(Math.random() * charNumber.length);\n    randomString += charNumber.substring(randomCharNumber, randomCharNumber + 1);\n  }\n\n  var str = randomString.split(\"\");\n  return str.sort(function () {\n    return 0.5 - Math.random();\n  }).join(\"\");\n};\n/**\n * Compare date\n * @author Long.Pham 2018-11-21\n * @param from_date  from date\n * @param format date format\n * @param to_date to date, default is current date\n * @returns -1: less, 0: equal, 1: bigger\n */\n\n\nLibs.compareDate = function (from_date, format, to_date = null) {\n  from_date = moment(from_date, format.toUpperCase());\n\n  if (to_date == null) {\n    to_date = moment(new Date()).startOf('day');\n    ;\n  } else {\n    to_date = moment(to_date, format);\n  }\n\n  if (from_date.isAfter(to_date)) {\n    return 1;\n  }\n\n  if (from_date.isBefore(to_date)) {\n    return -1;\n  }\n\n  return 0;\n};\n\nLibs.checkIfImageExists = function (url, callback) {\n  const img = new Image();\n  img.src = url;\n\n  if (img.complete) {\n    callback(true);\n  } else {\n    img.onload = () => {\n      callback(true);\n    };\n\n    img.onerror = () => {\n      callback(false);\n    };\n  }\n};\n\nLibs.checkImageExists = function (url) {\n  this.checkIfImageExists(url, exists => {\n    return exists ? true : false;\n  });\n};\n/**\n * @description get current date\n * @author Long.Pham 2020-10-26\n * @return string date\n */\n\n\nLibs.getCurrentMMDDYYYYHI = function () {\n  let date = new Date();\n  let year = date.getFullYear().toString();\n  let month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n  let day = date.getDate().toString().padStart(2, \"0\");\n  let hour = date.getHours().toString().padStart(2, \"0\");\n  let mi = date.getMinutes().toString().padStart(2, \"0\");\n  return month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + mi;\n};\n/**\n * Add Minutes\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\n\n\nLibs.addMinutes = function (date, minutes) {\n  var result = new Date(date);\n  result.setMinutes(result.getMinutes() + minutes);\n  return result;\n};\n/**\n * Add Days\n * @author Long.Pham 2020-10-26\n * @param date \n * @param days\n * @returns date\n */\n\n\nLibs.addDays = function (date, days) {\n  var result = new Date(date);\n  result.setDate(result.getDate() + days);\n  return result;\n};\n/**\n * Add Months\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\n\n\nLibs.addMonths = function (date, months) {\n  var result = new Date(date);\n  result.setMonth(result.getMonth() + months);\n  return result;\n};\n/**\n * Add Years\n * @author Long.Pham 2020-10-26\n * @param date \n * @param years\n * @returns date\n */\n\n\nLibs.addYears = function (date, years) {\n  var result = new Date(date);\n  result.setFullYear(result.getFullYear() + years);\n  return result;\n};\n/**\n * @description Convert Data to DB\n * @author Long.Pham 2020-10-26\n * @param {String} _date \n * @param {String} format \n * @param {String} from_format\n */\n\n\nLibs.convertAllFormatDate = (_date, from_format = \"MM/DD/YYYY HH:mm:ss\", to_format = \"YYYY-MM-DD HH:mm:ss\") => {\n  if (null == _date || typeof _date === 'undefined' || _date == '') {\n    return '';\n  }\n\n  let date = moment(_date, from_format);\n\n  if (!date._isValid) {\n    return _date;\n  }\n\n  return date.format(to_format);\n};\n/**\n * Format electrical unit \n * @author Long.Pham 2020-10-26\n * @param {double} data: data\n * @return {string}: format data\n */\n\n\nLibs.formatElectricalUnit = function (data, prefix = '') {\n  if (Libs.isBlank(data) || data <= 0) return \"0 kW\" + prefix;\n\n  if (data < 1000) {\n    return Number.parseFloat(data).toFixed(2) + \" w\" + prefix;\n  } else if (data >= 1000 && data < 1000000) {\n    return Number.parseFloat(data / 1000).toFixed(2) + \" kW\" + prefix;\n  } else if (data >= 1000000 && data < 1000000000) {\n    return Number.parseFloat(data / 1000000).toFixed(2) + \" MW\" + prefix;\n  } else if (data >= 1000000000 && data < 1000000000000) {\n    return Number.parseFloat(data / 1000000000).toFixed(2) + \" GW\" + prefix;\n  } else if (data >= 1000000000000 && data < 1000000000000000) {\n    return Number.parseFloat(data / 1000000000000).toFixed(2) + \" TW\" + prefix;\n  }\n};\n\nLibs.getStringMonthNumber = function (number) {\n  if (number <= 0 || number > 12) return null;\n  var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  return monthNameList[number - 1];\n};\n\nLibs.getUnique = function (arr, comp) {\n  const unique = arr.map(e => e[comp]).map((e, i, final) => final.indexOf(e) === i && i).filter(e => arr[e]).map(e => arr[e]);\n  return unique;\n};\n/**\n * @description Generate random string\n * @author: Luyen Nguyen\n * @return str\n */\n// Libs.generateStrRandom = function (len, charSet) {\n// \tcharSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*?';\n//     var randomString = '';\n//     for (var i = 0; i < len; i++) {\n//         var randomPoz = Math.floor(Math.random() * charSet.length);\n//         randomString += charSet.substring(randomPoz,randomPoz+1);\n//     }\n//     return randomString;\n// }\n// Libs.baseUrl = function () {\n// \tlet url = \"\";\n// \tconst protocol = location.protocol;\n// \tconst API_HOST = process.api_host || Constants.API_HOST;\n// \tconst API_HTTP_PORT = process.api_http_port || Constants.API_HTTP_PORT;\n// \tconst API_HTTPS_PORT = process.api_https_port || Constants.API_HTTPS_PORT;\n// \tif (protocol == 'https:') {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTPS_PORT;\n// \t} else {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTP_PORT;\n// \t}\n// \treturn url; \n// }\n\n/**\n * @description Get file url\n * @author Long.Pham 14/06/2021\n * @param {string} filePath: file path\n */\n\n\nLibs.getFileUrl = function (filePath, server_data) {\n  if (Libs.isBlank(filePath)) return;\n  return server_data + \"/\" + filePath;\n}; // Libs.rEnter = (event) => {\n// \tvar _this = $(event.target);\n// \tif (event.which === 13) {\n// \t\tvar sign = event.shiftKey ? -1 : 1;\n// \t\tevent.preventDefault();\n// \t\tvar fields = _this.parents('form:eq(0),body').find('input,textarea');\n// \t\tvar index = fields.index(_this);\n// \t\tif (index > -1 && (index + 1 * sign) < fields.length)\n// \t\t\tfields.eq(index + 1 * sign).focus();\n// \t}\n// }\n// /**\n//  * return json result\n//  * @param unknown $status\n//  * @param unknown $mess\n//  * @param unknown $data\n//  */\n// Libs.returnJsonResult = (status, mess, data, total_row) => {\n// \tvar result = {};\n// \tresult.status = status;\n// \tresult.mess = mess ? mess : \"\";\n// \tresult.data = data ? data : \"\";\n// \tresult.total_row = total_row ? total_row : 0;\n// \treturn result;\n// }\n// Libs.convertObjectToJson = (object) => {\n// \treturn JSON.stringify(object);\n// }\n// /**\n//  * Convert date to milisecond\n//  */\n// Libs.convertDateToMilliseconds = (date, char) => {\n// \tvar date = $(\"#datepicker\").val().split(\"-\");\n// \tvar f = new Date(date[2], date[1] - 1, date[0]);\n// \tif (null == f || \"undefined\" === typeof f)\n// \t\treturn 0;\n// \treturn f.getTime();\n// }\n// Libs.convertMillisecondsToDataFormat = (milliseconds, isShowHour = true) => {\n// \tmilliseconds = parseInt(milliseconds);\n// \tif (milliseconds == null || milliseconds == 0) return \"\";\n// \tvar dateObj = new Date(milliseconds);\n// \tvar day = (dateObj.getDate() < 10) ? (\"0\" + dateObj.getDate()) : dateObj.getDate();\n// \tvar month = (dateObj.getMonth() + 1 < 10) ? (\"0\" + (dateObj.getMonth() + 1)) : (dateObj.getMonth() + 1);\n// \tvar year = dateObj.getFullYear();\n// \tvar hour = (dateObj.getHours() < 10) ? (\"0\" + dateObj.getHours()) : dateObj.getHours();\n// \tvar minute = (dateObj.getMinutes() < 10) ? (\"0\" + dateObj.getMinutes()) : dateObj.getMinutes();\n// \tvar second = (dateObj.getSeconds() < 10) ? (\"0\" + dateObj.getSeconds()) : dateObj.getSeconds();\n// \tif (isShowHour)\n// \t\treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute + \":\" + second;\n// \telse\n// \t\treturn day + \"/\" + month + \"/\" + year\n// }\n// Libs.convertMillisecondsToDate = (time) => {\n// \tvar date = new Date(time);\n// \treturn date;\n// }\n// Libs.scrollToBottom = (your_div) => {\n// \tvar objDiv = your_div;\n// \t//console.log(\"objDiv.scrollTop :\" + objDiv.scrollTop);\n// \t//console.log(\"objDiv.scrollHeight - objDiv.offsetHeight :\" + (objDiv.scrollHeight - objDiv.offsetHeight));\n// \tif (objDiv.scrollTop >= (objDiv.scrollHeight - objDiv.offsetHeight)) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// Libs.convertStr2Date = (_date, _format, _delimiter) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\t;\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = _format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = _date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \tmonth -= 1;\n// \tvar formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);\n// \treturn formatedDate;\n// }\n// Libs.getMillisecondsFromDataPickerFrom = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn 0;\n// \t}\n// \treturn new Date(date).getTime();\n// }\n// Libs.getMillisecondsFromDataPickerTo = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn new Date().getTime() + 86400000;\n// \t}\n// \treturn new Date(date).getTime() + 86400000;\n// }\n// Libs.getCurrentDDMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year;\n// }\n// Libs.getCurrentMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn  month + \"/\" + year;\n// }\n// Libs.getCurrentDDMMYYYYHI = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \tlet hour = date.getHours().toString().padStart(2, \"0\");\n// \tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n// \tlet ss = date.getSeconds().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + mi;\n// }\n// \treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n// \t\treturn String(data[$1]);\n// \t});\n// };\n// Libs.printError = (messages) => {\n// \tif (!(messages instanceof Array)) {\n// \t\treturn \"\";\n// \t}\n// \tvar str = \"\";\n// \tif (messages.length > 0) {\n// \t\tfor (var me in messages) {\n// \t\t\tvar message = messages[me];\n// \t\t\tfor (var k in message) {\n// \t\t\t\tstr += message[k];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// Libs.md5 = function (plainText) {\n// \tif (typeof plainText === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.md5(plainText);\n// }\n// Libs.AESEncrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESEncrypt(plainText, secretKey);\n// }\n// Libs.AESDecrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESDecrypt(plainText, secretKey);\n// }\n// /**\n//  * encrypt\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.encrypt = function (plaintext) {\n// \tif (Libs.isBlank(plaintext)) {\n// \t\treturn plaintext;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.encrypt(plaintext);\n// }\n// /**\n//  * Taka Encode\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.takaEncode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tvar chars = text.split('');\n// \tlet str = '';\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'id', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.value;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// /**\n//  * Taka Decode\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.takaDecode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tlet chars = [], str = '';\n// \tvar start = 0;\n// \tfor(var i = 0; i< text.length/ 3; i++){\n// \t\tchars.push(text.substr(start, 3));\n// \t\tstart +=3;\n// \t}\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'value', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.id;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// Libs.convertEmptyPropToNullProp = function (object) {\n// \tif (typeof object != 'object') return {};\n// \tfor (var key in object) {\n// \t\tobject[key] = (object[key] === '') ? null : object[key];\n// \t}\n// \treturn object;\n// }\n// Libs.isInteger = function (value) {\n// \ttry {\n// \t\tvar val = value;\n// \t\tif (typeof val === 'undefined' || val == null) return false;\n// \t\tif (typeof val === 'number') {\n// \t\t\tval = val.toString();\n// \t\t}\n// \t\tval = val.replace(/^-/, '');\n// \t\treturn /^(0|[1-9]\\d*)$/.test(val);\n// \t} catch (err) {\n// \t\tconsole.log(err)\n// \t\treturn false;\n// \t}\n// }\n// /**\n//  * Custom css to select tag using for compoent react-select\n//  */\n// Libs.customSelectStyles = {\n// \tplaceholder: styles => ({\n// \t\t...styles,\n// \t\tcolor: '#ccc'\n// \t}),\n// \tcontrol: (styles, { data, isDisabled, isFocused, isSelected }) => {\n// \t\treturn {\n// \t\t\t...styles,\n// \t\t\tminHeight: '34px',\n// \t\t\tborderColor: '#ccc !important',\n// \t\t\tboxShadow: 'unset',\n// \t\t\tbackgroundColor: isDisabled ? '#e9ecef' : '#fff'\n// \t\t}\n// \t},\n// \tclearIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tdropdownIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tcontainer: styles => ({\n// \t\t...styles,\n// \t\t'z-index': '2000',\n// \t\t'position': 'relative'\n// \t})\n// }\n// Libs.buildPathValidateMessage = function (path, message) {\n// \tif (typeof path !== 'string' || typeof message !== 'string')\n// \t\treturn null;\n// \tif (path.length <= 0) return null;\n// \tvar validate = {};\n// \tvalidate[path] = message;\n// \treturn validate;\n// }\n// /**\n// * @description get content height\n// * If passing classname, height will be calculated by screen height except offset top of first name class\n// * The remaining classnames are deducted for the remaining classname's height\n// * ex: Libs.getContentHeight(\"className1\",\"className2\",...)\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getContentHeight = function () {\n// \tvar contentInner = $('#main-container .content-inner');\n// \tif (contentInner === 'undefined' || contentInner == null && contentInner === '') {\n// \t\treturn;\n// \t}\n// \tlet contentInnerHeight = (contentInner.innerHeight() ? contentInner.height() : 0)\n// \tif (!arguments || arguments.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerGroup = $('.fl-btn-group');\n// \tif (!footerGroup || footerGroup.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerOffsetTop = $(footerGroup[footerGroup.length - 1]).offset().top * 1\n// \tvar minHeight = null;\n// \tvar elementHeight = 0;\n// \tfor (let i = 0; i < arguments.length; i++) {\n// \t\tlet className = arguments[i];\n// \t\tif (!Libs.isBlank(className) && !Libs.isInteger(className)) {\n// \t\t\t//ưu tiên className\n// \t\t\tvar elements = $('.' + className);\n// \t\t\tif (!elements || elements.length <= 0) {\n// \t\t\t\t//tiến hành lấy theo id\n// \t\t\t\telements = $('#' + className);\n// \t\t\t}\n// \t\t\tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\t\t\telements.each(function () {\n// \t\t\t\t\tif (elementHeight == 0) {\n// \t\t\t\t\t\telementHeight += $(this).offset().top * 1;// - 46;//trừ cho header\n// \t\t\t\t\t} else\n// \t\t\t\t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t\t\t});\n// \t\t\t}\n// \t\t} else {\n// \t\t\tminHeight = className * 1;\n// \t\t}\n// \t}\n// \tvar height = 0;\n// \t//height = contentInnerHeight - (elementHeight + 5);\n// \theight = footerOffsetTop - (elementHeight + 10);//mặc định cách footer là 10px\n// \tif (minHeight == null) {\n// \t\tminHeight = 250;\n// \t}\n// \treturn height < minHeight ? minHeight : height;\n// }\n// /**\n// * @description get height by classname\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getHeightByClassName = function (className) {\n// \tif (className === 'undefined' || className == null && className === '') {\n// \t\treturn 0;\n// \t}\n// \tvar elementHeight = 0;\n// \tvar elements = $('.' + className);\n// \tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\telements.each(function () {\n// \t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t});\n// \t}\n// \treturn elementHeight;\n// }\n// /**\n//  * Round the number after a comma\n//  * @author thanh.bay 2018-09-27 11:24\n//  * @param  {string | float | int} value\n//  * @param  {int} fixed=1 : round to n numbers based on fixed value\n//  */\n// Libs.fixNumber = function (value, fixed = 1) {\n// \tif (typeof value === 'undefined' || value == null) return null;\n// \treturn parseFloat(Number.parseFloat(value).toFixed(fixed));\n// }\n// /**\n// * @description Get the element index in the array according to the field and value\n// * @author Luyen Nguyen 2018-09-28 16:10\n// * @param  array items\n// * @param String field: object you want to find in the array\n// * @param String value: compare value\n// * @param boolean isIndex: false return index, true: return object\n// * @return int|object\n// */\n// Libs.findIndex = (items, field, value, isIndex) => {\n// \tvar result = -1;\n// \tfor (var i = 0; i < items.length; i++) {\n// \t\tvalue = value + \"\";\n// \t\tvalue = (value) ? value.toLowerCase().trim() : \"\";\n// \t\tvar itemValue = items[i][field] + \"\";\n// \t\tvar itemName = (itemValue) ? itemValue.toLowerCase().trim() : \"\";\n// \t\tif (value == itemName) {\n// \t\t\tif (Libs.isBlank(isIndex)) {\n// \t\t\t\tresult = i;\n// \t\t\t}\n// \t\t\telse {\n// \t\t\t\tresult = items[i];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn result;\n// }\n// /**\n// * @description clear date input file\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.clearAllInputFile = function () {\n// \tif ($('input[type=\"file\"]').length) {\n// \t\t$('input[type=\"file\"]').val('');\n// \t}\n// \tif ($('.custom-file-label').length) {\n// \t\t$('.custom-file-label').html('');\n// \t}\n// }\n// /**\n// * @description Default configuration for tinymce\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.tinymceConfig = function (selector, readonly, height) {\n// \tif (!height) {\n// \t\theight = 150;\n// \t}\n// \tif (!selector) {\n// \t\tselector = 'textarea';\n// \t}\n// \tif (!readonly) {\n// \t\treadonly = false;\n// \t}\n// \treturn {\n// \t\tselector: selector,\n// \t\ttheme: 'modern',\n// \t\treadonly: readonly,\n// \t\theight: height,\n// \t\tplugins: 'print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists textcolor wordcount imagetools contextmenu colorpicker textpattern'\n// \t}\n// }\n// /**\n//  * @description Set select selected\n//  * @param {array} data \n//  * @author: thanh.bay\n//  */\n// Libs.setSelectSelected = function (selector, value) {\n// \tif (!selector || selector === 'undefined' && selector == null) return;\n// \t$(selector).val(value);\n// \t$(selector).trigger('change.select2');\n// }\n// /**\n//  * @description convert date to string\n//  * @param {array} data \n//  * @author: Minh.Pham\n//  */\n// Libs.convertSQLDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar date = new Date(_date);\n// \tvar result = Libs.convertDateToStr(date, _format);\n// \treturn result;\n// }\n// Libs.convertDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar day = _date.getDate();\n// \tvar month = _date.getMonth();\n// \tvar year = _date.getFullYear() + '';\n// \tmonth += 1;\n// \tif (day < 10) {\n// \t\tday = '0' + day;\n// \t}\n// \tif (month < 10) {\n// \t\tmonth = '0' + month;\n// \t}\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', day);\n// \tresult = result.replace('mm', month);\n// \tresult = result.replace('yyyy', year);\n// \treturn result;\n// }\n// /**\n//  * Get current year\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getCurrentYear = () => {\n// \tvar year = new Date().getFullYear();\n// \treturn year;\n// }\n// /**\n//  * Get days in month\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getDaysOfMonth = (year, month) => {\n// \tvar d = new Date(year, month, 0);\n// \treturn d.getDate();\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV01 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \t//var month = parseInt(dateItems[monthIndex]);\n// \tvar month = dateItems[monthIndex];\n// \treturn dateItems[yearIndex] + '-' + (month) + '-' + dateItems[dayIndex];\n// }\n// /**\n//  * Convert date to YYYYMMDD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV02 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \treturn dateItems[yearIndex] + (month) + dateItems[dayIndex];\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStrYearMonth = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \treturn dateItems[yearIndex] + '-' + dateItems[monthIndex];\n// }\n// /**\n//  * Convert date to 'YYYY-MM-DD'\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertYYYYMMDDDateToStr = (date, _format) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar dateItems = date.split('-');\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', dateItems[2]);\n// \tresult = result.replace('mm', dateItems[1]);\n// \tresult = result.replace('yyyy', dateItems[0]);\n// \treturn result;\n// }\n// /**\n//  * @description Delete special characters\n//  * @param {String} str \n//  * @return string\n//  * @author: minh.pham\n//  */\n// Libs.removeWildcard = (str) => {\n// \tstr = str.replace(/!|@|%|\\^|\\\\|\\/|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'||\\\"|\\&|\\#|\\[|\\]|~|$|_/g, \"\");\n// \treturn str;\n// }\n// /**\n//  * @description Search for characters in the string\n//  * @param {array} data \n//  * @return true\n//  * @author: lam.nguyen\n//  */\n// Libs.searchLikeString = (str, strSearch) => {\n// \tif (Libs.isBlank(str)) {\n// \t\treturn false;\n// \t}\n// \tstr = Libs.removeUnicode(str).toLowerCase().trim();\n// \tif (!Libs.isBlank(strSearch)) {\n// \t\tstrSearch = Libs.removeUnicode(strSearch).toLowerCase().trim();\n// \t}\n// \tif (str.indexOf(strSearch) != -1) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// /**\n//  * @description Remove duplicate elements in the array\n//  * @param Array arr\n//  * @author: Luyen Nguyen\n//  * @return Array\n//  */\n// Libs.removeDuplicatesSafe = function (arr) {\n// \tvar seen = {};\n// \tvar retArr = [];\n// \tfor (var i = 0; i < arr.length; i++) {\n// \t\tif (!(arr[i] in seen)) {\n// \t\t\tretArr.push(arr[i]);\n// \t\t\tseen[arr[i]] = true;\n// \t\t}\n// \t}\n// \treturn retArr;\n// }\n// /*\n//  * call await method\n//  * ex: let users = await Libs.callWithPromise((resolve, reject)=>{\n//  * UserService.instance.getDropDownList({}, (arrData) => {\n//  * \t\tif(arrData){ resolve(arrData)}\n//  * \t\telse{ reject(false)}\n//  *    }, false);\n//  * });\n//  * @param {func} func \n//  */\n// Libs.callWithPromise = (func) => {\n// \treturn new Promise(function (resolve, reject) {\n// \t\tfunc(resolve, reject)\n// \t})\n// }\n// /**\n// * Auto generate key from name\n// *\n// * @param {string} name\n// * @author:  minh.pham 2018-10-20 15:37:34 \n// * */\n// Libs.generateKeyFromName = function (name) {\n// \tif (Libs.isBlank(name)) return \"\";\n// \t//replace all wildchar\n// \tvar regex1 = /\\w+/;\n// \t// const regex = new RegExp(\"([a-zA-Z0-9 ]+)\", \"ig\");\n// \t// let myArray = regex.exec(name);\n// \t// if(myArray!=null){\n// \t// \tname = myArray.join(\"\");\n// \t// }\n// \tname = Libs.removeUnicode(name);\n// \tname = Libs.removeWildcard(name);\n// \tlet nameArr = name.split(\" \");\n// \tif (nameArr.length <= 1) {\n// \t\treturn nameArr[0].substring(0, 4).toUpperCase();\n// \t}\n// \tlet newName = \"\";\n// \tfor (let i = 0; i < nameArr.length; i++) {\n// \t\tnewName += nameArr[i].substring(0, 1).toUpperCase();\n// \t}\n// \treturn newName;\n// }\n// Libs.groupByProps = function (objectArray, property) {\n// \treturn objectArray.reduce(function (acc, obj) {\n// \t\tvar key = obj[property];\n// \t\tif (!acc[key]) {\n// \t\t\tacc[key] = [];\n// \t\t}\n// \t\tacc[key].push(obj);\n// \t\treturn acc;\n// \t}, {});\n// }\n// /**\n//  * \n//  * @param {*} inputDate format dd/MM/yyyy\n//  * @returns string yyyy-MM-dd\n//  */\n// Libs.inputDateToDBDate = function (inputDate) {\n// \tif (inputDate === undefined || inputDate == null || inputDate === '' || typeof inputDate !== 'string') {\n// \t\treturn null;\n// \t}\n// \tvar division = inputDate.split('/');\n// \tif (division <= 1) return null;\n// \tif (inputDate.length != 10) return null;\n// \tlet day = inputDate.substring(0, 2);\n// \tlet month = inputDate.substring(3, 5);\n// \tlet year = inputDate.substring(6, 10);\n// \treturn year + \"-\" + month + \"-\" + day;\n// }\n// /**\n//  * Display toast message\n//  * @param String message: content\n//  * @param String type: \"error\": red background, \"success\": blue background\n//  * @returns {*}\n//  */\n// Libs.toast = function (message, type, pos = \"top-right\") {\n// \tlet posistion = \"top-right\";\n// \tif (typeof pos != 'undefined') {\n// \t\tposistion = pos;\n// \t}\n// \tswitch (type) {\n// \t\tcase \"info\":\n// \t\t\ttoast.info(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"error\":\n// \t\t\ttoast.error(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"warn\":\n// \t\t\ttoast.warn(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t}\n// }\n// /**\n//  * Image url from API\n//  * @author thanh.bay 2018-10-30\n//  * @param  {string} file_path\n//  * @param  {string} headquarter_id\n//  */\n// Libs.linkShowImageAction = function (file_path, headquarter_id) {\n// \tlet host = Libs.baseUrl();\n// \tlet url = Constants.URL.SYSTEM.SHOW_IMAGE;\n// \tfile_path = encodeURI(file_path);\n// \treturn host + \"/\" + url + \"?file_path=\" + file_path + \"&headquarter_id=\" + headquarter_id;\n// }\n// Libs.convertAllFormatDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tif (_date.includes('/')) {\n// \t\treturn _date;\n// \t}\n// \tlet date = moment(_date);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(_format.toUpperCase());\n// }\n// /**\n//  * Convert Data to DB\n//  */\n// Libs.convertAllFormatDate = (_date, from_format = \"DD/MM/YYYY hh:mm\", to_format = \"YYYY-MM-DD hh:mm\") => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tlet date = moment(_date, from_format);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(to_format);\n// }\n// /**\n//  * Validate date 0000-00-00 \n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.validateDateNull = (date) => {\n// \tlet arrFormat = [\"0000-00-00\", \"0000/00/00\", \"0000-00-00 00:00:00\",\"0000/00/00 00:00:00\", \"00/00/0000\", \"00-00-0000\", \"00/00/0000 00:00:00\", \"00-00-0000 00:00:00\"];\n// \tfor (let i = 0; i < arrFormat.length; i++) {\n// \t\tif(date == arrFormat[i]){\n// \t\t\treturn false;\n// \t\t}\n// \t}\n// \treturn true;\n// }\n// /**\n//  * @description synchronize data\n//  * @author LuyenNguyen 2018-11-03\n//  * @param oldItems\n//  * @param newItems\n//  * @param field_key_name\n//  * @param unUpdateFields ex: \"field1,field2,...,fieldn\"\n//  * @returns {Array} \n//  */\n// Libs.synchronizeData = function (oldItems, newItems, field_key_name, unUpdateFields) {\n// \tif (!oldItems)\n// \t\toldItems = [];\n// \tif (!newItems) {\n// \t\treturn;\n// \t}\n// \tvar deletedList = [];\n// \tvar unUpdateFieldArr = null;\n// \tif (unUpdateFields && unUpdateFields != \"\") {\n// \t\tunUpdateFieldArr = unUpdateFields.split(\",\");\n// \t}\n// \t// add and update new item\n// \tnewItems.some(function (el) {\n// \t\tvar new_key_val = el[field_key_name];\n// \t\tvar oldItem = Libs.findIndex(oldItems, field_key_name, new_key_val, true);\n// \t\tif (oldItem == -1) {\n// \t\t\toldItems.push(el);\n// \t\t} else {\n// \t\t\tfor (var key in el) {\n// \t\t\t\tvar is_update = true;\n// \t\t\t\tif (unUpdateFieldArr && unUpdateFieldArr.length > 0\n// \t\t\t\t\t&& unUpdateFieldArr.indexOf(key) >= 0) {\n// \t\t\t\t\tis_update = false;\n// \t\t\t\t}\n// \t\t\t\tif (is_update) {\n// \t\t\t\t\toldItem[key] = el[key];\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t});\n// \t// remove item not in new items\n// \tfor (var index = oldItems.length - 1; index >= 0; index--) {\n// \t\tvar item = oldItems[index];\n// \t\tvar new_key_val = item[field_key_name];\n// \t\t// update\n// \t\tvar newItem = Libs.findIndex(newItems, field_key_name, new_key_val, true);\n// \t\tif (newItem == -1) {\n// \t\t\tdeletedList.push(item);\n// \t\t\toldItems.splice(index, 1);\n// \t\t}\n// \t}\n// \treturn deletedList;\n// };\n// /**\n//  * @description Check editor data\n//  * @author LuyenNguyen 2018-11-04\n//  * @param string str\n//  * @returns boolean\n//  */\n// Libs.checkEditorEmpty = function (str) {\n// \tif (Libs.isBlank(str)) return false;\n// \tstr = str.replace(/<\\/?p[^>]*>/g, \"\");\n// \tstr = str.replace(/\\s|\\&nbsp;|\\(|\\)|\\（|\\）/g, '');\n// \tif (!str) return false;\n// \treturn true;\n// }\n// /**\n//  * @description Check onClick or doubleClick\n//  * @author LuyenNguyen 2018-11-04\n//  * @param func onClick\n//  * @param func onDblClick\n//  * @param int delay: time delay\n//  */\n// Libs.getClickHandler = function (onClick, onDblClick, delay) {\n// \tvar timeoutID = null;\n// \tdelay = delay || 250;\n// \treturn function (event) {\n// \t\tif (!timeoutID) {\n// \t\t\ttimeoutID = setTimeout(function () {\n// \t\t\t\tonClick(event);\n// \t\t\t\ttimeoutID = null\n// \t\t\t}, delay);\n// \t\t} else {\n// \t\t\ttimeoutID = clearTimeout(timeoutID);\n// \t\t\tonDblClick(event);\n// \t\t}\n// \t};\n// }\n// Libs.padLeft = function (str, number, digit) {\n// \treturn Array(number - String(str).length + 1).join(digit || '0') + str;\n// }\n// /**\n// * @description Rounding\n//  * (0.55 -> 0.6, 0.54 -> 0.5)\n//  * @author LuyenNguyen 2018-11-04\n//  */\n// Libs.round = function (number, decimals) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \treturn Number((Math.round(number + \"e\" + decimals) + \"e-\" + decimals));\n// };\n// Libs.getCurrentDate = function (format) {\n// \tformat = (!format || typeof format !== 'string') ? 'DD/MM/YYYY' : format;\n// \treturn moment().format(format);\n// }\n// /**\n//  * Add Days\n//  */\n// Libs.addDays = function (date, days) {\n// \tvar result = new Date(date);\n// \tresult.setDate(result.getDate() + days);\n// \treturn result;\n// }\n// /**\n//  * Valid date checks\n//  * @author Minh.Pham 2019-02-19\n//  * @param from_date  từ ngày\n//  * @param format định dạng kiểu ngày truyền vào\n//  * @returns bool\n//  */\n// Libs.isValidDate = function (from_date, format) {\n// \tfrom_date = moment(from_date, format.toUpperCase());\n// \treturn from_date.isValid();\n// }\n// /**\n// * @description Gọi lại sự kiện sau khi gọi collapse cho element bootstrap\n// * @param function callback: nhận một tham số là status nếu true collapse là show và ngược lại\n// * @param string selector: tên id hoặc class\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.collapseCallback = function (func, selector) {\n// \tif (Libs.isBlank(selector)) {\n// \t\tselector = $('#group-advance-search');\n// \t}\n// \telse {\n// \t\tselector = $('.' + selector);\n// \t\tif (!selector || selector.length <= 0) {\n// \t\t\tselector = $('#' + selector);\n// \t\t}\n// \t}\n// \tif (!selector || selector.length <= 0 || !func || typeof func !== 'function') return;\n// \tselector.on('hidden.bs.collapse', function () {\n// \t\tfunc(false);\n// \t});\n// \tselector.on('show.bs.collapse', function () {\n// \t\tfunc(true);\n// \t});\n// }\n// /**\n// * @description Thêm class để tính lại chiều cao của màn hình bên phải luôn full trong trường hợp không có button dưới footer\n// * @param boolean|string isRemove: Nếu có giá trị sẽ remove class content-full và trả về trạng thái ban đầu\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.addClassContentFull = function (isRemove) {\n// \tlet content = $('#main-container>.content');\n// \tif (!content || content.length <= 0) return;\n// \tif (!Libs.isBlank(isRemove)) {\n// \t\tcontent.removeClass('content-full');\n// \t}\n// \telse {\n// \t\tcontent.addClass('content-full');\n// \t}\n// }\n// /**\n// * @description Làm tròn số\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param decimal số thập phân\n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundNumber = function (number, decimals = 0, type = 0) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \ttype = type * 1;\n// \tswitch(type){\n// \t\tcase -1:\n// \t\t\treturn roundTo.down(number, decimals);\n// \t\tcase 1:\n// \t\t\treturn roundTo.up(number, decimals);\n// \t\tdefault:\n// \t\t\treturn roundTo(number, decimals);\n// \t}\n// };\n// /**\n// * @description Làm tròn số theo format\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param format #,###.## \n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundByFormat = function (number, format, type = 0) {\n// \treturn Libs.roundNumber(number, Libs.getDecimalsOfFomat(format), type);\n// };\n// /**\n// * @description Lấy số decimals(phần thập phân) của format\n// * @author Minh.Pham 2018-12-04\n// * @param format #,###.## \n//  */\n// Libs.getDecimalsOfFomat = function (format) {\n// \tlet decimals = 0;\n// \tif(!Libs.isBlank(format)){\n// \t\ttry{\n// \t\t\tlet arr = format.split('.');\n// \t\t\tif(arr.length >= 2){\n// \t\t\t\tdecimals = arr[arr.length -1].length;\n// \t\t\t}\n// \t\t}catch(ex){\n// \t\t}\n// \t}\n// \treturn decimals;\n// };\n// /**\n// * @description insert 1 item tới array\n// * ex: insertAt(arr, 1, \"x\", \"y\", \"z\");\n// * @author TichNguyen 2018-12-04\n// * @param array mãng\n// * @param index insert tại index \n//  */\n// Libs.insertAt=function(array, index) {\n//     var arrayToInsert = Array.prototype.splice.apply(arguments, [2]);\n//     return Libs.insertArrayAt(array, index, arrayToInsert);\n// };\n// /**\n// * @description insert 1 array to array\n// * ex: var arrToInsert = [\"x\", \"y\", \"z\"];\n// * \t  insertArrayAt(arr, 1, arrToInsert);\n// * @author TichNguyen 2018-12-04\n// * @param array\n// * @param index insert tại index \n// * @param arrayToInsert\n//  */\n// Libs.insertArrayAt=function(array, index, arrayToInsert) {\n// \tif(!arrayToInsert || arrayToInsert.length<=0) return array;\n//     Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n//     return array;\n// }\n// /**\n//  * Move the element in the array\n//  */\n// Libs.arrayMove = function(arr, old_index, new_index) {\n//     if (new_index >= arr.length) {\n//         var k = new_index - arr.length + 1;\n//         while (k--) {\n//             arr.push(undefined);\n//         }\n//     }\n//     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n//     return arr; // for testing\n// };\n// /**\n//  * Hàm resize image \n//  * @param {image}: Image() hình cần resize\n//  * @param {maxWidth}: decimal chiều rộng tối đa\n//  * @param {maxHeight}: decimal chiều cao tối đa\n//  * @param {quality}: decimal chất lượng hình từ 0 => 1\n//  */\n// Libs.resizeImage = function(image, maxWidth, maxHeight, quality) {\n//     var canvas = document.createElement('canvas');\n//     var width = image.width;\n//     var height = image.height;\n//     if (width > height) {\n//         if (width > maxWidth) {\n//             height = Math.round(height * maxWidth / width);\n//             width = maxWidth;\n//         }\n//     } else {\n//         if (height > maxHeight) {\n//             width = Math.round(width * maxHeight / height);\n//             height = maxHeight;\n//         }\n//     }\n//     canvas.width = width;\n//     canvas.height = height;\n//     var ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(image, 0, 0, width, height);\n//     return canvas.toDataURL(\"image/jpeg\", quality);\n// }\n// /**\n//  * @description Check the array data \n//  * @param Array arr\n//  * @author: Minh.Pham\n//  * @return boolean\n//  */\n// Libs.isArray = function (arr) {\n// \tif (arr == null) return true;\n// \tif (!Array.isArray(arr)) return false;\n// \treturn true;\n// }\n// String.prototype.format = function() {\n// \ta = this;\n// \tfor (k in arguments) {\n// \t  a = a.replace(\"{\" + k + \"}\", arguments[k])\n// \t}\n// \treturn a\n//   }\n// Libs.getMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n//     while (date <= endDate)\n//     {\n//         var stringDate = monthNameList[date.getMonth()] + \" \" + date.getFullYear();\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n//         resultList.push({\n//             str:stringDate,\n//             first:firstDay,\n//             last:lastDay,\n//         });\n//         date.setMonth(date.getMonth() + 1);\n//     }\n//     return resultList;\n// };\n// Libs.getStringMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n//     while (date <= endDate)\n//     {\n// \t\tvar stringDate = monthNameList[date.getMonth()];\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n// \t\tresultList.push(stringDate)\n//         date.setMonth(date.getMonth() + 1);\n//     }\n//     return resultList;\n// };\n// /**\n// * @description get from_date, to_date from year ago to current year\n//  * @author Minh.Pham 2019-06-21\n//  */\n// Libs.getParamDayByYear =  function(numerOfYear, format){\n// \tlet currentDate = moment().toDate();\n// \tlet month = currentDate.getMonth();\n// \tlet day = currentDate.getDate();\n// \tlet year  = currentDate.getFullYear();\n// \treturn {\n// \t\tfrom_date: moment().date(1).month(month).year(year - numerOfYear).format(format),\n// \t\tto_date: moment().date(day).month(month).year(year).format(format),\n// \t};\n// }\n// // \n// /**\n// * @description date array from start_date -> end_date\n//  * @author Long.Pham 2019-06-21\n//  * @param start,  end new Date('2019-12-12')\n//  */\n// Libs.getDateArray =  function(start, end){\n// \tvar arr = new Array();\n// \tvar dt = new Date(start);\n//     while (dt <= end) {\n//         arr.push(moment(new Date(dt)).format('DD/MM/YYYY'));\n//         dt.setDate(dt.getDate() + 1);\n//     }\n//     return arr;\n// }\n\n\nexport default Libs;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/utils/Libs.js"],"names":["formatNum","require","roundTo","moment","Libs","safeTrim","str","trim","toString","e","isBlank","undefined","isObjectEmpty","obj","hasOwnProperty","Object","prototype","length","key","call","find","items","field","value","i","isArrayData","arr","Array","isArray","isNumber","val","replace","test","err","checkExtensionFile","file_name","ext_type","extImg","extFile","extAll","extVideo","ext","substr","lastIndexOf","convertStringToNumber","Number","pattern","round","isNaN","comma","decimal","afterDecimalNum","regex","RegExp","myArray","index","afterDecimal","exec","opts","up","down","stringAssign","data","REG_ASSIGN_VARIBLE","$0","$1","String","convertStrtoDate","_date","format","date","arrFormat","_isValid","_d","toLowerCase","dateFormat","from_format","checkBitOnOff","nByte","bitIndex","result","parseInt","Math","pow","getCurrentDDMMYYYY","Date","year","getFullYear","month","getMonth","padStart","day","getDate","SHA3","plainText","CryptoLib","base64Encrypt","plaintext","base64Decrypt","ciph","generateSKU","id_company","lenUpper","uniqId","getTime","random","d","n","randomString","uppercase","randomUppercase","floor","substring","generateStrRandom","lenLower","lenSpec","lenNumber","lowercase","specialChar","charNumber","randomLowercase","randomSpecialChar","randomCharNumber","split","sort","join","compareDate","from_date","to_date","toUpperCase","startOf","isAfter","isBefore","checkIfImageExists","url","callback","img","Image","src","complete","onload","onerror","checkImageExists","exists","getCurrentMMDDYYYYHI","hour","getHours","mi","getMinutes","addMinutes","minutes","setMinutes","addDays","days","setDate","addMonths","months","setMonth","addYears","years","setFullYear","convertAllFormatDate","to_format","formatElectricalUnit","prefix","parseFloat","toFixed","getStringMonthNumber","number","monthNameList","getUnique","comp","unique","map","final","indexOf","filter","getFileUrl","filePath","server_data"],"mappings":"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GA;AACA;AACA;AACA;AACA;;;AACAxK,IAAI,CAAC6K,UAAL,GAAkB,UAAUC,QAAV,EAAoBC,WAApB,EAAiC;AAClD,MAAI/K,IAAI,CAACM,OAAL,CAAawK,QAAb,CAAJ,EAA4B;AAC5B,SAAOC,WAAW,GAAG,GAAd,GAAoBD,QAA3B;AACA,CAHD,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAe9K,IAAf","sourcesContent":["// import React from 'react';\nvar formatNum = require('format-number');\nconst roundTo = require('round-to');\nconst moment = require(\"moment\");\n// import { toast } from 'react-toastify';\nvar Libs = {};\n\n/**\n * trim string\n * @param str\n * @returns\n */\nLibs.safeTrim = (str) => {\n\ttry {\n\t\treturn (typeof str === 'string') ? str.trim() : str.toString();\n\t} catch (e) {\n\t\treturn \"\";\n\t}\n};\n\n/**\n * check blank object or string\n * @param str\n * @returns {Boolean}\n */\nLibs.isBlank = (str) => {\n\tif (typeof str === undefined || str === null || Libs.safeTrim(str) === \"\") {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Check valid object\n * @param {*} obj \n */\nLibs.isObjectEmpty = (obj) => {\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tif (obj == null) return true;\n\tif (obj.length > 0) return false;\n\tif (obj.length === 0) return true;\n\tif (typeof obj !== \"object\") return true;\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) return false;\n\t}\n\treturn true;\n}\n\n/**\n * Find objects in arrays by value and field\n * @param items\n * @param field\n * @param value\n * @returns\n */\nLibs.find = function (items, field, value) {\n\tif (!items)\n\t\treturn null;\n\tfor (var i = 0; i < items.length; i++) {\n\t\tif (value === items[i][field]) {\n\t\t\treturn items[i];\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n * @description Check the array data \n * @param Array arr\n * @author: Luyen Nguyen\n * @return boolean\n */\nLibs.isArrayData = function (arr) {\n\tif (Libs.isBlank(arr)) return false;\n\tif (!Array.isArray(arr) || arr.length <= 0) return false;\n\treturn true;\n}\n\nLibs.isNumber = function (value) {\n\ttry {\n\t\tvar val = value;\n\t\tif (typeof val === 'undefined' || val === null) return false;\n\t\tif (typeof val === 'number') {\n\t\t\tval = val.toString();\n\t\t}\n\t\tval = val.replace(/^-/, '');\n\t\treturn /^[0-9\\b]+$/.test(val);\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n\n/**\n* @description Check ext file upload\n* @author Long.Pham 10/05/2021\n* @param  String file_name: file name\n* @param  {int} ext_type: undefined: all file, 1: only image, 2: only file, 3: video\n*/\nLibs.checkExtensionFile = function (file_name, ext_type) {\n\tif (file_name === 'undefined' || file_name === null) return;\n\tvar extImg = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF'];\n\tvar extFile = ['xlsx', 'xls', 'XLSX', 'XLS', 'doc', 'DOC', 'docs', 'DOCS', 'pdf', 'PDF'];\n\tvar extAll = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF', 'doc', 'DOC', 'docs', 'DOCS', 'docx', 'DOCX', 'pdf', 'PDF', 'mp4', 'MP4', 'avi', 'AVI'];\n\tvar extVideo = ['mp4', 'MP4', 'avi', 'AVI'];\n\tvar ext = file_name.substr((file_name.lastIndexOf('.') + 1));\n\tif (ext_type === 'undefined' || ext_type === null) {\n\t\tfor (let i = 0; i < extAll.length; i++) {\n\t\t\tif (ext === extAll[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 1) {\n\t\tfor (let i = 0; i < extImg.length; i++) {\n\t\t\tif (ext === extImg[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 2) {\n\t\tfor (let i = 0; i < extFile.length; i++) {\n\t\t\tif (ext === extFile[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 3) {\n\t\tfor (let i = 0; i < extVideo.length; i++) {\n\t\t\tif (ext === extVideo[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nLibs.convertStringToNumber = function (value) {\n\ttry {\n\t\tvar val = value;\n\t\tif (typeof val === 'undefined' || val == null) return null;\n\t\tif (typeof val === 'number') {\n\t\t\tval = val.toString();\n\t\t}\n\t\treturn Number(val.replace(/[^0-9]+/g, \"\"));\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n* Format number according to the format option in formatNum format of the library\n* By default #, ###. ## separated by commas, spread after decimal 2 digits\n*\n* @param {String} val\n* @param {String} pattern default #,###.##\n* @param {int} round default 0: Default rounding -1: rounding down, 1: rounding up\n* @author:  MinhPham 2018-11-18 11:16:34 \n*/\nLibs.formatNum = function (val, pattern = \"#,###.##\", round = 0) {\n\tif (Libs.isBlank(val) || isNaN(val)) {\n\t\treturn \"\";\n\t}\n\tval = val * 1;\n\tlet comma = ','\n\tlet decimal = '.'\n\tlet afterDecimalNum = 0;//After the decimal point take some numbers\n\tif (Libs.isBlank(pattern)) {\n\t\tpattern = \"#,###.##\";\n\t}\n\tconst regex = new RegExp(\"[,.]+\", \"ig\");\n\tlet myArray;\n\tlet index = 0;\n\tlet afterDecimal = \"\";\n\twhile ((myArray = regex.exec(pattern)) !== null) {\n\t\t//The first time is the comma\n\t\tif (index === 0) {\n\t\t\tcomma = myArray[0];\n\t\t} else if (comma !== myArray[0]) {\n\t\t\t//The last time is the decimal separator\n\t\t\tafterDecimal = myArray[0];\n\t\t}\n\t\tindex++;\n\t}\n\tif (afterDecimal !== \"\") {\n\t\tdecimal = afterDecimal;\n\t\tafterDecimalNum = pattern.length - (pattern.lastIndexOf(decimal) + 1)\n\t}\n\n\tvar opts = {\n\t\t\"negativeType\": 'left',\n\t\t\"prefix\": '',\n\t\t\"suffix\": '',\n\t\t\"integerSeparator\": comma,\n\t\t\"decimalsSeparator\": '',\n\t\t\"decimal\": decimal,\n\t\t\"padLeft\": -1,\n\t\t\"round\": afterDecimalNum\n\t};\n\tif (round === 1) {\n\t\tval = roundTo.up(val, afterDecimalNum);\n\t} else if (round === 0) {\n\t\tval = roundTo(val, afterDecimalNum);\n\t} else {\n\t\tval = roundTo.down(val, afterDecimalNum);\n\t}\n\n\treturn formatNum(opts)(val);\n}\n\n/**\n * string format\n * ex: let a = Libs.stringAssign(\"hello $<0> $<1>\", [\"world\",\"rrr\"])\n * @param {string template} str \n * @param {Array} data \n * @param {regex} REG_ASSIGN_VARIBLE \n */\nLibs.stringAssign = function (str, data, REG_ASSIGN_VARIBLE) {\n\tif (Libs.isBlank(REG_ASSIGN_VARIBLE)) {\n\t\tREG_ASSIGN_VARIBLE = /\\$\\<([^{}]*?)\\>/g;\n\t}\n\treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n\t\treturn String(data[$1]);\n\t});\n};\n\n\nLibs.convertStrtoDate = (_date, format) => {\n\tif (null === _date || typeof _date === 'undefined' || _date === '') {\n\t\treturn '';\n\t}\n\tlet date = _date;\n\tif (typeof format === \"undefined\" || Libs.isBlank(format)) {\n\t\tlet arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"]\n\t\tfor (let i = 0; i < arrFormat.length; i++) {\n\t\t\tdate = moment(_date, arrFormat[i]);\n\t\t\tif (date._isValid) {\n\t\t\t\treturn date._d;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (format.toLowerCase() === 'utc') {\n\t\t\tdate = moment(_date);\n\t\t} else date = moment(_date, format);\n\t\tif (!date._isValid) {\n\t\t\treturn _date;\n\t\t}\n\t\treturn date._d;\n\t}\n\treturn _date;\n}\n\n\n/**\n  * format date to another format\n  * @param {String} _date \n  * @param {String} format \n  * @param {String} from_format \n  */\nLibs.dateFormat = (_date, format = \"DD/MM/YYYY HH:mm:ss\", from_format) => {\n\tif (null === _date || typeof _date === 'undefined' || _date === '') {\n\t\treturn '';\n\t}\n\tlet date = _date;\n\tif (typeof from_format === \"undefined\" || Libs.isBlank(from_format)) {\n\t\tlet arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"]\n\t\tfor (let i = 0; i < arrFormat.length; i++) {\n\t\t\tdate = moment(_date, arrFormat[i]);\n\t\t\tif (date._isValid) {\n\t\t\t\treturn date.format(format);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (from_format.toLowerCase() === 'utc') {\n\t\t\tdate = moment(_date);\n\t\t} else date = moment(_date, from_format);\n\t\tif (!date._isValid) {\n\t\t\treturn _date;\n\t\t}\n\t\treturn date.format(format);\n\t}\n\treturn _date;\n}\n\n/**\n * Check input on/off 111111111 : nByte _________ 000000100 : bitIndex:2\n * =>pow(2,2){base 10}= 000000100{base 2} =========== 000000100=>input 3 is\n * on.\n *\n * @param nByte\n * @param bitIndex\n * @return\n */\nLibs.checkBitOnOff = (nByte, bitIndex) => {\n\tlet result = nByte & parseInt(Math.pow(2, bitIndex));\n\treturn result != 0 ? true : false;\n}\n\nLibs.getCurrentDDMMYYYY = function () {\n\tlet date = new Date();\n\tlet year = date.getFullYear().toString();\n\tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\tlet day = date.getDate().toString().padStart(2, \"0\");\n\treturn day + \"/\" + month + \"/\" + year;\n}\n\n\nLibs.SHA3 = function (plainText) {\n\tif (typeof plainText === 'undefined') {\n\t\treturn plainText;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.SHA3(plainText);\n}\n\n\n/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */\nLibs.base64Encrypt = function (plaintext) {\n\tif (Libs.isBlank(plaintext)) {\n\t\treturn plaintext;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.base64Encrypt(plaintext);\n}\n/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */\nLibs.base64Decrypt = function (ciph) {\n\tif (Libs.isBlank(ciph)) {\n\t\treturn ciph;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.base64Decrypt(ciph);\n}\n/**\n * @description Generate sku\n * @author: Long.Pham\n * @return str\n */\nLibs.generateSKU = function (id_company, lenUpper) {\n\n\tvar uniqId = Math.round(new Date().getTime() + (Math.random() * 100));\n\tvar d = new Date();\n\tvar n = d.getTime();\n\tvar randomString = '';\n\tvar uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor (var i = 0; i < lenUpper; i++) {\n\t\tvar randomUppercase = Math.floor(Math.random() * uppercase.length);\n\t\trandomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n\t}\n\n\treturn !Libs.isBlank(id_company) ? (id_company + randomString + uniqId) : (randomString + uniqId);\n};\n\n/**\n * @description Generate random string chữ hoa, chữ thường, số, ký tự đặc biệt\n * @author: Long.Pham\n * @return str\n */\n\nLibs.generateStrRandom = function (lenUpper, lenLower, lenSpec, lenNumber) {\n\tvar uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tvar lowercase = 'abcdefghijklmnopqrstuvwxyz';\n\tvar specialChar = '!@#$%^&*(){}<>?';\n\tvar charNumber = '0123456789';\n\tvar randomString = '';\n\tfor (let i = 0; i < lenUpper; i++) {\n\t\tvar randomUppercase = Math.floor(Math.random() * uppercase.length);\n\t\trandomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n\t}\n\tfor (let i = 0; i < lenLower; i++) {\n\t\tvar randomLowercase = Math.floor(Math.random() * lowercase.length);\n\t\trandomString += lowercase.substring(randomLowercase, randomLowercase + 1);\n\t}\n\tfor (let i = 0; i < lenSpec; i++) {\n\t\tvar randomSpecialChar = Math.floor(Math.random() * specialChar.length);\n\t\trandomString += specialChar.substring(randomSpecialChar, randomSpecialChar + 1);\n\t}\n\tfor (let i = 0; i < lenNumber; i++) {\n\t\tvar randomCharNumber = Math.floor(Math.random() * charNumber.length);\n\t\trandomString += charNumber.substring(randomCharNumber, randomCharNumber + 1);\n\t}\n\tvar str = randomString.split(\"\");\n\treturn str.sort(function () { return 0.5 - Math.random() }).join(\"\");\n}\n\n/**\n * Compare date\n * @author Long.Pham 2018-11-21\n * @param from_date  from date\n * @param format date format\n * @param to_date to date, default is current date\n * @returns -1: less, 0: equal, 1: bigger\n */\nLibs.compareDate = function (from_date, format, to_date = null) {\n\tfrom_date = moment(from_date, format.toUpperCase());\n\tif (to_date == null) {\n\t\tto_date = moment(new Date()).startOf('day');;\n\t} else {\n\t\tto_date = moment(to_date, format);\n\t}\n\tif (from_date.isAfter(to_date)) {\n\t\treturn 1;\n\t}\n\tif (from_date.isBefore(to_date)) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nLibs.checkIfImageExists = function (url, callback) {\n\tconst img = new Image();\n\timg.src = url;\n\tif (img.complete) {\n\t\tcallback(true);\n\t} else {\n\t\timg.onload = () => {\n\t\t\tcallback(true);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\tcallback(false);\n\t\t};\n\t}\n};\n\nLibs.checkImageExists = function (url) {\n\tthis.checkIfImageExists(url, (exists) => {\n\t\treturn exists ? true : false;\n\t});\n}\n\n/**\n * @description get current date\n * @author Long.Pham 2020-10-26\n * @return string date\n */\nLibs.getCurrentMMDDYYYYHI = function () {\n\tlet date = new Date();\n\tlet year = date.getFullYear().toString();\n\tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\tlet day = date.getDate().toString().padStart(2, \"0\");\n\tlet hour = date.getHours().toString().padStart(2, \"0\");\n\tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n\treturn month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + mi;\n}\n\n/**\n * Add Minutes\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\nLibs.addMinutes = function (date, minutes) {\n\tvar result = new Date(date);\n\tresult.setMinutes(result.getMinutes() + minutes);\n\treturn result;\n}\n\n/**\n * Add Days\n * @author Long.Pham 2020-10-26\n * @param date \n * @param days\n * @returns date\n */\nLibs.addDays = function (date, days) {\n\tvar result = new Date(date);\n\tresult.setDate(result.getDate() + days);\n\treturn result;\n}\n\n/**\n * Add Months\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\nLibs.addMonths = function (date, months) {\n\tvar result = new Date(date);\n\tresult.setMonth(result.getMonth() + months);\n\treturn result;\n}\n\n/**\n * Add Years\n * @author Long.Pham 2020-10-26\n * @param date \n * @param years\n * @returns date\n */\nLibs.addYears = function (date, years) {\n\tvar result = new Date(date);\n\tresult.setFullYear(result.getFullYear() + years);\n\treturn result;\n}\n\n\n/**\n * @description Convert Data to DB\n * @author Long.Pham 2020-10-26\n * @param {String} _date \n * @param {String} format \n * @param {String} from_format\n */\nLibs.convertAllFormatDate = (_date, from_format = \"MM/DD/YYYY HH:mm:ss\", to_format = \"YYYY-MM-DD HH:mm:ss\") => {\n\tif (null == _date || typeof _date === 'undefined' || _date == '') {\n\t\treturn '';\n\t}\n\tlet date = moment(_date, from_format);\n\tif (!date._isValid) {\n\t\treturn _date;\n\t}\n\treturn date.format(to_format);\n}\n\n\n/**\n * Format electrical unit \n * @author Long.Pham 2020-10-26\n * @param {double} data: data\n * @return {string}: format data\n */\n\nLibs.formatElectricalUnit = function (data, prefix = '') {\n\tif (Libs.isBlank(data) || data <= 0) return \"0 kW\" + prefix;\n\n\tif (data < 1000) {\n\t\treturn Number.parseFloat(data).toFixed(2) + \" w\" + prefix;\n\t} else if (data >= 1000 && data < 1000000) {\n\t\treturn Number.parseFloat(data / 1000).toFixed(2) + \" kW\" + prefix;\n\t} else if (data >= 1000000 && data < 1000000000) {\n\t\treturn Number.parseFloat(data / 1000000).toFixed(2) + \" MW\" + prefix;\n\t} else if (data >= 1000000000 && data < 1000000000000) {\n\t\treturn Number.parseFloat(data / 1000000000).toFixed(2) + \" GW\" + prefix;\n\t}\n\telse if (data >= 1000000000000 && data < 1000000000000000) {\n\t\treturn Number.parseFloat(data / 1000000000000).toFixed(2) + \" TW\" + prefix;\n\t}\n}\n\n\nLibs.getStringMonthNumber = function (number) {\n\tif (number <= 0 || number > 12) return null;\n\tvar monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\treturn monthNameList[number - 1];\n}\n\nLibs.getUnique = function (arr, comp) {\n\tconst unique = arr\n\t\t.map(e => e[comp])\n\t\t.map((e, i, final) => final.indexOf(e) === i && i)\n\t\t.filter(e => arr[e]).map(e => arr[e]);\n\n\treturn unique;\n}\n\n\n\n\n/**\n * @description Generate random string\n * @author: Luyen Nguyen\n * @return str\n */\n// Libs.generateStrRandom = function (len, charSet) {\n// \tcharSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*?';\n//     var randomString = '';\n//     for (var i = 0; i < len; i++) {\n//         var randomPoz = Math.floor(Math.random() * charSet.length);\n//         randomString += charSet.substring(randomPoz,randomPoz+1);\n//     }\n//     return randomString;\n// }\n\n\n// Libs.baseUrl = function () {\n// \tlet url = \"\";\n// \tconst protocol = location.protocol;\n// \tconst API_HOST = process.api_host || Constants.API_HOST;\n// \tconst API_HTTP_PORT = process.api_http_port || Constants.API_HTTP_PORT;\n// \tconst API_HTTPS_PORT = process.api_https_port || Constants.API_HTTPS_PORT;\n// \tif (protocol == 'https:') {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTPS_PORT;\n// \t} else {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTP_PORT;\n// \t}\n// \treturn url; \n// }\n\n\n/**\n * @description Get file url\n * @author Long.Pham 14/06/2021\n * @param {string} filePath: file path\n */\nLibs.getFileUrl = function (filePath, server_data) {\n\tif (Libs.isBlank(filePath)) return;\n\treturn server_data + \"/\" + filePath;\n}\n\n// Libs.rEnter = (event) => {\n// \tvar _this = $(event.target);\n// \tif (event.which === 13) {\n// \t\tvar sign = event.shiftKey ? -1 : 1;\n// \t\tevent.preventDefault();\n// \t\tvar fields = _this.parents('form:eq(0),body').find('input,textarea');\n// \t\tvar index = fields.index(_this);\n// \t\tif (index > -1 && (index + 1 * sign) < fields.length)\n// \t\t\tfields.eq(index + 1 * sign).focus();\n// \t}\n// }\n\n\n\n\n// /**\n//  * return json result\n//  * @param unknown $status\n//  * @param unknown $mess\n//  * @param unknown $data\n//  */\n// Libs.returnJsonResult = (status, mess, data, total_row) => {\n// \tvar result = {};\n// \tresult.status = status;\n// \tresult.mess = mess ? mess : \"\";\n// \tresult.data = data ? data : \"\";\n// \tresult.total_row = total_row ? total_row : 0;\n// \treturn result;\n// }\n\n// Libs.convertObjectToJson = (object) => {\n// \treturn JSON.stringify(object);\n// }\n\n\n\n\n// /**\n//  * Convert date to milisecond\n//  */\n// Libs.convertDateToMilliseconds = (date, char) => {\n// \tvar date = $(\"#datepicker\").val().split(\"-\");\n// \tvar f = new Date(date[2], date[1] - 1, date[0]);\n// \tif (null == f || \"undefined\" === typeof f)\n// \t\treturn 0;\n// \treturn f.getTime();\n// }\n\n// Libs.convertMillisecondsToDataFormat = (milliseconds, isShowHour = true) => {\n// \tmilliseconds = parseInt(milliseconds);\n// \tif (milliseconds == null || milliseconds == 0) return \"\";\n// \tvar dateObj = new Date(milliseconds);\n// \tvar day = (dateObj.getDate() < 10) ? (\"0\" + dateObj.getDate()) : dateObj.getDate();\n// \tvar month = (dateObj.getMonth() + 1 < 10) ? (\"0\" + (dateObj.getMonth() + 1)) : (dateObj.getMonth() + 1);\n// \tvar year = dateObj.getFullYear();\n// \tvar hour = (dateObj.getHours() < 10) ? (\"0\" + dateObj.getHours()) : dateObj.getHours();\n// \tvar minute = (dateObj.getMinutes() < 10) ? (\"0\" + dateObj.getMinutes()) : dateObj.getMinutes();\n// \tvar second = (dateObj.getSeconds() < 10) ? (\"0\" + dateObj.getSeconds()) : dateObj.getSeconds();\n// \tif (isShowHour)\n// \t\treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute + \":\" + second;\n// \telse\n// \t\treturn day + \"/\" + month + \"/\" + year\n// }\n// Libs.convertMillisecondsToDate = (time) => {\n// \tvar date = new Date(time);\n// \treturn date;\n// }\n// Libs.scrollToBottom = (your_div) => {\n\n// \tvar objDiv = your_div;\n// \t//console.log(\"objDiv.scrollTop :\" + objDiv.scrollTop);\n// \t//console.log(\"objDiv.scrollHeight - objDiv.offsetHeight :\" + (objDiv.scrollHeight - objDiv.offsetHeight));\n// \tif (objDiv.scrollTop >= (objDiv.scrollHeight - objDiv.offsetHeight)) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// Libs.convertStr2Date = (_date, _format, _delimiter) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\t;\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = _format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = _date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \tmonth -= 1;\n// \tvar formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);\n// \treturn formatedDate;\n// }\n// Libs.getMillisecondsFromDataPickerFrom = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn 0;\n// \t}\n// \treturn new Date(date).getTime();\n// }\n// Libs.getMillisecondsFromDataPickerTo = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn new Date().getTime() + 86400000;\n// \t}\n// \treturn new Date(date).getTime() + 86400000;\n// }\n\n\n// Libs.getCurrentDDMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year;\n// }\n\n// Libs.getCurrentMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn  month + \"/\" + year;\n// }\n\n// Libs.getCurrentDDMMYYYYHI = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \tlet hour = date.getHours().toString().padStart(2, \"0\");\n// \tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n// \tlet ss = date.getSeconds().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + mi;\n// }\n\n\n// \treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n// \t\treturn String(data[$1]);\n// \t});\n// };\n// Libs.printError = (messages) => {\n// \tif (!(messages instanceof Array)) {\n// \t\treturn \"\";\n// \t}\n// \tvar str = \"\";\n// \tif (messages.length > 0) {\n// \t\tfor (var me in messages) {\n// \t\t\tvar message = messages[me];\n// \t\t\tfor (var k in message) {\n// \t\t\t\tstr += message[k];\n// \t\t\t}\n// \t\t}\n// \t}\n\n// \treturn str;\n// }\n\n// Libs.md5 = function (plainText) {\n// \tif (typeof plainText === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.md5(plainText);\n// }\n\n\n// Libs.AESEncrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESEncrypt(plainText, secretKey);\n// }\n\n\n// Libs.AESDecrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESDecrypt(plainText, secretKey);\n// }\n\n\n// /**\n//  * encrypt\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.encrypt = function (plaintext) {\n// \tif (Libs.isBlank(plaintext)) {\n// \t\treturn plaintext;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.encrypt(plaintext);\n// }\n\n// /**\n//  * Taka Encode\n//  * @param plaintext \n//  * @return string\n//  */\n\n// Libs.takaEncode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n\n// \tvar chars = text.split('');\n// \tlet str = '';\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'id', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.value;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n\n\n// /**\n//  * Taka Decode\n//  * @param plaintext \n//  * @return string\n//  */\n\n// Libs.takaDecode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tlet chars = [], str = '';\n// \tvar start = 0;\n// \tfor(var i = 0; i< text.length/ 3; i++){\n// \t\tchars.push(text.substr(start, 3));\n// \t\tstart +=3;\n// \t}\n\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'value', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.id;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n\n\n\n\n// Libs.convertEmptyPropToNullProp = function (object) {\n// \tif (typeof object != 'object') return {};\n// \tfor (var key in object) {\n// \t\tobject[key] = (object[key] === '') ? null : object[key];\n// \t}\n// \treturn object;\n// }\n\n\n\n\n\n\n\n// Libs.isInteger = function (value) {\n// \ttry {\n// \t\tvar val = value;\n// \t\tif (typeof val === 'undefined' || val == null) return false;\n// \t\tif (typeof val === 'number') {\n// \t\t\tval = val.toString();\n// \t\t}\n// \t\tval = val.replace(/^-/, '');\n// \t\treturn /^(0|[1-9]\\d*)$/.test(val);\n// \t} catch (err) {\n// \t\tconsole.log(err)\n// \t\treturn false;\n// \t}\n// }\n\n// /**\n//  * Custom css to select tag using for compoent react-select\n//  */\n// Libs.customSelectStyles = {\n// \tplaceholder: styles => ({\n// \t\t...styles,\n// \t\tcolor: '#ccc'\n// \t}),\n// \tcontrol: (styles, { data, isDisabled, isFocused, isSelected }) => {\n// \t\treturn {\n// \t\t\t...styles,\n// \t\t\tminHeight: '34px',\n// \t\t\tborderColor: '#ccc !important',\n// \t\t\tboxShadow: 'unset',\n// \t\t\tbackgroundColor: isDisabled ? '#e9ecef' : '#fff'\n// \t\t}\n// \t},\n// \tclearIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tdropdownIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tcontainer: styles => ({\n// \t\t...styles,\n// \t\t'z-index': '2000',\n// \t\t'position': 'relative'\n// \t})\n// }\n\n// Libs.buildPathValidateMessage = function (path, message) {\n// \tif (typeof path !== 'string' || typeof message !== 'string')\n// \t\treturn null;\n// \tif (path.length <= 0) return null;\n// \tvar validate = {};\n// \tvalidate[path] = message;\n// \treturn validate;\n// }\n\n// /**\n// * @description get content height\n// * If passing classname, height will be calculated by screen height except offset top of first name class\n// * The remaining classnames are deducted for the remaining classname's height\n// * ex: Libs.getContentHeight(\"className1\",\"className2\",...)\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getContentHeight = function () {\n\n// \tvar contentInner = $('#main-container .content-inner');\n// \tif (contentInner === 'undefined' || contentInner == null && contentInner === '') {\n// \t\treturn;\n// \t}\n// \tlet contentInnerHeight = (contentInner.innerHeight() ? contentInner.height() : 0)\n// \tif (!arguments || arguments.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerGroup = $('.fl-btn-group');\n// \tif (!footerGroup || footerGroup.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n\n// \tvar footerOffsetTop = $(footerGroup[footerGroup.length - 1]).offset().top * 1\n// \tvar minHeight = null;\n// \tvar elementHeight = 0;\n// \tfor (let i = 0; i < arguments.length; i++) {\n// \t\tlet className = arguments[i];\n// \t\tif (!Libs.isBlank(className) && !Libs.isInteger(className)) {\n// \t\t\t//ưu tiên className\n// \t\t\tvar elements = $('.' + className);\n// \t\t\tif (!elements || elements.length <= 0) {\n// \t\t\t\t//tiến hành lấy theo id\n// \t\t\t\telements = $('#' + className);\n// \t\t\t}\n// \t\t\tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\t\t\telements.each(function () {\n// \t\t\t\t\tif (elementHeight == 0) {\n// \t\t\t\t\t\telementHeight += $(this).offset().top * 1;// - 46;//trừ cho header\n// \t\t\t\t\t} else\n// \t\t\t\t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t\t\t});\n// \t\t\t}\n// \t\t} else {\n// \t\t\tminHeight = className * 1;\n// \t\t}\n// \t}\n\n// \tvar height = 0;\n// \t//height = contentInnerHeight - (elementHeight + 5);\n// \theight = footerOffsetTop - (elementHeight + 10);//mặc định cách footer là 10px\n// \tif (minHeight == null) {\n// \t\tminHeight = 250;\n// \t}\n// \treturn height < minHeight ? minHeight : height;\n// }\n// /**\n// * @description get height by classname\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getHeightByClassName = function (className) {\n// \tif (className === 'undefined' || className == null && className === '') {\n// \t\treturn 0;\n// \t}\n// \tvar elementHeight = 0;\n// \tvar elements = $('.' + className);\n// \tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\telements.each(function () {\n// \t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t});\n// \t}\n// \treturn elementHeight;\n// }\n// /**\n//  * Round the number after a comma\n//  * @author thanh.bay 2018-09-27 11:24\n//  * @param  {string | float | int} value\n//  * @param  {int} fixed=1 : round to n numbers based on fixed value\n//  */\n// Libs.fixNumber = function (value, fixed = 1) {\n// \tif (typeof value === 'undefined' || value == null) return null;\n// \treturn parseFloat(Number.parseFloat(value).toFixed(fixed));\n// }\n\n\n// /**\n// * @description Get the element index in the array according to the field and value\n// * @author Luyen Nguyen 2018-09-28 16:10\n// * @param  array items\n// * @param String field: object you want to find in the array\n// * @param String value: compare value\n// * @param boolean isIndex: false return index, true: return object\n// * @return int|object\n// */\n// Libs.findIndex = (items, field, value, isIndex) => {\n// \tvar result = -1;\n// \tfor (var i = 0; i < items.length; i++) {\n// \t\tvalue = value + \"\";\n// \t\tvalue = (value) ? value.toLowerCase().trim() : \"\";\n// \t\tvar itemValue = items[i][field] + \"\";\n// \t\tvar itemName = (itemValue) ? itemValue.toLowerCase().trim() : \"\";\n// \t\tif (value == itemName) {\n// \t\t\tif (Libs.isBlank(isIndex)) {\n// \t\t\t\tresult = i;\n// \t\t\t}\n// \t\t\telse {\n// \t\t\t\tresult = items[i];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn result;\n// }\n// /**\n// * @description clear date input file\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.clearAllInputFile = function () {\n// \tif ($('input[type=\"file\"]').length) {\n// \t\t$('input[type=\"file\"]').val('');\n// \t}\n// \tif ($('.custom-file-label').length) {\n// \t\t$('.custom-file-label').html('');\n// \t}\n// }\n// /**\n// * @description Default configuration for tinymce\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.tinymceConfig = function (selector, readonly, height) {\n// \tif (!height) {\n// \t\theight = 150;\n// \t}\n// \tif (!selector) {\n// \t\tselector = 'textarea';\n// \t}\n// \tif (!readonly) {\n// \t\treadonly = false;\n// \t}\n// \treturn {\n// \t\tselector: selector,\n// \t\ttheme: 'modern',\n// \t\treadonly: readonly,\n// \t\theight: height,\n// \t\tplugins: 'print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists textcolor wordcount imagetools contextmenu colorpicker textpattern'\n// \t}\n// }\n\n// /**\n//  * @description Set select selected\n//  * @param {array} data \n//  * @author: thanh.bay\n//  */\n// Libs.setSelectSelected = function (selector, value) {\n// \tif (!selector || selector === 'undefined' && selector == null) return;\n// \t$(selector).val(value);\n// \t$(selector).trigger('change.select2');\n// }\n\n// /**\n//  * @description convert date to string\n//  * @param {array} data \n//  * @author: Minh.Pham\n//  */\n// Libs.convertSQLDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar date = new Date(_date);\n// \tvar result = Libs.convertDateToStr(date, _format);\n// \treturn result;\n// }\n// Libs.convertDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar day = _date.getDate();\n// \tvar month = _date.getMonth();\n// \tvar year = _date.getFullYear() + '';\n// \tmonth += 1;\n// \tif (day < 10) {\n// \t\tday = '0' + day;\n// \t}\n// \tif (month < 10) {\n// \t\tmonth = '0' + month;\n// \t}\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', day);\n// \tresult = result.replace('mm', month);\n// \tresult = result.replace('yyyy', year);\n// \treturn result;\n// }\n// /**\n//  * Get current year\n//  * @author Minh.Pham 2018-11-28\n//  */ \n\n// Libs.getCurrentYear = () => {\n// \tvar year = new Date().getFullYear();\n// \treturn year;\n// }\n// /**\n//  * Get days in month\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getDaysOfMonth = (year, month) => {\n// \tvar d = new Date(year, month, 0);\n// \treturn d.getDate();\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV01 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \t//var month = parseInt(dateItems[monthIndex]);\n// \tvar month = dateItems[monthIndex];\n// \treturn dateItems[yearIndex] + '-' + (month) + '-' + dateItems[dayIndex];\n// }\n\n// /**\n//  * Convert date to YYYYMMDD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV02 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \treturn dateItems[yearIndex] + (month) + dateItems[dayIndex];\n// }\n\n\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStrYearMonth = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \treturn dateItems[yearIndex] + '-' + dateItems[monthIndex];\n// }\n\n\n// /**\n//  * Convert date to 'YYYY-MM-DD'\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertYYYYMMDDDateToStr = (date, _format) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar dateItems = date.split('-');\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', dateItems[2]);\n// \tresult = result.replace('mm', dateItems[1]);\n// \tresult = result.replace('yyyy', dateItems[0]);\n// \treturn result;\n// }\n\n// /**\n//  * @description Delete special characters\n//  * @param {String} str \n//  * @return string\n//  * @author: minh.pham\n//  */\n// Libs.removeWildcard = (str) => {\n// \tstr = str.replace(/!|@|%|\\^|\\\\|\\/|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'||\\\"|\\&|\\#|\\[|\\]|~|$|_/g, \"\");\n// \treturn str;\n\n// }\n// /**\n//  * @description Search for characters in the string\n//  * @param {array} data \n//  * @return true\n//  * @author: lam.nguyen\n//  */\n// Libs.searchLikeString = (str, strSearch) => {\n// \tif (Libs.isBlank(str)) {\n// \t\treturn false;\n// \t}\n// \tstr = Libs.removeUnicode(str).toLowerCase().trim();\n// \tif (!Libs.isBlank(strSearch)) {\n// \t\tstrSearch = Libs.removeUnicode(strSearch).toLowerCase().trim();\n// \t}\n// \tif (str.indexOf(strSearch) != -1) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// /**\n//  * @description Remove duplicate elements in the array\n//  * @param Array arr\n//  * @author: Luyen Nguyen\n//  * @return Array\n//  */\n// Libs.removeDuplicatesSafe = function (arr) {\n// \tvar seen = {};\n// \tvar retArr = [];\n// \tfor (var i = 0; i < arr.length; i++) {\n// \t\tif (!(arr[i] in seen)) {\n// \t\t\tretArr.push(arr[i]);\n// \t\t\tseen[arr[i]] = true;\n// \t\t}\n// \t}\n// \treturn retArr;\n// }\n\n\n// /*\n//  * call await method\n//  * ex: let users = await Libs.callWithPromise((resolve, reject)=>{\n//  * UserService.instance.getDropDownList({}, (arrData) => {\n//  * \t\tif(arrData){ resolve(arrData)}\n//  * \t\telse{ reject(false)}\n//  *    }, false);\n//  * });\n//  * @param {func} func \n//  */\n// Libs.callWithPromise = (func) => {\n// \treturn new Promise(function (resolve, reject) {\n// \t\tfunc(resolve, reject)\n// \t})\n// }\n\n\n\n\n\n\n// /**\n// * Auto generate key from name\n// *\n// * @param {string} name\n// * @author:  minh.pham 2018-10-20 15:37:34 \n// * */\n// Libs.generateKeyFromName = function (name) {\n// \tif (Libs.isBlank(name)) return \"\";\n// \t//replace all wildchar\n// \tvar regex1 = /\\w+/;\n\n// \t// const regex = new RegExp(\"([a-zA-Z0-9 ]+)\", \"ig\");\n// \t// let myArray = regex.exec(name);\n// \t// if(myArray!=null){\n// \t// \tname = myArray.join(\"\");\n// \t// }\n// \tname = Libs.removeUnicode(name);\n// \tname = Libs.removeWildcard(name);\n// \tlet nameArr = name.split(\" \");\n// \tif (nameArr.length <= 1) {\n// \t\treturn nameArr[0].substring(0, 4).toUpperCase();\n// \t}\n// \tlet newName = \"\";\n// \tfor (let i = 0; i < nameArr.length; i++) {\n// \t\tnewName += nameArr[i].substring(0, 1).toUpperCase();\n// \t}\n// \treturn newName;\n// }\n\n// Libs.groupByProps = function (objectArray, property) {\n// \treturn objectArray.reduce(function (acc, obj) {\n// \t\tvar key = obj[property];\n// \t\tif (!acc[key]) {\n// \t\t\tacc[key] = [];\n// \t\t}\n// \t\tacc[key].push(obj);\n// \t\treturn acc;\n// \t}, {});\n// }\n\n// /**\n//  * \n//  * @param {*} inputDate format dd/MM/yyyy\n//  * @returns string yyyy-MM-dd\n//  */\n// Libs.inputDateToDBDate = function (inputDate) {\n// \tif (inputDate === undefined || inputDate == null || inputDate === '' || typeof inputDate !== 'string') {\n// \t\treturn null;\n// \t}\n// \tvar division = inputDate.split('/');\n// \tif (division <= 1) return null;\n// \tif (inputDate.length != 10) return null;\n// \tlet day = inputDate.substring(0, 2);\n// \tlet month = inputDate.substring(3, 5);\n// \tlet year = inputDate.substring(6, 10);\n// \treturn year + \"-\" + month + \"-\" + day;\n// }\n// /**\n//  * Display toast message\n//  * @param String message: content\n//  * @param String type: \"error\": red background, \"success\": blue background\n//  * @returns {*}\n//  */\n// Libs.toast = function (message, type, pos = \"top-right\") {\n// \tlet posistion = \"top-right\";\n// \tif (typeof pos != 'undefined') {\n// \t\tposistion = pos;\n// \t}\n// \tswitch (type) {\n// \t\tcase \"info\":\n// \t\t\ttoast.info(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"error\":\n// \t\t\ttoast.error(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"warn\":\n// \t\t\ttoast.warn(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t}\n\n// }\n\n\n// /**\n//  * Image url from API\n//  * @author thanh.bay 2018-10-30\n//  * @param  {string} file_path\n//  * @param  {string} headquarter_id\n//  */\n// Libs.linkShowImageAction = function (file_path, headquarter_id) {\n// \tlet host = Libs.baseUrl();\n// \tlet url = Constants.URL.SYSTEM.SHOW_IMAGE;\n// \tfile_path = encodeURI(file_path);\n// \treturn host + \"/\" + url + \"?file_path=\" + file_path + \"&headquarter_id=\" + headquarter_id;\n// }\n// Libs.convertAllFormatDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tif (_date.includes('/')) {\n// \t\treturn _date;\n// \t}\n// \tlet date = moment(_date);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(_format.toUpperCase());\n// }\n// /**\n//  * Convert Data to DB\n//  */\n// Libs.convertAllFormatDate = (_date, from_format = \"DD/MM/YYYY hh:mm\", to_format = \"YYYY-MM-DD hh:mm\") => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tlet date = moment(_date, from_format);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(to_format);\n// }\n\n// /**\n//  * Validate date 0000-00-00 \n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.validateDateNull = (date) => {\n// \tlet arrFormat = [\"0000-00-00\", \"0000/00/00\", \"0000-00-00 00:00:00\",\"0000/00/00 00:00:00\", \"00/00/0000\", \"00-00-0000\", \"00/00/0000 00:00:00\", \"00-00-0000 00:00:00\"];\n// \tfor (let i = 0; i < arrFormat.length; i++) {\n// \t\tif(date == arrFormat[i]){\n// \t\t\treturn false;\n// \t\t}\n// \t}\n// \treturn true;\n// }\n\n\n\n\n\n// /**\n//  * @description synchronize data\n//  * @author LuyenNguyen 2018-11-03\n//  * @param oldItems\n//  * @param newItems\n//  * @param field_key_name\n//  * @param unUpdateFields ex: \"field1,field2,...,fieldn\"\n//  * @returns {Array} \n//  */\n// Libs.synchronizeData = function (oldItems, newItems, field_key_name, unUpdateFields) {\n// \tif (!oldItems)\n// \t\toldItems = [];\n// \tif (!newItems) {\n// \t\treturn;\n// \t}\n// \tvar deletedList = [];\n// \tvar unUpdateFieldArr = null;\n// \tif (unUpdateFields && unUpdateFields != \"\") {\n// \t\tunUpdateFieldArr = unUpdateFields.split(\",\");\n// \t}\n// \t// add and update new item\n// \tnewItems.some(function (el) {\n// \t\tvar new_key_val = el[field_key_name];\n// \t\tvar oldItem = Libs.findIndex(oldItems, field_key_name, new_key_val, true);\n// \t\tif (oldItem == -1) {\n// \t\t\toldItems.push(el);\n// \t\t} else {\n// \t\t\tfor (var key in el) {\n// \t\t\t\tvar is_update = true;\n// \t\t\t\tif (unUpdateFieldArr && unUpdateFieldArr.length > 0\n// \t\t\t\t\t&& unUpdateFieldArr.indexOf(key) >= 0) {\n// \t\t\t\t\tis_update = false;\n// \t\t\t\t}\n// \t\t\t\tif (is_update) {\n// \t\t\t\t\toldItem[key] = el[key];\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t});\n// \t// remove item not in new items\n// \tfor (var index = oldItems.length - 1; index >= 0; index--) {\n// \t\tvar item = oldItems[index];\n// \t\tvar new_key_val = item[field_key_name];\n// \t\t// update\n// \t\tvar newItem = Libs.findIndex(newItems, field_key_name, new_key_val, true);\n// \t\tif (newItem == -1) {\n// \t\t\tdeletedList.push(item);\n// \t\t\toldItems.splice(index, 1);\n// \t\t}\n// \t}\n// \treturn deletedList;\n// };\n\n// /**\n//  * @description Check editor data\n//  * @author LuyenNguyen 2018-11-04\n//  * @param string str\n//  * @returns boolean\n//  */\n// Libs.checkEditorEmpty = function (str) {\n// \tif (Libs.isBlank(str)) return false;\n// \tstr = str.replace(/<\\/?p[^>]*>/g, \"\");\n// \tstr = str.replace(/\\s|\\&nbsp;|\\(|\\)|\\（|\\）/g, '');\n// \tif (!str) return false;\n// \treturn true;\n// }\n// /**\n//  * @description Check onClick or doubleClick\n//  * @author LuyenNguyen 2018-11-04\n//  * @param func onClick\n//  * @param func onDblClick\n//  * @param int delay: time delay\n//  */\n// Libs.getClickHandler = function (onClick, onDblClick, delay) {\n// \tvar timeoutID = null;\n// \tdelay = delay || 250;\n// \treturn function (event) {\n// \t\tif (!timeoutID) {\n// \t\t\ttimeoutID = setTimeout(function () {\n// \t\t\t\tonClick(event);\n// \t\t\t\ttimeoutID = null\n// \t\t\t}, delay);\n// \t\t} else {\n// \t\t\ttimeoutID = clearTimeout(timeoutID);\n// \t\t\tonDblClick(event);\n// \t\t}\n// \t};\n// }\n// Libs.padLeft = function (str, number, digit) {\n// \treturn Array(number - String(str).length + 1).join(digit || '0') + str;\n// }\n\n// /**\n// * @description Rounding\n//  * (0.55 -> 0.6, 0.54 -> 0.5)\n//  * @author LuyenNguyen 2018-11-04\n//  */\n// Libs.round = function (number, decimals) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \treturn Number((Math.round(number + \"e\" + decimals) + \"e-\" + decimals));\n// };\n// Libs.getCurrentDate = function (format) {\n// \tformat = (!format || typeof format !== 'string') ? 'DD/MM/YYYY' : format;\n// \treturn moment().format(format);\n// }\n// /**\n//  * Add Days\n//  */\n// Libs.addDays = function (date, days) {\n// \tvar result = new Date(date);\n// \tresult.setDate(result.getDate() + days);\n// \treturn result;\n// }\n\n// /**\n//  * Valid date checks\n//  * @author Minh.Pham 2019-02-19\n//  * @param from_date  từ ngày\n//  * @param format định dạng kiểu ngày truyền vào\n//  * @returns bool\n//  */\n// Libs.isValidDate = function (from_date, format) {\n// \tfrom_date = moment(from_date, format.toUpperCase());\n// \treturn from_date.isValid();\n\n// }\n\n// /**\n// * @description Gọi lại sự kiện sau khi gọi collapse cho element bootstrap\n// * @param function callback: nhận một tham số là status nếu true collapse là show và ngược lại\n// * @param string selector: tên id hoặc class\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.collapseCallback = function (func, selector) {\n// \tif (Libs.isBlank(selector)) {\n// \t\tselector = $('#group-advance-search');\n// \t}\n// \telse {\n// \t\tselector = $('.' + selector);\n// \t\tif (!selector || selector.length <= 0) {\n// \t\t\tselector = $('#' + selector);\n// \t\t}\n// \t}\n// \tif (!selector || selector.length <= 0 || !func || typeof func !== 'function') return;\n// \tselector.on('hidden.bs.collapse', function () {\n// \t\tfunc(false);\n// \t});\n// \tselector.on('show.bs.collapse', function () {\n// \t\tfunc(true);\n// \t});\n// }\n// /**\n// * @description Thêm class để tính lại chiều cao của màn hình bên phải luôn full trong trường hợp không có button dưới footer\n// * @param boolean|string isRemove: Nếu có giá trị sẽ remove class content-full và trả về trạng thái ban đầu\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.addClassContentFull = function (isRemove) {\n// \tlet content = $('#main-container>.content');\n// \tif (!content || content.length <= 0) return;\n// \tif (!Libs.isBlank(isRemove)) {\n// \t\tcontent.removeClass('content-full');\n// \t}\n// \telse {\n// \t\tcontent.addClass('content-full');\n// \t}\n// }\n// /**\n// * @description Làm tròn số\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param decimal số thập phân\n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundNumber = function (number, decimals = 0, type = 0) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \ttype = type * 1;\n// \tswitch(type){\n// \t\tcase -1:\n// \t\t\treturn roundTo.down(number, decimals);\n// \t\tcase 1:\n// \t\t\treturn roundTo.up(number, decimals);\n// \t\tdefault:\n// \t\t\treturn roundTo(number, decimals);\n// \t}\n// };\n// /**\n// * @description Làm tròn số theo format\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param format #,###.## \n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundByFormat = function (number, format, type = 0) {\n// \treturn Libs.roundNumber(number, Libs.getDecimalsOfFomat(format), type);\n// };\n\n// /**\n// * @description Lấy số decimals(phần thập phân) của format\n// * @author Minh.Pham 2018-12-04\n// * @param format #,###.## \n//  */\n// Libs.getDecimalsOfFomat = function (format) {\n// \tlet decimals = 0;\n// \tif(!Libs.isBlank(format)){\n// \t\ttry{\n// \t\t\tlet arr = format.split('.');\n// \t\t\tif(arr.length >= 2){\n// \t\t\t\tdecimals = arr[arr.length -1].length;\n// \t\t\t}\n// \t\t}catch(ex){\n\n// \t\t}\n// \t}\n// \treturn decimals;\n// };\n// /**\n// * @description insert 1 item tới array\n// * ex: insertAt(arr, 1, \"x\", \"y\", \"z\");\n// * @author TichNguyen 2018-12-04\n// * @param array mãng\n// * @param index insert tại index \n//  */\n// Libs.insertAt=function(array, index) {\n//     var arrayToInsert = Array.prototype.splice.apply(arguments, [2]);\n//     return Libs.insertArrayAt(array, index, arrayToInsert);\n// };\n// /**\n// * @description insert 1 array to array\n// * ex: var arrToInsert = [\"x\", \"y\", \"z\"];\n// * \t  insertArrayAt(arr, 1, arrToInsert);\n// * @author TichNguyen 2018-12-04\n// * @param array\n// * @param index insert tại index \n// * @param arrayToInsert\n//  */\n// Libs.insertArrayAt=function(array, index, arrayToInsert) {\n// \tif(!arrayToInsert || arrayToInsert.length<=0) return array;\n//     Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n//     return array;\n// }\n\n// /**\n//  * Move the element in the array\n//  */\n// Libs.arrayMove = function(arr, old_index, new_index) {\n//     if (new_index >= arr.length) {\n//         var k = new_index - arr.length + 1;\n//         while (k--) {\n//             arr.push(undefined);\n//         }\n//     }\n//     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n//     return arr; // for testing\n// };\n\n// /**\n//  * Hàm resize image \n//  * @param {image}: Image() hình cần resize\n//  * @param {maxWidth}: decimal chiều rộng tối đa\n//  * @param {maxHeight}: decimal chiều cao tối đa\n//  * @param {quality}: decimal chất lượng hình từ 0 => 1\n//  */\n// Libs.resizeImage = function(image, maxWidth, maxHeight, quality) {\n//     var canvas = document.createElement('canvas');\n\n//     var width = image.width;\n//     var height = image.height;\n\n//     if (width > height) {\n//         if (width > maxWidth) {\n//             height = Math.round(height * maxWidth / width);\n//             width = maxWidth;\n//         }\n//     } else {\n//         if (height > maxHeight) {\n//             width = Math.round(width * maxHeight / height);\n//             height = maxHeight;\n//         }\n//     }\n\n//     canvas.width = width;\n//     canvas.height = height;\n\n//     var ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(image, 0, 0, width, height);\n//     return canvas.toDataURL(\"image/jpeg\", quality);\n// }\n\n// /**\n//  * @description Check the array data \n//  * @param Array arr\n//  * @author: Minh.Pham\n//  * @return boolean\n//  */\n// Libs.isArray = function (arr) {\n// \tif (arr == null) return true;\n// \tif (!Array.isArray(arr)) return false;\n// \treturn true;\n// }\n\n// String.prototype.format = function() {\n// \ta = this;\n// \tfor (k in arguments) {\n// \t  a = a.replace(\"{\" + k + \"}\", arguments[k])\n// \t}\n// \treturn a\n//   }\n// Libs.getMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n//     while (date <= endDate)\n//     {\n//         var stringDate = monthNameList[date.getMonth()] + \" \" + date.getFullYear();\n\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n//         resultList.push({\n//             str:stringDate,\n//             first:firstDay,\n//             last:lastDay,\n//         });\n//         date.setMonth(date.getMonth() + 1);\n//     }\n\n//     return resultList;\n// };\n// Libs.getStringMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n//     while (date <= endDate)\n//     {\n// \t\tvar stringDate = monthNameList[date.getMonth()];\n\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n// \t\tresultList.push(stringDate)\n//         date.setMonth(date.getMonth() + 1);\n//     }\n\n//     return resultList;\n// };\n\n// /**\n// * @description get from_date, to_date from year ago to current year\n//  * @author Minh.Pham 2019-06-21\n//  */\n// Libs.getParamDayByYear =  function(numerOfYear, format){\n// \tlet currentDate = moment().toDate();\n// \tlet month = currentDate.getMonth();\n// \tlet day = currentDate.getDate();\n// \tlet year  = currentDate.getFullYear();\n// \treturn {\n// \t\tfrom_date: moment().date(1).month(month).year(year - numerOfYear).format(format),\n// \t\tto_date: moment().date(day).month(month).year(year).format(format),\n// \t};\n// }\n\n// // \n// /**\n// * @description date array from start_date -> end_date\n//  * @author Long.Pham 2019-06-21\n//  * @param start,  end new Date('2019-12-12')\n//  */\n// Libs.getDateArray =  function(start, end){\n// \tvar arr = new Array();\n// \tvar dt = new Date(start);\n//     while (dt <= end) {\n//         arr.push(moment(new Date(dt)).format('DD/MM/YYYY'));\n//         dt.setDate(dt.getDate() + 1);\n//     }\n//     return arr;\n// }\n\n\n\nexport default Libs;\n"]},"metadata":{},"sourceType":"module"}