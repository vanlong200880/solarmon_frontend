{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport ErrorService from '../../../../../services/ErrorService';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\nimport ErrorLevelService from '../../../../../services/ErrorLevelService';\nimport ErrorStateService from '../../../../../services/ErrorStateService';\nimport DeviceGroupService from '../../../../../services/DeviceGroupService';\n\nclass AddPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n      var {\n        t\n      } = this.props;\n\n      if (name === 'id_error_type') {\n        if (Libs.isObjectEmpty(item)) {\n          curItem.id_error_type = '';\n        } else {\n          var value = item.value;\n          curItem[name] = value;\n          self.setValidateMessage({\n            id_error_type: ''\n          }, true);\n        }\n      }\n\n      if (name === 'id_error_level') {\n        if (Libs.isObjectEmpty(item)) {\n          curItem.id_error_level = '';\n        } else {\n          var value = item.value;\n          curItem[name] = value;\n          self.setValidateMessage({\n            id_error_level: ''\n          }, true);\n        }\n      }\n\n      if (name === 'id_error_state') {\n        if (Libs.isObjectEmpty(item)) {\n          curItem.id_error_state = '';\n        } else {\n          var value = item.value;\n          curItem[name] = value;\n          self.setValidateMessage({\n            id_error_state: ''\n          }, true);\n        }\n      }\n\n      if (name === 'id_device_group') {\n        if (Libs.isObjectEmpty(item)) {\n          curItem.id_device_group = '';\n        } else {\n          var value = item.value;\n          curItem[name] = value;\n          self.setValidateMessage({\n            id_device_group: ''\n          }, true);\n        }\n      }\n\n      self.setState({\n        curItem: curItem\n      });\n    };\n\n    this.onClickShowTab = (e, tabActive) => {\n      var curItem = this.state.curItem;\n      if (Libs.isBlank(tabActive)) return;\n      curItem.tabActive = tabActive;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.handleInputTranslateChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (target.type === 'checkbox') {\n        value = target.checked ? 1 : 0;\n      }\n\n      if (name) {\n        let item = this.state.curItem;\n        let allLanguage = this.state.allLanguage;\n        let isoCode = name.substr(-2, 2),\n            dataMessage = name.substr(0, 7),\n            dataDescription = name.substr(0, 11),\n            dataSolutions = name.substr(0, 9);\n        allLanguage.map((language, index) => {\n          if (isoCode === language.iso_code && dataMessage === 'message') {\n            item.data[index].message = event.target.validity.valid ? value : this.state.curItem.data[index].message;\n          }\n\n          if (isoCode === language.iso_code && dataDescription === 'description') {\n            item.data[index].description = event.target.validity.valid ? value : this.state.curItem.data[index].description;\n          }\n\n          if (isoCode === language.iso_code && dataSolutions === 'solutions') {\n            item.data[index].solutions = event.target.validity.valid ? value : this.state.curItem.data[index].solutions;\n          }\n\n          return 1;\n        });\n        item[name] = event.target.validity.valid ? value : this.state.curItem[name];\n        this.setState({\n          curItem: item\n        });\n      }\n    };\n\n    this.state = {\n      curItem: this.props.curItem,\n      allLanguage: this.props.allLanguage,\n      dataErrorType: [],\n      dataErrorLevel: [],\n      dataErrorState: [],\n      dataDeviceGroup: []\n    };\n    this.jsxTemplate = AddPopupJsx;\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  componentDidMount() {\n    var {\n      curItem\n    } = this.state;\n\n    if (Constants.SCREEN_MODE.ADD == curItem.screen_mode) {\n      curItem.status = 1;\n    }\n\n    this.getListErrorType();\n    this.getListErrorLevel();\n    this.getListErrorState();\n    this.getListDeviceGroup();\n    this.setState({\n      curItem: curItem\n    });\n  }\n\n  /**\n  * ge list error state\n  * @author Long.Pham 2019-06-03\n  */\n  getListDeviceGroup() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    DeviceGroupService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataDeviceGroup: data\n        });\n      } else {\n        self.setState({\n          dataDeviceGroup: []\n        });\n      }\n    });\n  }\n  /**\n  * ge list error state\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorState() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorStateService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorState: data\n        });\n      } else {\n        self.setState({\n          dataErrorState: []\n        });\n      }\n    });\n  }\n  /**\n  * ge list error level\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorLevel() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorLevel: data\n        });\n      } else {\n        self.setState({\n          dataErrorLevel: []\n        });\n      }\n    });\n  }\n  /**\n  * ge list error type\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorType() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorType: data\n        });\n      } else {\n        self.setState({\n          dataErrorType: []\n        });\n      }\n    });\n  }\n\n  /**\n   * @description validate a field input\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n  async validateOne(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new AddPopupValidate(this.props);\n      let error = await v.validateOne(param, name);\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n  /**\n   * @description select change\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n\n\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n  async onSave() {\n    var {\n      curItem\n    } = this.state,\n        self = this;\n    var params = Object.assign({}, this.state.curItem);\n    var screenMode = !Libs.isBlank(curItem.id) ? Constants.SCREEN_MODE.EDIT : !Libs.isBlank(this.props.curItem.screen_mode) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD;\n    let v = new AddPopupValidate(this.props);\n    let errors = await v.FLValidationAll(curItem);\n\n    if (errors) {\n      this.setValidateMessage(errors);\n      return;\n    } //remove message validation\n\n\n    this.removeAllValidateMessage();\n    params.screen_mode = screenMode;\n    params.iso_code_lang = this.employee.lang;\n    params.id_language = this.employee.id_language;\n    params.iso_code = this.employee.iso_code;\n\n    if (Libs.isArrayData(params.data)) {\n      let itemLanguageDefault = Libs.find(params.data, 'is_default', 1);\n      if (!itemLanguageDefault) return;\n      params.data.map((item, index) => {\n        params.data[index].message = item.message === '' ? itemLanguageDefault.message : item.message;\n        params.data[index].description = item.description === '' ? itemLanguageDefault.description : item.description;\n        params.data[index].solutions = item.solutions === '' ? itemLanguageDefault.solutions : item.solutions;\n        return params;\n      });\n    } else {\n      return false;\n    }\n\n    ErrorService.instance.save(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseAdd(true);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default AddPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/Error/AddPopup.js"],"names":["BaseComponent","Libs","Constants","AddPopupJsx","AddPopupValidate","ErrorService","ErrorTypeService","ErrorLevelService","ErrorStateService","DeviceGroupService","AddPopup","constructor","props","handleDropdownChange","item","name","self","curItem","state","t","isObjectEmpty","id_error_type","value","setValidateMessage","id_error_level","id_error_state","id_device_group","setState","onClickShowTab","e","tabActive","isBlank","handleInputTranslateChange","event","target","type","checked","allLanguage","isoCode","substr","dataMessage","dataDescription","dataSolutions","map","language","index","iso_code","data","message","validity","valid","description","solutions","dataErrorType","dataErrorLevel","dataErrorState","dataDeviceGroup","jsxTemplate","bind","componentDidMount","SCREEN_MODE","ADD","screen_mode","status","getListErrorType","getListErrorLevel","getListErrorState","getListDeviceGroup","params","id_language","employee","instance","getDropdownList","total_row","isArrayData","validateOne","param","v","error","onSave","Object","assign","screenMode","id","EDIT","errors","FLValidationAll","removeAllValidateMessage","iso_code_lang","lang","itemLanguageDefault","find","save","msg","toast","onClickCloseAdd"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport ErrorService from '../../../../../services/ErrorService';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\nimport ErrorLevelService from '../../../../../services/ErrorLevelService';\nimport ErrorStateService from '../../../../../services/ErrorStateService';\nimport DeviceGroupService from '../../../../../services/DeviceGroupService';\n\nclass AddPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            allLanguage: this.props.allLanguage,\n            dataErrorType: [],\n            dataErrorLevel: [],\n            dataErrorState: [],\n            dataDeviceGroup: []\n        }\n\n        this.jsxTemplate = AddPopupJsx;\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/05/2021\n     */\n    componentDidMount() {\n        var { curItem } = this.state;\n        if(Constants.SCREEN_MODE.ADD == curItem.screen_mode){\n            curItem.status = 1;\n        }\n        this.getListErrorType();\n        this.getListErrorLevel();\n        this.getListErrorState();\n        this.getListDeviceGroup();\n        this.setState({\n            curItem: curItem\n        })\n    }\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n        var { t } = this.props;\n\n        if (name === 'id_error_type') {\n            if (Libs.isObjectEmpty(item)) {\n                curItem.id_error_type = '';\n            } else {\n                var value = item.value;\n                curItem[name] = value;\n                self.setValidateMessage({ id_error_type: '' }, true);\n            }\n        }\n\n        if (name === 'id_error_level') {\n            if (Libs.isObjectEmpty(item)) {\n                curItem.id_error_level = '';\n            } else {\n                var value = item.value;\n                curItem[name] = value;\n                self.setValidateMessage({ id_error_level: '' }, true);\n            }\n        }\n        if (name === 'id_error_state') {\n            if (Libs.isObjectEmpty(item)) {\n                curItem.id_error_state = '';\n            } else {\n                var value = item.value;\n                curItem[name] = value;\n                self.setValidateMessage({ id_error_state: '' }, true);\n            }\n        }\n\n        if (name === 'id_device_group') {\n            if (Libs.isObjectEmpty(item)) {\n                curItem.id_device_group = '';\n            } else {\n                var value = item.value;\n                curItem[name] = value;\n                self.setValidateMessage({ id_device_group: '' }, true);\n            }\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n\n     /**\n    * ge list error state\n    * @author Long.Pham 2019-06-03\n    */\n      getListDeviceGroup() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        DeviceGroupService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataDeviceGroup: data\n                });\n            } else {\n                self.setState({\n                    dataDeviceGroup: []\n                });\n            }\n        })\n    }\n\n    /**\n    * ge list error state\n    * @author Long.Pham 2019-06-03\n    */\n     getListErrorState() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorStateService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorState: data\n                });\n            } else {\n                self.setState({\n                    dataErrorState: []\n                });\n            }\n        })\n    }\n\n     /**\n    * ge list error level\n    * @author Long.Pham 2019-06-03\n    */\n      getListErrorLevel() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorLevel: data\n                });\n            } else {\n                self.setState({\n                    dataErrorLevel: []\n                });\n            }\n        })\n    }\n\n\n    /**\n    * ge list error type\n    * @author Long.Pham 2019-06-03\n    */\n     getListErrorType() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorType: data\n                });\n            } else {\n                self.setState({\n                    dataErrorType: []\n                });\n            }\n        })\n    }\n\n\n    onClickShowTab = (e, tabActive) => {\n        var curItem = this.state.curItem;\n        if (Libs.isBlank(tabActive)) return;\n        curItem.tabActive = tabActive;\n\n        this.setState({\n            curItem: curItem\n        });\n    }\n\n\n    /**\n     * @description validate a field input\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n    async validateOne(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value\n        if (name) {\n            let param = {\n                [name]: value\n            }\n            let v = new AddPopupValidate(this.props);\n            let error = await v.validateOne(param, name);\n            if (error != null) {\n                this.setValidateMessage(error, true);\n            }\n        }\n    }\n\n    /**\n     * @description select change\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n\n    handleInputTranslateChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n        if (name) {\n            let item = this.state.curItem;\n            let allLanguage = this.state.allLanguage;\n            let isoCode = name.substr(-2, 2),\n                dataMessage = name.substr(0, 7),\n                dataDescription = name.substr(0, 11),\n                dataSolutions = name.substr(0, 9);\n                \n\n            allLanguage.map((language, index) => {\n                if (isoCode === language.iso_code && dataMessage === 'message') {\n                    item.data[index].message = (event.target.validity.valid) ? value : this.state.curItem.data[index].message;\n                }\n\n                if (isoCode === language.iso_code && dataDescription === 'description') {\n                    item.data[index].description = (event.target.validity.valid) ? value : this.state.curItem.data[index].description;\n                }\n\n                if (isoCode === language.iso_code && dataSolutions === 'solutions') {\n                    item.data[index].solutions = (event.target.validity.valid) ? value : this.state.curItem.data[index].solutions;\n                }\n\n                return 1;\n            });\n\n            item[name] = (event.target.validity.valid) ? value : this.state.curItem[name];\n\n            this.setState({ curItem: item });\n        }\n    }\n\n\n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var {curItem} = this.state, self = this;\n        var params = Object.assign({}, this.state.curItem);\n        var screenMode = (!Libs.isBlank(curItem.id)) ? Constants.SCREEN_MODE.EDIT : ((!Libs.isBlank(this.props.curItem.screen_mode)) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD);\n        let v = new AddPopupValidate(this.props);\n        let errors = await v.FLValidationAll(curItem);\n        if (errors) {\n            this.setValidateMessage(errors);\n            return;\n        }\n        //remove message validation\n        this.removeAllValidateMessage();\n        params.screen_mode = screenMode;\n\n        params.iso_code_lang = this.employee.lang;\n        params.id_language = this.employee.id_language;\n        params.iso_code = this.employee.iso_code;\n\n        if (Libs.isArrayData(params.data)) {\n            let itemLanguageDefault = Libs.find(params.data, 'is_default', 1);\n            if (!itemLanguageDefault) return;\n\n            params.data.map((item, index) => {\n                params.data[index].message  = (item.message === '') ? itemLanguageDefault.message : item.message;\n                params.data[index].description = (item.description === '') ? itemLanguageDefault.description : item.description;\n                params.data[index].solutions  = (item.solutions === '') ? itemLanguageDefault.solutions : item.solutions;\n                return params;\n\n            });\n        } else { return false; }\n\n        ErrorService.instance.save(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseAdd(true);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default AddPopup;"]},"metadata":{},"sourceType":"module"}