{"ast":null,"code":"import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nimport Libs from '../utils/Libs';\nexport default class ClientConfigService {\n  static get instance() {\n    if (!this._instance) {\n      this._instance = new ClientConfigService();\n    }\n\n    return this._instance;\n  }\n  /**\n       * @author long.pham 2018-07-27\n       * @param  {RoleEntity} objE\n       * @param  {function(data,total_row,msg)} callBack\n       * @param  {Boolean} isShowProgress\n       */\n\n\n  getListAllDeviceByProject(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_CONFIG.LIST_DEVICE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * API get detail\n   * @author Long.Pham 2019-05-28\n   * @param {RegenncyEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getDeviceDetail(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.CLIENT_CONFIG.DEVICE_DETAIL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n  /**\n   * API call for save data\n   * @author long.pham 2018-07-27\n   * @param {Function} callBack\n   * @param {boolean} isShowProgress\n   */\n\n\n  updateDevice(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_CONFIG.UPDATE_DEVICE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/services/ClientConfigService.js"],"names":["CMSHttp","Constants","Libs","ClientConfigService","instance","_instance","getListAllDeviceByProject","objE","callBack","http","post","URL","CLIENT_CONFIG","LIST_DEVICE","status","rs","data","total_row","Array","isArray","error","msg","getDeviceDetail","DEVICE_DETAIL","updateDevice","UPDATE_DEVICE","mess","isObjectEmpty"],"mappings":"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","sourcesContent":["import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nimport Libs from '../utils/Libs';\n\nexport default class ClientConfigService {\n    static _instance;\n    static get instance() {\n        if (!this._instance) {\n            this._instance = new ClientConfigService();\n        }\n        return this._instance;\n    }\n\n    /**\n         * @author long.pham 2018-07-27\n         * @param  {RoleEntity} objE\n         * @param  {function(data,total_row,msg)} callBack\n         * @param  {Boolean} isShowProgress\n         */\n     getListAllDeviceByProject(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_CONFIG.LIST_DEVICE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    /**\n     * API get detail\n     * @author Long.Pham 2019-05-28\n     * @param {RegenncyEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n\n     getDeviceDetail(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.CLIENT_CONFIG.DEVICE_DETAIL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n\n    \n    /**\n     * API call for save data\n     * @author long.pham 2018-07-27\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n     updateDevice(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_CONFIG.UPDATE_DEVICE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}