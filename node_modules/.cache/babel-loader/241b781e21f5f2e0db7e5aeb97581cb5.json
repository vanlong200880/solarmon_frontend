{"ast":null,"code":"import DeviceParameterJsx from './DeviceParameter.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport DeviceParameterService from '../../../../../services/DeviceParameterService';\n\nclass DeviceParameter extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onClickAddDevice = index => {\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var item = dataList[index];\n      if (Libs.isObjectEmpty(item)) return;\n      item.screen_mode = Constants.SCREEN_MODE.ADD;\n      this.setState({\n        curItem: item,\n        addDevice: true\n      });\n    };\n\n    this.onClickCloseAddDevice = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        addDevice: false\n      });\n    };\n\n    this.onClickAdd = () => {\n      let curItem = {};\n      curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n      this.setState({\n        curItem: curItem,\n        add: true\n      });\n    };\n\n    this.onClickCloseAdd = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        add: false\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      self.setState({\n        curItem: item,\n        add: true\n      });\n    };\n\n    this.onStatusChange = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      item.id_language = this.employee.id_language;\n      var isActiveUpdate = item.status;\n\n      if (isActiveUpdate * 1 === 1) {\n        isActiveUpdate = 0;\n      } else {\n        isActiveUpdate = 1;\n      }\n\n      item.status = isActiveUpdate;\n      item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n      DeviceParameterService.instance.updateStatus(item, function (status, msg) {\n        if (status) {\n          self.setState({\n            dataList: self.state.dataList\n          });\n        }\n      });\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.jsxTemplate = DeviceParameterJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      add: false,\n      addDevice: false,\n      delete: false,\n      formSearch: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getList() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    DeviceParameterService.instance.getList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"DeviceParameter\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"DeviceParameter\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"DeviceParameter\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.name = null;\n    searchParam.id = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(DeviceParameter);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/DeviceParameter/DeviceParameter.js"],"names":["DeviceParameterJsx","BaseComponent","Libs","withTranslation","Constants","DeviceParameterService","DeviceParameter","constructor","props","context","onClickAddDevice","index","dataList","state","isArrayData","item","isObjectEmpty","screen_mode","SCREEN_MODE","ADD","setState","curItem","addDevice","onClickCloseAddDevice","status","getList","onClickAdd","add","onClickCloseAdd","onClickCloseDelete","data","delete","onItemClick","self","EDIT","onStatusChange","id_language","employee","isActiveUpdate","updated_by","first_name","last_name","instance","updateStatus","msg","onItemClickDelete","jsxTemplate","searchParam","limit","COMMON","LIMIT","offset","formSearch","allLanguage","isBlank","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","componentDidMount","params","total_row","parseInt","forceUpdate","event","target","name","value","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","id","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import DeviceParameterJsx from './DeviceParameter.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport DeviceParameterService from '../../../../../services/DeviceParameterService';\n\nclass DeviceParameter extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = DeviceParameterJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            add: false,\n            addDevice: false,\n            delete: false,\n            formSearch: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        DeviceParameterService.instance.getList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    onClickAddDevice = (index) => {\n        var {dataList} = this.state;\n        if(!Libs.isArrayData(dataList)) return;\n        var item = dataList[index];\n        if(Libs.isObjectEmpty(item)) return;\n        item.screen_mode = Constants.SCREEN_MODE.ADD;\n        this.setState({\n            curItem: item,\n            addDevice: true\n        });\n    };\n\n    onClickCloseAddDevice = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            addDevice: false\n        })\n    }\n\n\n    onClickAdd = () => {\n        let curItem = {};\n        curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n        this.setState({\n            curItem: curItem,\n            add: true\n        });\n\n    };\n\n    onClickCloseAdd = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            add: false\n        })\n    }\n\n    onClickCloseDelete = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        self.setState({\n            curItem: item,\n            add: true\n        });\n    }\n\n\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onStatusChange = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        item.id_language = this.employee.id_language;\n\n        var isActiveUpdate = item.status;\n        if (isActiveUpdate * 1 === 1) {\n            isActiveUpdate = 0;\n        }\n        else {\n            isActiveUpdate = 1;\n        }\n\n        item.status = isActiveUpdate;\n        item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n\n        DeviceParameterService.instance.updateStatus(item, function (status, msg) {\n            if (status) {\n                self.setState({\n                    dataList: self.state.dataList\n                });\n            }\n        });\n    }\n\n    /**\n   * @description Item click event delete\n   * @author Long.Pham 12-05-2021\n   * @param index Order element in the list\n   */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"DeviceParameter\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"DeviceParameter\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"DeviceParameter\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n   /**\n     * @description Call form search\n     * @author Long.Pham 12/05/2021\n     */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.name = null;\n        searchParam.id = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(DeviceParameter)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}