{"ast":null,"code":"import _toConsumableArray from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import PlantJsx from'./Plant.jsx';import BaseComponent from'../../../../BaseComponent';import Libs from'../../../../../utils/Libs';import{withTranslation}from'react-i18next';import MainPlantService from'../../../../../services/MainPlantService';import*as FileSaver from'file-saver';import*as XLSX from'xlsx';import moment from'moment';var Plant=/*#__PURE__*/function(_BaseComponent){_inherits(Plant,_BaseComponent);var _super=_createSuper(Plant);function Plant(props,context){var _this;_classCallCheck(this,Plant);_this=_super.call(this,props,context);_this.handleClickOutside=function(event){var target=event.target;var chartParams=_this.state.chartParams,self=_assertThisInitialized(_this);if(!_this.wrapperRef.current.contains(target)){if(chartParams.show_filter){chartParams.show_filter=false;self.setState({chartParams:chartParams});}}};_this.onClickFilter=function(value){var _this$state=_this.state,chartParams=_this$state.chartParams,dataFilter=_this$state.dataFilter,curItem=_this$state.curItem;var self=_assertThisInitialized(_this);if(!Libs.isArrayData(dataFilter))return;var item=Libs.find(dataFilter,'id',value);if(Libs.isObjectEmpty(item))return;chartParams.id_filter=item.id;chartParams.text_filter=item.text;chartParams.show_filter=false;chartParams.showNextBtn=false;switch(value){case'today':chartParams.end_date=Libs.getCurrentMMDDYYYYHI();chartParams.max_date=Libs.getCurrentMMDDYYYYHI();break;case'3_day':chartParams.end_date=Libs.getCurrentDDMMYYYY();chartParams.start_date=moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(),-2)).format('DD/MM/YYYY');chartParams.start_max_date=moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(),-2)).format('DD/MM/YYYY');chartParams.max_date=Libs.getCurrentDDMMYYYY();break;case'this_month':chartParams.max_date=moment().format('MM/YYYY');chartParams.end_date=moment().format('MM/YYYY');break;case'last_month':chartParams.max_date=moment().format('MM/YYYY');var tlast=new Date(Libs.getCurrentMMDDYYYYHI());var ylast=tlast.getFullYear(),mlast=tlast.getMonth();chartParams.end_date=moment(Libs.addMonths(new Date(ylast,mlast,1),-1)).endOf('month').format('MM/YYYY');chartParams.start_date=moment(Libs.addMonths(new Date(ylast,mlast,1),-1)).format('MM/YYYY');break;case'lifetime':case'12_month':chartParams.max_date=moment().format('MM/YYYY');chartParams.end_date=moment().format('MM/YYYY');chartParams.start_date=moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(),-12)).format('MM/YYYY');break;// case 'lifetime':\n//     chartParams.start_date = moment(curItem.commissioning).format('MM/DD/YYYY HH:mm:ss');\n//     chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n//     break;\n}_this.setState({chartParams:chartParams},function(){self.getDataChart();});};_this.changeViewMinute=function(value){var chartParams=_this.state.chartParams,self=_assertThisInitialized(_this);if(Libs.isBlank(value))return;chartParams.data_send_time=value;_this.setState({chartParams:chartParams},function(){self.getDataChart();});};_this.onClickShowSingleLine=function(){_this.setState({single_line:true});};_this.onClickCloseSingleLine=function(){_this.setState({single_line:false});};_this.onClickShowFilter=function(){var chartParams=_this.state.chartParams;chartParams.show_filter=true;_this.setState({chartParams:chartParams});};_this.downloadData=function(){var _this$state2=_this.state,dataEnergy=_this$state2.dataEnergy,curItem=_this$state2.curItem;var t=_this.props.t;if(!Libs.isArrayData(dataEnergy))return;var dataExport=[];for(var i=0,len=dataEnergy.length;i<len;i++){dataExport.push({// \"ID\": ++i,\n'Time':dataEnergy[i].time_full,'Project name':curItem.name,'Energy now (kWh)':dataEnergy[i].activeEnergy,\"Power now (kW)\":dataEnergy[i].activePower});}var fileType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';var fileExtension='.xlsx';var ws=XLSX.utils.json_to_sheet(dataExport,{skipHeader:false});var wb={SheetNames:['Alerts'],Sheets:{'Alerts':ws}};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,\"Export-alerts-\"+moment().format('YYYY-MM-DD_hh:mm:ss')+fileExtension);};_this.state={hash_id:!Libs.isObjectEmpty(_this.params)?_this.params.id:null,curItem:{},single_line:false,allLanguage:Libs.isBlank(_this.employee)?[]:_this.employee.languages,dataFilter:[{id:\"today\",text:\"Today\"},{id:\"3_day\",text:\"3 days\"},{id:\"this_month\",text:\"This month\"},{id:\"last_month\",text:\"Last month\"},{id:\"12_month\",text:\"Last 12 months\"},{id:\"lifetime\",text:\"Lifetime\"}],chartParams:{id_filter:'today',text_filter:'Today',show_filter:false,max_date:Libs.getCurrentDDMMYYYY(),data_send_time:2}};_this.paging={total:0,current:1,currentInput:1};_this.jsxTemplate=PlantJsx;_this.wrapperRef=/*#__PURE__*/React.createRef();return _this;}_createClass(Plant,[{key:\"componentDidMount\",value:function componentDidMount(){document.addEventListener('click',this.handleClickOutside);this.loadConfigDefaultDate();this.getDetailProject();this.getDataChart();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.removeEventListener('click',this.handleClickOutside);}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var self=this;if(nextProps.match.params.id!==this.props.match.params.id){this.setState({hash_id:nextProps.match.params.id},function(){self.getDetailProject();self.getDataChart();});}}},{key:\"loadConfigDefaultDate\",value:function loadConfigDefaultDate(){var chartParams=this.state.chartParams;switch(chartParams.id_filter){case'today':chartParams.max_date=Libs.getCurrentMMDDYYYYHI();chartParams.end_date=Libs.getCurrentMMDDYYYYHI();break;case'3_day':chartParams.end_date=Libs.getCurrentDDMMYYYY();chartParams.start_date=moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(),-2)).format('DD/MM/YYYY');chartParams.start_max_date=moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(),-2)).format('DD/MM/YYYY');break;case'this_month':chartParams.max_date=moment().format('MM/YYYY');chartParams.end_date=moment().format('MM/YYYY');break;case'last_month':chartParams.max_date=moment().format('MM/YYYY');var tlast=new Date(Libs.getCurrentMMDDYYYYHI());var ylast=tlast.getFullYear(),mlast=tlast.getMonth();chartParams.end_date=moment(Libs.addMonths(new Date(ylast,mlast,1),-1)).endOf('month').format('MM/YYYY');chartParams.start_date=moment(Libs.addMonths(new Date(ylast,mlast,1),-1)).format('MM/YYYY');break;case'lifetime':case'12_month':chartParams.max_date=moment().format('MM/YYYY');chartParams.end_date=moment().format('MM/YYYY');var tlast=new Date(Libs.getCurrentMMDDYYYYHI());var ylast=tlast.getFullYear(),mlast=tlast.getMonth();chartParams.start_date=moment(Libs.addMonths(new Date(ylast,mlast,1),-12)).format('MM/YYYY');chartParams.max_start_date=moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(),-12)).format('MM/YYYY');break;}this.setState({chartParams:chartParams});}},{key:\"getDetailProject\",value:function getDetailProject(){var hash_id=this.state.hash_id,self=this;if(Libs.isBlank(hash_id))return;var params={hash_id:hash_id,id_language:this.employee.id_language,id_employee:this.employee.id_employee,type:'private'};MainPlantService.instance.getDetail(params,function(data){if(data){self.setState({curItem:data});}},false);}},{key:\"handleInputDateChange\",value:/**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */function handleInputDateChange(event){var target=event.target;var name=target.name;var self=this;var value=target.value;if(target.type==='checkbox'){value=target.checked?1:0;}if(name){var chartParams=this.state.chartParams;switch(chartParams.id_filter){case'today':case'last_month':case'this_month':chartParams.start_date=value;chartParams[name]=value;break;case'3_day':if(name=='start_date'){chartParams.start_date=value;var arrDate=value.split('/');if(arrDate){var currentDate=arrDate[2]+'/'+arrDate[1]+\"/\"+arrDate[0];chartParams.end_date=moment(Libs.addDays(currentDate,2)).format('DD/MM/YYYY');}}if(name=='end_date'){chartParams.end_date=value;var _arrDate=value.split('/');if(_arrDate){var _currentDate=_arrDate[2]+'/'+_arrDate[1]+\"/\"+_arrDate[0];chartParams.start_date=moment(Libs.addDays(_currentDate,-2)).format('DD/MM/YYYY');}}break;case'12_month':if(name=='start_date'){chartParams.start_date=value;var _arrDate2=value.split('/');if(_arrDate2){var _currentDate2=_arrDate2[1]+'/'+_arrDate2[0]+'/01';var startOfMonth=moment(_currentDate2).startOf('month').format('YYYY-MM-DD');chartParams.end_date=moment(Libs.addMonths(startOfMonth,12)).format('MM/YYYY');}}if(name=='end_date'){chartParams.end_date=value;var _arrDate3=value.split('/');if(_arrDate3){var _currentDate3=_arrDate3[1]+'/'+_arrDate3[0]+'/01';var _startOfMonth=moment(_currentDate3).startOf('month').format('YYYY-MM-DD');chartParams.start_date=moment(Libs.addMonths(_startOfMonth,-12)).format('MM/YYYY');}}break;}this.setState({chartParams:chartParams},function(){self.getDataChart();});}}/**\n   * Get chart data\n   * @author long.pham 2020-12-03\n   * @param id_site, id_customer\n   * @return Object\n   */},{key:\"getDataChart\",value:function getDataChart(){var _this$state3=this.state,chartParams=_this$state3.chartParams,curItem=_this$state3.curItem,hash_id=_this$state3.hash_id,self=this;if(Libs.isObjectEmpty(chartParams))return;var params={};params.hash_id=hash_id;params.total_year=curItem.total_year;params.id_employee=this.employee.id_employee;params.id_language=this.employee.id_language;params.filterBy=chartParams.id_filter;params.data_send_time=chartParams.data_send_time;params.type='private';switch(chartParams.id_filter){case'today':params.start_date=Libs.convertAllFormatDate(Libs.dateFormat(chartParams.start_date,\"MM/DD/YYYY\",\"MM/DD/YYYY\")+\" 00:00:00\");params.end_date=Libs.convertAllFormatDate(Libs.dateFormat(chartParams.end_date,\"MM/DD/YYYY\",\"MM/DD/YYYY\")+\" 19:00:00\");break;case'3_day':params.start_date=Libs.dateFormat(chartParams.start_date,\"MM/DD/YYYY\",\"MM/DD/YYYY\")+\" 00:00:00\";params.end_date=Libs.dateFormat(chartParams.end_date,\"MM/DD/YYYY\",\"MM/DD/YYYY\")+\" 19:00:00\";break;case'last_month':case'this_month':params.start_date=Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(),\"DD\",\"MM/DD/YYYY\")+\"/\"+chartParams.start_date+\" 00:00:00\";params.end_date=Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(),\"DD\",\"MM/DD/YYYY\")+\"/\"+chartParams.end_date+\" 19:00:00\";break;case'lifetime':case'12_month':params.start_date=Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(),\"DD\",\"MM/DD/YYYY\")+\"/\"+chartParams.start_date+\" 00:00:00\";params.end_date=Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(),\"DD\",\"MM/DD/YYYY\")+\"/\"+chartParams.end_date+\" 19:00:00\";break;}// params.end_date = '01/11/2021 19:00:00';\n// params.start_date = '01/11/2021 05:00:00';\nMainPlantService.instance.getDataChart(params,function(data){if(Libs.isArrayData(data)){var dataListEnergy=data;var series=[],categories=[];var seriesItemEnergy={data:[],name:'Energy yield',zIndex:1,type:'column',tooltip:{valueSuffix:' kWh'}};var seriesItemPower={data:[],name:'Power',zIndex:1,type:'spline',xAxis:1,yAxis:1,id:'s1',lineWidth:2,tooltip:{valueSuffix:' kW'},marker:{radius:2.5}};var rowItemEnergy=[],rowItemPower=[];if(params.filterBy==='today'){switch(chartParams.data_send_time){case 1:curItem.tickInterval=12;categories=['5AM','5:05 AM','5:10 AM','5:15 AM','5:20 AM','5:25 AM','5:30 AM','5:35 AM','5:40 AM','5:45 AM','5:50 AM','5:55 AM','6AM','6:05 AM','6:10 AM','6:15 AM','6:20 AM','6:25 AM','6:30 AM','6:35 AM','6:40 AM','6:45 AM','6:50 AM','6:55 AM','7AM','7:05 AM','7:10 AM','7:15 AM','7:20 AM','7:25 AM','7:30 AM','7:35 AM','7:40 AM','7:45 AM','7:50 AM','7:55 AM','8AM','8:05 AM','8:10 AM','8:15 AM','8:20 AM','8:25 AM','8:30 AM','8:35 AM','8:40 AM','8:45 AM','8:50 AM','8:55 AM','9AM','9:05 AM','9:10 AM','9:15 AM','9:20 AM','9:25 AM','9:30 AM','9:35 AM','9:40 AM','9:45 AM','9:50 AM','9:55 AM','10AM','10:05 AM','10:10 AM','10:15 AM','10:20 AM','10:25 AM','10:30 AM','10:35 AM','10:40 AM','10:45 AM','10:50 AM','10:55 AM','11AM','11:05 AM','11:10 AM','11:15 AM','11:20 AM','11:25 AM','11:30 AM','11:35 AM','11:40 AM','11:45 AM','11:50 AM','11:55 AM','12PM','12:05 PM','12:10 PM','12:15 PM','12:20 PM','12:25 PM','12:30 PM','12:35 PM','12:40 PM','12:45 PM','12:50 PM','12:55 PM','13PM','13:05 PM','13:10 PM','13:15 PM','13:20 PM','13:25 PM','13:30 PM','13:35 PM','13:40 PM','13:45 PM','13:50 PM','13:55 PM','14PM','14:05 PM','14:10 PM','14:15 PM','14:20 PM','14:25 PM','14:30 PM','14:35 PM','14:40 PM','14:45 PM','14:50 PM','14:55 PM','15PM','15:05 PM','15:10 PM','15:15 PM','15:20 PM','15:25 PM','15:30 PM','15:35 PM','15:40 PM','15:45 PM','15:50 PM','15:55 PM','16PM','16:05 PM','16:10 PM','16:15 PM','16:20 PM','16:25 PM','16:30 PM','16:35 PM','16:40 PM','16:45 PM','16:50 PM','16:55 PM','17PM','17:05 PM','17:10 PM','17:15 PM','17:20 PM','17:25 PM','17:30 PM','17:35 PM','17:40 PM','17:45 PM','17:50 PM','17:55 PM','18PM','18:05 PM','18:10 PM','18:15 PM','18:20 PM','18:25 PM','18:30 PM','18:35 PM','18:40 PM','18:45 PM','18:50 PM','18:55 PM','19PM'];var range5Minute=0;for(var i=0;i<dataListEnergy.length;i++){if(i==0){var hour=Libs.dateFormat(dataListEnergy[i].time_format,'HH','YYYY-MM-DD HH:mm:ss');var minutes=Libs.dateFormat(dataListEnergy[i].time_format,'mm','YYYY-MM-DD HH:mm:ss');range5Minute=(parseInt(hour)-5)*12+Math.round(minutes/5);if(range5Minute>0){for(var j=0;j<range5Minute;j++){var dateF=Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[i].time_format,'YYYY-MM-DD 05:00','YYYY-MM-DD HH:mm:ss'),j*5),'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss');rowItemEnergy.push([dateF,null]);rowItemPower.push([dateF,null]);}}}rowItemEnergy.push([dataListEnergy[i].time_full,dataListEnergy[i].activeEnergy]);rowItemPower.push([dataListEnergy[i].time_full,dataListEnergy[i].activePower]);}// set chart line end\nvar range5MinuteLine=range5Minute+dataListEnergy.length;if(range5MinuteLine<168&&range5MinuteLine>0){var _lastDate='';for(var izero1=range5MinuteLine;izero1<168;izero1++){if(izero1==range5MinuteLine){_lastDate=dataListEnergy[dataListEnergy.length-1].time_format;}if(_lastDate!=null){_lastDate=Libs.addMinutes(_lastDate,5);rowItemEnergy.push([Libs.dateFormat(_lastDate,'YYYY-MM-DD HH:mm','YYYY-MM-DD HH:mm:ss'),null]);rowItemPower.push([Libs.dateFormat(_lastDate,'YYYY-MM-DD HH:mm','YYYY-MM-DD HH:mm:ss'),null]);}}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;case 2:curItem.tickInterval=4;categories=['5AM','5:15AM','5:30AM','5:45AM','6AM','6:15AM','6:30AM','6:45AM','7AM','7:15AM','7:30AM','7:45AM','8AM','8:15AM','8:30AM','8:45AM','9AM','9:15AM','9:30AM','9:45AM','10AM','10:15AM','10:30AM','10:45AM','11AM','11:15AM','11:30AM','11:45AM','12PM','12:15PM','12:30PM','12:45PM','13PM','13:15PM','13:30PM','13:45PM','14PM','14:15PM','14:30PM','14:45PM','15PM','15:15PM','15:30PM','15:45PM','16PM','16:15PM','16:30PM','16:45PM','17PM','17:15PM','17:30PM','17:45PM','18PM','18:15PM','18:30PM','18:45PM','19PM'];var range15Minute=0;for(var _i=0;_i<dataListEnergy.length;_i++){if(_i==0){var hour=Libs.dateFormat(dataListEnergy[_i].time_format,'HH','YYYY-MM-DD HH:mm:ss');var minutes=Libs.dateFormat(dataListEnergy[_i].time_format,'mm','YYYY-MM-DD HH:mm:ss');range15Minute=(parseInt(hour)-5)*4+Math.round(minutes/15);if(range15Minute>0){for(var j=0;j<range15Minute;j++){var dateF=Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[_i].time_format,'YYYY-MM-DD 05:00','YYYY-MM-DD HH:mm:ss'),j*15),'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss');rowItemEnergy.push([dateF,null]);rowItemPower.push([dateF,null]);}}}rowItemEnergy.push([dataListEnergy[_i].time_full,dataListEnergy[_i].activeEnergy]);rowItemPower.push([dataListEnergy[_i].time_full,dataListEnergy[_i].activePower]);}// set chart line end\nvar range15MinuteLine=range15Minute+dataListEnergy.length;if(range15MinuteLine<56&&range15MinuteLine>0){var _lastDate2='';for(var _izero=range15MinuteLine;_izero<56;_izero++){if(_izero==range15MinuteLine){_lastDate2=dataListEnergy[dataListEnergy.length-1].time_format;}if(_lastDate2!=null){_lastDate2=Libs.addMinutes(_lastDate2,15);rowItemEnergy.push([Libs.dateFormat(_lastDate2,'DD/MM/YYYY','YYYY-MM-DD HH:mm:ss'),null]);rowItemPower.push([Libs.dateFormat(_lastDate2,'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss'),null]);}}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;default:curItem.tickInterval=1;categories=['5AM','6AM','7AM','8AM','9AM','10AM','11AM','12PM','13PM','14PM','15PM','16PM','17PM','18PM','19PM'];var rangeHour=0;for(var _i2=0;_i2<dataListEnergy.length;_i2++){if(_i2==0){var hour=Libs.dateFormat(dataListEnergy[_i2].time_format,'HH','YYYY-MM-DD HH:mm:ss');rangeHour=parseInt(hour)-5;if(rangeHour>0){for(var j=0;j<rangeHour;j++){var dateF=Libs.dateFormat(dataListEnergy[_i2].time_format,'DD/MM/YYYY','YYYY-MM-DD HH:mm:ss')+\" \"+(j+5)+\":00\";rowItemEnergy.push([dateF,null]);rowItemPower.push([dateF,null]);}}}rowItemEnergy.push([dataListEnergy[_i2].time_full,dataListEnergy[_i2].activeEnergy]);rowItemPower.push([dataListEnergy[_i2].time_full,dataListEnergy[_i2].activePower]);}// set chart line end\nvar rangeHourLine=rangeHour+dataListEnergy.length;if(rangeHourLine<15&&rangeHourLine>0){var _lastDate3='';for(var _izero2=rangeHourLine;_izero2<15;_izero2++){if(_izero2==rangeHourLine){_lastDate3=dataListEnergy[dataListEnergy.length-1].time_format;}if(_lastDate3!=null){_lastDate3=Libs.addMinutes(_lastDate3,60);rowItemEnergy.push([Libs.dateFormat(_lastDate3,'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss'),null]);rowItemPower.push([Libs.dateFormat(_lastDate3,'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss'),null]);}}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;}}else if(params.filterBy==='3_day'){var start_date=chartParams.start_date;var arrDate=start_date.split('/');var currentDate='';var stringDate1='',stringDate2='',stringDate3='';if(arrDate){currentDate=arrDate[2]+'/'+arrDate[1]+\"/\"+arrDate[0];stringDate1=moment(currentDate).format('DD. MMM');stringDate2=moment(Libs.addDays(currentDate,1)).format('DD. MMM');stringDate3=moment(Libs.addDays(currentDate,2)).format('DD. MMM');}else{return;}switch(chartParams.data_send_time){case 1:curItem.tickInterval=169;categories=[stringDate1,'5:05 AM','5:10 AM','5:15 AM','5:20 AM','5:25 AM','5:30 AM','5:35 AM','5:40 AM','5:45 AM','5:50 AM','5:55 AM','6:00 AM','6:05 AM','6:10 AM','6:15 AM','6:20 AM','6:25 AM','6:30 AM','6:35 AM','6:40 AM','6:45 AM','6:50 AM','6:55 AM','7:00 AM','7:05 AM','7:10 AM','7:15 AM','7:20 AM','7:25 AM','7:30 AM','7:35 AM','7:40 AM','7:45 AM','7:50 AM','7:55 AM','8:00 AM','8:05 AM','8:10 AM','8:15 AM','8:20 AM','8:25 AM','8:30 AM','8:35 AM','8:40 AM','8:45 AM','8:50 AM','8:55 AM','9:00 AM','9:05 AM','9:10 AM','9:15 AM','9:20 AM','9:25 AM','9:30 AM','9:35 AM','9:40 AM','9:45 AM','9:50 AM','9:55 AM','10:00 AM','10:05 AM','10:10 AM','10:15 AM','10:20 AM','10:25 AM','10:30 AM','10:35 AM','10:40 AM','10:45 AM','10:50 AM','10:55 AM','11:00 AM','11:05 AM','11:10 AM','11:15 AM','11:20 AM','11:25 AM','11:30 AM','11:35 AM','11:40 AM','11:45 AM','11:50 AM','11:55 AM','12:00 PM','12:05 PM','12:10 PM','12:15 PM','12:20 PM','12:25 PM','12:30 PM','12:35 PM','12:40 PM','12:45 PM','12:50 PM','12:55 PM','13:00 PM','13:05 PM','13:10 PM','13:15 PM','13:20 PM','13:25 PM','13:30 PM','13:35 PM','13:40 PM','13:45 PM','13:50 PM','13:55 PM','14:00 PM','14:05 PM','14:10 PM','14:15 PM','14:20 PM','14:25 PM','14:30 PM','14:35 PM','14:40 PM','14:45 PM','14:50 PM','14:55 PM','15:00 PM','15:05 PM','15:10 PM','15:15 PM','15:20 PM','15:25 PM','15:30 PM','15:35 PM','15:40 PM','15:45 PM','15:50 PM','15:55 PM','16:00 PM','16:05 PM','16:10 PM','16:15 PM','16:20 PM','16:25 PM','16:30 PM','16:35 PM','16:40 PM','16:45 PM','16:50 PM','16:55 PM','17:00 PM','17:05 PM','17:10 PM','17:15 PM','17:20 PM','17:25 PM','17:30 PM','17:35 PM','17:40 PM','17:45 PM','17:50 PM','17:55 PM','18:00 PM','18:05 PM','18:10 PM','18:15 PM','18:20 PM','18:25 PM','18:30 PM','18:35 PM','18:40 PM','18:45 PM','18:50 PM','18:55 PM','19:00 PM',stringDate2,'5:05 AM','5:10 AM','5:15 AM','5:20 AM','5:25 AM','5:30 AM','5:35 AM','5:40 AM','5:45 AM','5:50 AM','5:55 AM','6:00 AM','6:05 AM','6:10 AM','6:15 AM','6:20 AM','6:25 AM','6:30 AM','6:35 AM','6:40 AM','6:45 AM','6:50 AM','6:55 AM','7:00 AM','7:05 AM','7:10 AM','7:15 AM','7:20 AM','7:25 AM','7:30 AM','7:35 AM','7:40 AM','7:45 AM','7:50 AM','7:55 AM','8:00 AM','8:05 AM','8:10 AM','8:15 AM','8:20 AM','8:25 AM','8:30 AM','8:35 AM','8:40 AM','8:45 AM','8:50 AM','8:55 AM','9:00 AM','9:05 AM','9:10 AM','9:15 AM','9:20 AM','9:25 AM','9:30 AM','9:35 AM','9:40 AM','9:45 AM','9:50 AM','9:55 AM','10:00 AM','10:05 AM','10:10 AM','10:15 AM','10:20 AM','10:25 AM','10:30 AM','10:35 AM','10:40 AM','10:45 AM','10:50 AM','10:55 AM','11:00 AM','11:05 AM','11:10 AM','11:15 AM','11:20 AM','11:25 AM','11:30 AM','11:35 AM','11:40 AM','11:45 AM','11:50 AM','11:55 AM','12:00 PM','12:05 PM','12:10 PM','12:15 PM','12:20 PM','12:25 PM','12:30 PM','12:35 PM','12:40 PM','12:45 PM','12:50 PM','12:55 PM','13:00 PM','13:05 PM','13:10 PM','13:15 PM','13:20 PM','13:25 PM','13:30 PM','13:35 PM','13:40 PM','13:45 PM','13:50 PM','13:55 PM','14:00 PM','14:05 PM','14:10 PM','14:15 PM','14:20 PM','14:25 PM','14:30 PM','14:35 PM','14:40 PM','14:45 PM','14:50 PM','14:55 PM','15:00 PM','15:05 PM','15:10 PM','15:15 PM','15:20 PM','15:25 PM','15:30 PM','15:35 PM','15:40 PM','15:45 PM','15:50 PM','15:55 PM','16:00 PM','16:05 PM','16:10 PM','16:15 PM','16:20 PM','16:25 PM','16:30 PM','16:35 PM','16:40 PM','16:45 PM','16:50 PM','16:55 PM','17:00 PM','17:05 PM','17:10 PM','17:15 PM','17:20 PM','17:25 PM','17:30 PM','17:35 PM','17:40 PM','17:45 PM','17:50 PM','17:55 PM','18:00 PM','18:05 PM','18:10 PM','18:15 PM','18:20 PM','18:25 PM','18:30 PM','18:35 PM','18:40 PM','18:45 PM','18:50 PM','18:55 PM','19:00 PM',stringDate3,'5:05 AM','5:10 AM','5:15 AM','5:20 AM','5:25 AM','5:30 AM','5:35 AM','5:40 AM','5:45 AM','5:50 AM','5:55 AM','6:00 AM','6:05 AM','6:10 AM','6:15 AM','6:20 AM','6:25 AM','6:30 AM','6:35 AM','6:40 AM','6:45 AM','6:50 AM','6:55 AM','7:00 AM','7:05 AM','7:10 AM','7:15 AM','7:20 AM','7:25 AM','7:30 AM','7:35 AM','7:40 AM','7:45 AM','7:50 AM','7:55 AM','8:00 AM','8:05 AM','8:10 AM','8:15 AM','8:20 AM','8:25 AM','8:30 AM','8:35 AM','8:40 AM','8:45 AM','8:50 AM','8:55 AM','9:00 AM','9:05 AM','9:10 AM','9:15 AM','9:20 AM','9:25 AM','9:30 AM','9:35 AM','9:40 AM','9:45 AM','9:50 AM','9:55 AM','10:00 AM','10:05 AM','10:10 AM','10:15 AM','10:20 AM','10:25 AM','10:30 AM','10:35 AM','10:40 AM','10:45 AM','10:50 AM','10:55 AM','11:00 AM','11:05 AM','11:10 AM','11:15 AM','11:20 AM','11:25 AM','11:30 AM','11:35 AM','11:40 AM','11:45 AM','11:50 AM','11:55 AM','12:00 PM','12:05 PM','12:10 PM','12:15 PM','12:20 PM','12:25 PM','12:30 PM','12:35 PM','12:40 PM','12:45 PM','12:50 PM','12:55 PM','13:00 PM','13:05 PM','13:10 PM','13:15 PM','13:20 PM','13:25 PM','13:30 PM','13:35 PM','13:40 PM','13:45 PM','13:50 PM','13:55 PM','14:00 PM','14:05 PM','14:10 PM','14:15 PM','14:20 PM','14:25 PM','14:30 PM','14:35 PM','14:40 PM','14:45 PM','14:50 PM','14:55 PM','15:00 PM','15:05 PM','15:10 PM','15:15 PM','15:20 PM','15:25 PM','15:30 PM','15:35 PM','15:40 PM','15:45 PM','15:50 PM','15:55 PM','16:00 PM','16:05 PM','16:10 PM','16:15 PM','16:20 PM','16:25 PM','16:30 PM','16:35 PM','16:40 PM','16:45 PM','16:50 PM','16:55 PM','17:00 PM','17:05 PM','17:10 PM','17:15 PM','17:20 PM','17:25 PM','17:30 PM','17:35 PM','17:40 PM','17:45 PM','17:50 PM','17:55 PM','18:00 PM','18:05 PM','18:10 PM','18:15 PM','18:20 PM','18:25 PM','18:30 PM','18:35 PM','18:40 PM','18:45 PM','18:50 PM','18:55 PM','19:00 PM'];if(Libs.isArrayData(data)){for(var _i3=0;_i3<data.length;_i3++){rowItemEnergy.push([data[_i3].time_full,data[_i3].activeEnergy]);rowItemPower.push([data[_i3].time_full,data[_i3].activePower]);}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;case 2:curItem.tickInterval=57;categories=[stringDate1,'5:15AM','5:30AM','5:45AM','6AM','6:15AM','6:30AM','6:45AM','7AM','7:15AM','7:30AM','7:45AM','8AM','8:15AM','8:30AM','8:45AM','9AM','9:15AM','9:30AM','9:45AM','10AM','10:15AM','10:30AM','10:45AM','11AM','11:15AM','11:30AM','11:45AM','12PM','12:15PM','12:30PM','12:45PM','13PM','13:15PM','13:30PM','13:45PM','14PM','14:15PM','14:30PM','14:45PM','15PM','15:15PM','15:30PM','15:45PM','16PM','16:15PM','16:30PM','16:45PM','17PM','17:15PM','17:30PM','17:45PM','18PM','18:15PM','18:30PM','18:45PM','19PM',stringDate2,'5:15AM','5:30AM','5:45AM','6AM','6:15AM','6:30AM','6:45AM','7AM','7:15AM','7:30AM','7:45AM','8AM','8:15AM','8:30AM','8:45AM','9AM','9:15AM','9:30AM','9:45AM','10AM','10:15AM','10:30AM','10:45AM','11AM','11:15AM','11:30AM','11:45AM','12PM','12:15PM','12:30PM','12:45PM','13PM','13:15PM','13:30PM','13:45PM','14PM','14:15PM','14:30PM','14:45PM','15PM','15:15PM','15:30PM','15:45PM','16PM','16:15PM','16:30PM','16:45PM','17PM','17:15PM','17:30PM','17:45PM','18PM','18:15PM','18:30PM','18:45PM','19PM',stringDate3,'5:15AM','5:30AM','5:45AM','6AM','6:15AM','6:30AM','6:45AM','7AM','7:15AM','7:30AM','7:45AM','8AM','8:15AM','8:30AM','8:45AM','9AM','9:15AM','9:30AM','9:45AM','10AM','10:15AM','10:30AM','10:45AM','11AM','11:15AM','11:30AM','11:45AM','12PM','12:15PM','12:30PM','12:45PM','13PM','13:15PM','13:30PM','13:45PM','14PM','14:15PM','14:30PM','14:45PM','15PM','15:15PM','15:30PM','15:45PM','16PM','16:15PM','16:30PM','16:45PM','17PM','17:15PM','17:30PM','17:45PM','18PM','18:15PM','18:30PM','18:45PM','19PM'];if(Libs.isArrayData(data)){for(var _i4=0;_i4<data.length;_i4++){rowItemEnergy.push([data[_i4].time_full,data[_i4].activeEnergy]);rowItemPower.push([data[_i4].time_full,data[_i4].activePower]);}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;case 3:curItem.tickInterval=15;categories=[stringDate1,'6AM','7AM','8AM','9AM','10AM','11AM','12PM','13PM','14PM','15PM','16PM','17PM','18PM','19PM',stringDate2,'6AM','7AM','8AM','9AM','10AM','11AM','12PM','13PM','14PM','15PM','16PM','17PM','18PM','19PM',stringDate3,'6AM','7AM','8AM','9AM','10AM','11AM','12PM','13PM','14PM','15PM','16PM','17PM','18PM','19PM'];if(Libs.isArrayData(data)){for(var _i5=0;_i5<data.length;_i5++){rowItemEnergy.push([data[_i5].time_full,data[_i5].activeEnergy]);rowItemPower.push([data[_i5].time_full,data[_i5].activePower]);}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);break;}}else{curItem.tickInterval=1;categories=[];var lastDate='',minMonth='',maxMonth='';for(var _i6=0;_i6<dataListEnergy.length;_i6++){categories.push([dataListEnergy[_i6].category_time_format]);lastDate=dataListEnergy[_i6].time_format;if(_i6===0){var date=new Date(dataListEnergy[_i6].time_format);minMonth=date.getMonth()+1;}if(_i6===dataListEnergy.length-1){var _date=new Date(dataListEnergy[_i6].time_format);maxMonth=_date.getMonth()+1;}rowItemEnergy.push([dataListEnergy[_i6].time_full,dataListEnergy[_i6].activeEnergy]);rowItemPower.push([dataListEnergy[_i6].time_full,dataListEnergy[_i6].activePower]);}switch(params.filterBy){case'this_month':case'last_month':if(!Libs.isBlank(lastDate)){var _date2=new Date(lastDate);var firstDay=_date2.getDate();var lastDay=new Date(_date2.getFullYear(),_date2.getMonth()+1,0);if(firstDay<lastDay.getDate()){for(var _i7=firstDay;_i7<lastDay.getDate();_i7++){lastDate=Libs.addDays(lastDate,1);rowItemEnergy.push([Libs.dateFormat(lastDate,'DD/MM/YYYY','YYYY-MM-DD'),null]);rowItemPower.push([Libs.dateFormat(lastDate,'DD/MM/YYYY','YYYY-MM-DD'),null]);categories.push([lastDate.getDate()]);}}}break;case'12_month':if(!Libs.isBlank(minMonth)&&!Libs.isBlank(maxMonth)){var firstArrEnergy=[],firstArrayPower=[],firstArrCategory=[];var _date3=new Date(lastDate);for(var _i8=1;_i8<minMonth;_i8++){firstArrEnergy.push([(_i8<10?'0'+_i8:_i8)+\"/\"+_date3.getFullYear(),null]);firstArrayPower.push([(_i8<10?'0'+_i8:_i8)+\"/\"+_date3.getFullYear(),null]);firstArrCategory.push([Libs.getStringMonthNumber(_i8)]);}firstArrCategory.push.apply(firstArrCategory,_toConsumableArray(categories));firstArrEnergy.push.apply(firstArrEnergy,_toConsumableArray(rowItemEnergy));firstArrayPower.push.apply(firstArrayPower,_toConsumableArray(rowItemPower));for(var _i9=maxMonth+1;_i9<=12;_i9++){firstArrEnergy.push([(_i9<10?'0'+_i9:_i9)+\"/\"+_date3.getFullYear(),null]);firstArrayPower.push([(_i9<10?'0'+_i9:_i9)+\"/\"+_date3.getFullYear(),null]);firstArrCategory.push([Libs.getStringMonthNumber(_i9)]);}categories=firstArrCategory;rowItemEnergy=firstArrEnergy;rowItemPower=firstArrayPower;}break;case'lifetime':if(!Libs.isBlank(curItem.total_year)&&curItem.total_year<2){if(!Libs.isBlank(minMonth)&&!Libs.isBlank(maxMonth)){var _firstArrEnergy=[],_firstArrayPower=[],_firstArrCategory=[];var _date4=new Date(lastDate);for(var _i10=1;_i10<minMonth;_i10++){_firstArrEnergy.push([(_i10<10?'0'+_i10:_i10)+\"/\"+_date4.getFullYear(),null]);_firstArrayPower.push([(_i10<10?'0'+_i10:_i10)+\"/\"+_date4.getFullYear(),null]);_firstArrCategory.push([Libs.getStringMonthNumber(_i10)]);}_firstArrCategory.push.apply(_firstArrCategory,_toConsumableArray(categories));_firstArrEnergy.push.apply(_firstArrEnergy,_toConsumableArray(rowItemEnergy));_firstArrayPower.push.apply(_firstArrayPower,_toConsumableArray(rowItemPower));for(var _i11=maxMonth+1;_i11<=12;_i11++){_firstArrEnergy.push([(_i11<10?'0'+_i11:_i11)+\"/\"+_date4.getFullYear(),null]);_firstArrayPower.push([(_i11<10?'0'+_i11:_i11)+\"/\"+_date4.getFullYear(),null]);_firstArrCategory.push([Libs.getStringMonthNumber(_i11)]);}categories=_firstArrCategory;rowItemEnergy=_firstArrEnergy;rowItemPower=_firstArrayPower;}}break;}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);}self.setState({dataCategories:categories,dataEnergy:data,curItem:curItem,series:series},function(){self.loadChartOption();});}else{self.setState({dataCategories:[],dataEnergy:[],curItem:curItem,series:[]},function(){self.loadChartOption();});}});}},{key:\"loadChartOption\",value:function loadChartOption(){var chartOption={credits:{enabled:false},exporting:{enabled:true},title:{text:null},chart:{type:'column'},legend:{layout:'horizontal',align:'center',verticalAlign:'bottom',borderWidth:0,showInLegend:false},colors:['#82cdff','#f2ae1b','#1e477f','#e68600','#00b767','#ffc300'],xAxis:[{title:{text:\"Power\",enabled:false},alignTicks:true,gridLineWidth:1,tickInterval:this.state.curItem.tickInterval,visible:true,categories:this.state.dataCategories},{title:{text:'Data',enabled:false},tickInterval:1,opposite:true,visible:false}],yAxis:[{min:0,title:{text:'kWh',enabled:true},lineWidth:1,gridLineWidth:1,labels:{enabled:true}},{title:{text:'kW',enabled:true},lineWidth:1,opposite:true,gridLineWidth:1,labels:{enabled:true}}],plotOptions:{column:{stacking:'normal'}},tooltip:{shared:false,crosshairs:true},series:this.state.series};this.setState({chartOption:chartOption});}},{key:\"render\",value:function render(){return this.jsxTemplate.call(this);}}]);return Plant;}(BaseComponent);var HighOrderComponentTranslated=withTranslation('common')(Plant);export default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModulePrivate/Plant/Plant.js"],"names":["React","PlantJsx","BaseComponent","Libs","withTranslation","MainPlantService","FileSaver","XLSX","moment","Plant","props","context","handleClickOutside","event","target","chartParams","state","self","wrapperRef","current","contains","show_filter","setState","onClickFilter","value","dataFilter","curItem","isArrayData","item","find","isObjectEmpty","id_filter","id","text_filter","text","showNextBtn","end_date","getCurrentMMDDYYYYHI","max_date","getCurrentDDMMYYYY","start_date","addDays","format","start_max_date","tlast","Date","ylast","getFullYear","mlast","getMonth","addMonths","endOf","getDataChart","changeViewMinute","isBlank","data_send_time","onClickShowSingleLine","single_line","onClickCloseSingleLine","onClickShowFilter","downloadData","dataEnergy","t","dataExport","i","len","length","push","time_full","name","activeEnergy","activePower","fileType","fileExtension","ws","utils","json_to_sheet","skipHeader","wb","SheetNames","Sheets","excelBuffer","write","bookType","type","data","Blob","saveAs","hash_id","params","allLanguage","employee","languages","paging","total","currentInput","jsxTemplate","createRef","document","addEventListener","loadConfigDefaultDate","getDetailProject","removeEventListener","nextProps","match","max_start_date","id_language","id_employee","instance","getDetail","checked","arrDate","split","currentDate","startOfMonth","startOf","total_year","filterBy","convertAllFormatDate","dateFormat","dataListEnergy","series","categories","seriesItemEnergy","zIndex","tooltip","valueSuffix","seriesItemPower","xAxis","yAxis","lineWidth","marker","radius","rowItemEnergy","rowItemPower","tickInterval","range5Minute","hour","time_format","minutes","parseInt","Math","round","j","dateF","addMinutes","range5MinuteLine","lastDate","izero1","range15Minute","range15MinuteLine","rangeHour","rangeHourLine","stringDate1","stringDate2","stringDate3","minMonth","maxMonth","category_time_format","date","firstDay","getDate","lastDay","firstArrEnergy","firstArrayPower","firstArrCategory","getStringMonthNumber","dataCategories","loadChartOption","chartOption","credits","enabled","exporting","title","chart","legend","layout","align","verticalAlign","borderWidth","showInLegend","colors","alignTicks","gridLineWidth","visible","opposite","min","labels","plotOptions","column","stacking","shared","crosshairs","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PlantJsx from './Plant.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport MainPlantService from '../../../../../services/MainPlantService';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport moment from 'moment';\n\nclass Plant extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = {\n            hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n            curItem: {},\n            single_line: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages,\n            dataFilter: [\n                { id: \"today\", text: \"Today\" },\n                { id: \"3_day\", text: \"3 days\" },\n                { id: \"this_month\", text: \"This month\" },\n                { id: \"last_month\", text: \"Last month\" },\n                { id: \"12_month\", text: \"Last 12 months\" },\n                { id: \"lifetime\", text: \"Lifetime\" }\n            ],\n\n            chartParams: {\n                id_filter: 'today',\n                text_filter: 'Today',\n                show_filter: false,\n                max_date: Libs.getCurrentDDMMYYYY(),\n                data_send_time: 2\n            },\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n\n        this.jsxTemplate = PlantJsx;\n        this.wrapperRef = React.createRef();\n\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside);\n        this.loadConfigDefaultDate();\n        this.getDetailProject();\n        this.getDataChart();\n\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutside)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.setState({\n                hash_id: nextProps.match.params.id\n            }, () => {\n                self.getDetailProject();\n                self.getDataChart();\n            });\n        }\n    }\n\n\n    handleClickOutside = (event) => {\n        const { target } = event;\n        var { chartParams } = this.state, self = this;\n        if (!this.wrapperRef.current.contains(target)) {\n            if (chartParams.show_filter) {\n                chartParams.show_filter = false;\n                self.setState({\n                    chartParams: chartParams\n                })\n            }\n        }\n    }\n\n    loadConfigDefaultDate() {\n        var { chartParams } = this.state;\n        switch (chartParams.id_filter) {\n            case 'today':\n                chartParams.max_date = Libs.getCurrentMMDDYYYYHI();\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                break;\n            case '3_day':\n                chartParams.end_date = Libs.getCurrentDDMMYYYY();\n                chartParams.start_date = moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(), -2)).format('DD/MM/YYYY');\n                chartParams.start_max_date = moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(), -2)).format('DD/MM/YYYY');\n                break;\n            case 'this_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                chartParams.end_date = moment().format('MM/YYYY');\n                break;\n            case 'last_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                var tlast = new Date(Libs.getCurrentMMDDYYYYHI());\n                var ylast = tlast.getFullYear(), mlast = tlast.getMonth();\n                chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).endOf('month').format('MM/YYYY');\n                chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).format('MM/YYYY');\n\n                break;\n            case 'lifetime':\n            case '12_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                chartParams.end_date = moment().format('MM/YYYY');\n                var tlast = new Date(Libs.getCurrentMMDDYYYYHI());\n                var ylast = tlast.getFullYear(), mlast = tlast.getMonth();\n                chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -12)).format('MM/YYYY');\n                chartParams.max_start_date = moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(), -12)).format('MM/YYYY');\n                break;\n        }\n        this.setState({\n            chartParams: chartParams\n        })\n    }\n\n    onClickFilter = (value) => {\n        var { chartParams, dataFilter, curItem } = this.state;\n        var self = this;\n        if (!Libs.isArrayData(dataFilter)) return;\n        var item = Libs.find(dataFilter, 'id', value);\n        if (Libs.isObjectEmpty(item)) return;\n\n        chartParams.id_filter = item.id;\n        chartParams.text_filter = item.text;\n        chartParams.show_filter = false;\n        chartParams.showNextBtn = false;\n\n        switch (value) {\n            case 'today':\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                chartParams.max_date = Libs.getCurrentMMDDYYYYHI();\n                break;\n            case '3_day':\n                chartParams.end_date = Libs.getCurrentDDMMYYYY();\n                chartParams.start_date = moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(), -2)).format('DD/MM/YYYY');\n                chartParams.start_max_date = moment(Libs.addDays(Libs.getCurrentMMDDYYYYHI(), -2)).format('DD/MM/YYYY');\n                chartParams.max_date = Libs.getCurrentDDMMYYYY();\n                break;\n\n            case 'this_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                chartParams.end_date = moment().format('MM/YYYY');\n                break;\n            case 'last_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                var tlast = new Date(Libs.getCurrentMMDDYYYYHI());\n                var ylast = tlast.getFullYear(), mlast = tlast.getMonth();\n                chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).endOf('month').format('MM/YYYY');\n                chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).format('MM/YYYY');\n                break;\n\n            case 'lifetime':\n            case '12_month':\n                chartParams.max_date = moment().format('MM/YYYY');\n                chartParams.end_date = moment().format('MM/YYYY');\n                chartParams.start_date = moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(), -12)).format('MM/YYYY');\n\n                break;\n            // case 'lifetime':\n            //     chartParams.start_date = moment(curItem.commissioning).format('MM/DD/YYYY HH:mm:ss');\n            //     chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n            //     break;\n        }\n\n        this.setState({\n            chartParams: chartParams\n        }, () => {\n            self.getDataChart();\n        });\n    }\n\n    changeViewMinute = (value) => {\n        var chartParams = this.state.chartParams, self = this;\n        if (Libs.isBlank(value)) return;\n        chartParams.data_send_time = value;\n        this.setState({ chartParams: chartParams }, () => {\n            self.getDataChart();\n        });\n    }\n\n\n    getDetailProject() {\n        var { hash_id } = this.state, self = this;\n        if (Libs.isBlank(hash_id)) return;\n\n        var params = {\n            hash_id: hash_id,\n            id_language: this.employee.id_language,\n            id_employee: this.employee.id_employee,\n            type: 'private'\n        };\n        MainPlantService.instance.getDetail(params, data => {\n            if (data) {\n                self.setState({\n                    curItem: data\n                });\n            }\n        }, false);\n    }\n\n\n    onClickShowSingleLine = () => {\n        this.setState({\n            single_line: true\n        })\n    }\n\n    onClickCloseSingleLine = () => {\n        this.setState({\n            single_line: false\n        })\n    }\n\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputDateChange(event) {\n        let target = event.target;\n        let name = target.name;\n        var self = this;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { chartParams } = this.state;\n            switch (chartParams.id_filter) {\n                case 'today':\n                case 'last_month':\n                case 'this_month':\n                    chartParams.start_date = value;\n                    chartParams[name] = value;\n                    break;\n                case '3_day':\n                    if (name == 'start_date') {\n                        chartParams.start_date = value;\n                        let arrDate = value.split('/');\n                        if (arrDate) {\n                            let currentDate = arrDate[2] + '/' + arrDate[1] + \"/\" + arrDate[0];\n                            chartParams.end_date = moment(Libs.addDays(currentDate, 2)).format('DD/MM/YYYY');\n                        }\n                    }\n\n                    if (name == 'end_date') {\n                        chartParams.end_date = value;\n                        let arrDate = value.split('/');\n                        if (arrDate) {\n                            let currentDate = arrDate[2] + '/' + arrDate[1] + \"/\" + arrDate[0];\n                            chartParams.start_date = moment(Libs.addDays(currentDate, -2)).format('DD/MM/YYYY');\n                        }\n                    }\n\n                    break;\n                case '12_month':\n                    if (name == 'start_date') {\n                        chartParams.start_date = value;\n                        let arrDate = value.split('/');\n\n                        if (arrDate) {\n                            let currentDate = arrDate[1] + '/' + arrDate[0] + '/01';\n                            const startOfMonth = moment(currentDate).startOf('month').format('YYYY-MM-DD');\n                            chartParams.end_date = moment(Libs.addMonths(startOfMonth, 12)).format('MM/YYYY');\n                        }\n                    }\n\n                    if (name == 'end_date') {\n                        chartParams.end_date = value;\n                        let arrDate = value.split('/');\n                        if (arrDate) {\n                            let currentDate = arrDate[1] + '/' + arrDate[0] + '/01';\n                            const startOfMonth = moment(currentDate).startOf('month').format('YYYY-MM-DD');\n                            chartParams.start_date = moment(Libs.addMonths(startOfMonth, -12)).format('MM/YYYY');\n                        }\n                    }\n                    break;\n            }\n\n            this.setState({ chartParams }, () => {\n                self.getDataChart();\n            });\n        }\n    }\n\n\n    /**\n   * Get chart data\n   * @author long.pham 2020-12-03\n   * @param id_site, id_customer\n   * @return Object\n   */\n    getDataChart() {\n        var { chartParams, curItem, hash_id } = this.state, self = this;\n        if (Libs.isObjectEmpty(chartParams)) return;\n        var params = {};\n        params.hash_id = hash_id;\n        params.total_year = curItem.total_year;\n        params.id_employee = this.employee.id_employee;\n        params.id_language = this.employee.id_language;\n        params.filterBy = chartParams.id_filter;\n        params.data_send_time = chartParams.data_send_time;\n        params.type = 'private';\n\n        switch (chartParams.id_filter) {\n            case 'today':\n                params.start_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.start_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 00:00:00\");\n                params.end_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 19:00:00\");\n                break;\n            case '3_day':\n                params.start_date = Libs.dateFormat(chartParams.start_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 00:00:00\";\n                params.end_date = Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 19:00:00\";\n                break;\n            case 'last_month':\n            case 'this_month':\n                params.start_date = Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(), \"DD\", \"MM/DD/YYYY\") + \"/\" + chartParams.start_date + \" 00:00:00\";\n                params.end_date = Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(), \"DD\", \"MM/DD/YYYY\") + \"/\" + chartParams.end_date + \" 19:00:00\";\n                break;\n            case 'lifetime':\n            case '12_month':\n                params.start_date = Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(), \"DD\", \"MM/DD/YYYY\") + \"/\" + chartParams.start_date + \" 00:00:00\";\n                params.end_date = Libs.dateFormat(Libs.getCurrentMMDDYYYYHI(), \"DD\", \"MM/DD/YYYY\") + \"/\" + chartParams.end_date + \" 19:00:00\";\n                break;\n        }\n\n\n        // params.end_date = '01/11/2021 19:00:00';\n        // params.start_date = '01/11/2021 05:00:00';\n        MainPlantService.instance.getDataChart(params, (data) => {\n            if (Libs.isArrayData(data)) {\n                var dataListEnergy = data;\n                var series = [], categories = [];\n\n                let seriesItemEnergy = {\n                    data: [],\n                    name: 'Energy yield',\n                    zIndex: 1,\n                    type: 'column',\n                    tooltip: {\n                        valueSuffix: ' kWh'\n                    }\n                };\n\n                let seriesItemPower = {\n                    data: [],\n                    name: 'Power',\n                    zIndex: 1,\n                    type: 'spline',\n                    xAxis: 1,\n                    yAxis: 1,\n                    id: 's1',\n                    lineWidth: 2,\n                    tooltip: {\n                        valueSuffix: ' kW'\n                    },\n                    marker: {\n                        radius: 2.5\n                    }\n                };\n\n                var rowItemEnergy = [], rowItemPower = [];\n\n                if (params.filterBy === 'today') {\n                    switch (chartParams.data_send_time) {\n                        case 1:\n                            curItem.tickInterval = 12;\n                            categories = [\n                                '5AM', '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                                '6AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                                '7AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                                '8AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                                '9AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                                '10AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                                '11AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                                '12PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                                '13PM', '13:05 PM', '13:10 PM', '13:15 PM', '13:20 PM', '13:25 PM', '13:30 PM', '13:35 PM', '13:40 PM', '13:45 PM', '13:50 PM', '13:55 PM',\n                                '14PM', '14:05 PM', '14:10 PM', '14:15 PM', '14:20 PM', '14:25 PM', '14:30 PM', '14:35 PM', '14:40 PM', '14:45 PM', '14:50 PM', '14:55 PM',\n                                '15PM', '15:05 PM', '15:10 PM', '15:15 PM', '15:20 PM', '15:25 PM', '15:30 PM', '15:35 PM', '15:40 PM', '15:45 PM', '15:50 PM', '15:55 PM',\n                                '16PM', '16:05 PM', '16:10 PM', '16:15 PM', '16:20 PM', '16:25 PM', '16:30 PM', '16:35 PM', '16:40 PM', '16:45 PM', '16:50 PM', '16:55 PM',\n                                '17PM', '17:05 PM', '17:10 PM', '17:15 PM', '17:20 PM', '17:25 PM', '17:30 PM', '17:35 PM', '17:40 PM', '17:45 PM', '17:50 PM', '17:55 PM',\n                                '18PM', '18:05 PM', '18:10 PM', '18:15 PM', '18:20 PM', '18:25 PM', '18:30 PM', '18:35 PM', '18:40 PM', '18:45 PM', '18:50 PM', '18:55 PM',\n                                '19PM'\n                            ];\n                            var range5Minute = 0;\n                            for (let i = 0; i < dataListEnergy.length; i++) {\n                                if (i == 0) {\n                                    var hour = Libs.dateFormat(dataListEnergy[i].time_format, 'HH', 'YYYY-MM-DD HH:mm:ss');\n                                    var minutes = Libs.dateFormat(dataListEnergy[i].time_format, 'mm', 'YYYY-MM-DD HH:mm:ss');\n                                    range5Minute = ((parseInt(hour) - 5) * 12) + (Math.round(minutes / 5));\n                                    if (range5Minute > 0) {\n                                        for (var j = 0; j < range5Minute; j++) {\n                                            var dateF = Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[i].time_format, 'YYYY-MM-DD 05:00', 'YYYY-MM-DD HH:mm:ss'), j * 5), 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss');\n                                            rowItemEnergy.push([dateF, null]);\n                                            rowItemPower.push([dateF, null]);\n                                        }\n                                    }\n                                }\n                                rowItemEnergy.push([dataListEnergy[i].time_full, dataListEnergy[i].activeEnergy]);\n                                rowItemPower.push([dataListEnergy[i].time_full, dataListEnergy[i].activePower]);\n                            }\n\n\n\n\n                            // set chart line end\n                            let range5MinuteLine = range5Minute + dataListEnergy.length;\n\n                            if (range5MinuteLine < 168 && range5MinuteLine > 0) {\n                                let lastDate = '';\n                                for (let izero1 = range5MinuteLine; izero1 < 168; izero1++) {\n                                    if (izero1 == range5MinuteLine) {\n                                        lastDate = dataListEnergy[dataListEnergy.length - 1].time_format;\n                                    }\n                                    if (lastDate != null) {\n                                        lastDate = Libs.addMinutes(lastDate, 5);\n                                        rowItemEnergy.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                        rowItemPower.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                    }\n                                }\n                            }\n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n                            break;\n                        case 2:\n                            curItem.tickInterval = 4;\n                            categories = [\n                                '5AM', '5:15AM', '5:30AM', '5:45AM',\n                                '6AM', '6:15AM', '6:30AM', '6:45AM',\n                                '7AM', '7:15AM', '7:30AM', '7:45AM',\n                                '8AM', '8:15AM', '8:30AM', '8:45AM',\n                                '9AM', '9:15AM', '9:30AM', '9:45AM',\n                                '10AM', '10:15AM', '10:30AM', '10:45AM',\n                                '11AM', '11:15AM', '11:30AM', '11:45AM',\n                                '12PM', '12:15PM', '12:30PM', '12:45PM',\n                                '13PM', '13:15PM', '13:30PM', '13:45PM',\n                                '14PM', '14:15PM', '14:30PM', '14:45PM',\n                                '15PM', '15:15PM', '15:30PM', '15:45PM',\n                                '16PM', '16:15PM', '16:30PM', '16:45PM',\n                                '17PM', '17:15PM', '17:30PM', '17:45PM',\n                                '18PM', '18:15PM', '18:30PM', '18:45PM',\n                                '19PM'\n                            ];\n\n                            var range15Minute = 0;\n                            for (let i = 0; i < dataListEnergy.length; i++) {\n                                if (i == 0) {\n\n                                    var hour = Libs.dateFormat(dataListEnergy[i].time_format, 'HH', 'YYYY-MM-DD HH:mm:ss');\n                                    var minutes = Libs.dateFormat(dataListEnergy[i].time_format, 'mm', 'YYYY-MM-DD HH:mm:ss');\n                                    range15Minute = ((parseInt(hour) - 5) * 4) + (Math.round(minutes / 15));\n                                    if (range15Minute > 0) {\n                                        for (var j = 0; j < range15Minute; j++) {\n                                            var dateF = Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[i].time_format, 'YYYY-MM-DD 05:00', 'YYYY-MM-DD HH:mm:ss'), j * 15), 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss');\n                                            rowItemEnergy.push([dateF, null]);\n                                            rowItemPower.push([dateF, null]);\n                                        }\n                                    }\n\n                                }\n                                rowItemEnergy.push([dataListEnergy[i].time_full, dataListEnergy[i].activeEnergy]);\n                                rowItemPower.push([dataListEnergy[i].time_full, dataListEnergy[i].activePower]);\n                            }\n\n                            // set chart line end\n                            let range15MinuteLine = range15Minute + dataListEnergy.length;\n                            if (range15MinuteLine < 56 && range15MinuteLine > 0) {\n                                let lastDate = '';\n                                for (let izero1 = range15MinuteLine; izero1 < 56; izero1++) {\n                                    if (izero1 == range15MinuteLine) {\n                                        lastDate = dataListEnergy[dataListEnergy.length - 1].time_format;\n                                    }\n                                    if (lastDate != null) {\n                                        lastDate = Libs.addMinutes(lastDate, 15);\n                                        rowItemEnergy.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                        rowItemPower.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                    }\n                                }\n                            }\n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n                            break;\n                        default:\n                            curItem.tickInterval = 1;\n                            categories = ['5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '13PM', '14PM', '15PM', '16PM', '17PM', '18PM', '19PM'];\n\n                            var rangeHour = 0;\n                            for (let i = 0; i < dataListEnergy.length; i++) {\n                                if (i == 0) {\n                                    var hour = Libs.dateFormat(dataListEnergy[i].time_format, 'HH', 'YYYY-MM-DD HH:mm:ss');\n                                    rangeHour = parseInt(hour) - 5;\n                                    if (rangeHour > 0) {\n                                        for (var j = 0; j < rangeHour; j++) {\n                                            var dateF = Libs.dateFormat(dataListEnergy[i].time_format, 'DD/MM/YYYY', 'YYYY-MM-DD HH:mm:ss') + \" \" + (j + 5) + \":00\";\n                                            rowItemEnergy.push([dateF, null]);\n                                            rowItemPower.push([dateF, null]);\n                                        }\n                                    }\n                                }\n\n                                rowItemEnergy.push([dataListEnergy[i].time_full, dataListEnergy[i].activeEnergy]);\n                                rowItemPower.push([dataListEnergy[i].time_full, dataListEnergy[i].activePower]);\n                            }\n\n                            // set chart line end\n                            let rangeHourLine = rangeHour + dataListEnergy.length;\n                            if (rangeHourLine < 15 && rangeHourLine > 0) {\n                                let lastDate = '';\n                                for (let izero1 = rangeHourLine; izero1 < 15; izero1++) {\n                                    if (izero1 == rangeHourLine) {\n                                        lastDate = dataListEnergy[dataListEnergy.length - 1].time_format;\n                                    }\n                                    if (lastDate != null) {\n                                        lastDate = Libs.addMinutes(lastDate, 60);\n                                        rowItemEnergy.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                        rowItemPower.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                    }\n                                }\n                            }\n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n                            break;\n                    }\n                } else if (params.filterBy === '3_day') {\n                    var start_date = chartParams.start_date;\n                    let arrDate = start_date.split('/');\n                    var currentDate = '';\n                    var stringDate1 = '', stringDate2 = '', stringDate3 = '';\n                    if (arrDate) {\n                        currentDate = arrDate[2] + '/' + arrDate[1] + \"/\" + arrDate[0];\n                        stringDate1 = moment(currentDate).format('DD. MMM');\n                        stringDate2 = moment(Libs.addDays(currentDate, 1)).format('DD. MMM');\n                        stringDate3 = moment(Libs.addDays(currentDate, 2)).format('DD. MMM');\n                    } else { return }\n\n                    switch (chartParams.data_send_time) {\n                        case 1:\n                            curItem.tickInterval = 169;\n                            categories = [\n                                stringDate1, '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                                '6:00 AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                                '7:00 AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                                '8:00 AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                                '9:00 AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                                '10:00 AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                                '11:00 AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                                '12:00 PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                                '13:00 PM', '13:05 PM', '13:10 PM', '13:15 PM', '13:20 PM', '13:25 PM', '13:30 PM', '13:35 PM', '13:40 PM', '13:45 PM', '13:50 PM', '13:55 PM',\n                                '14:00 PM', '14:05 PM', '14:10 PM', '14:15 PM', '14:20 PM', '14:25 PM', '14:30 PM', '14:35 PM', '14:40 PM', '14:45 PM', '14:50 PM', '14:55 PM',\n                                '15:00 PM', '15:05 PM', '15:10 PM', '15:15 PM', '15:20 PM', '15:25 PM', '15:30 PM', '15:35 PM', '15:40 PM', '15:45 PM', '15:50 PM', '15:55 PM',\n                                '16:00 PM', '16:05 PM', '16:10 PM', '16:15 PM', '16:20 PM', '16:25 PM', '16:30 PM', '16:35 PM', '16:40 PM', '16:45 PM', '16:50 PM', '16:55 PM',\n                                '17:00 PM', '17:05 PM', '17:10 PM', '17:15 PM', '17:20 PM', '17:25 PM', '17:30 PM', '17:35 PM', '17:40 PM', '17:45 PM', '17:50 PM', '17:55 PM',\n                                '18:00 PM', '18:05 PM', '18:10 PM', '18:15 PM', '18:20 PM', '18:25 PM', '18:30 PM', '18:35 PM', '18:40 PM', '18:45 PM', '18:50 PM', '18:55 PM',\n                                '19:00 PM',\n\n\n                                stringDate2, '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                                '6:00 AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                                '7:00 AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                                '8:00 AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                                '9:00 AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                                '10:00 AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                                '11:00 AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                                '12:00 PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                                '13:00 PM', '13:05 PM', '13:10 PM', '13:15 PM', '13:20 PM', '13:25 PM', '13:30 PM', '13:35 PM', '13:40 PM', '13:45 PM', '13:50 PM', '13:55 PM',\n                                '14:00 PM', '14:05 PM', '14:10 PM', '14:15 PM', '14:20 PM', '14:25 PM', '14:30 PM', '14:35 PM', '14:40 PM', '14:45 PM', '14:50 PM', '14:55 PM',\n                                '15:00 PM', '15:05 PM', '15:10 PM', '15:15 PM', '15:20 PM', '15:25 PM', '15:30 PM', '15:35 PM', '15:40 PM', '15:45 PM', '15:50 PM', '15:55 PM',\n                                '16:00 PM', '16:05 PM', '16:10 PM', '16:15 PM', '16:20 PM', '16:25 PM', '16:30 PM', '16:35 PM', '16:40 PM', '16:45 PM', '16:50 PM', '16:55 PM',\n                                '17:00 PM', '17:05 PM', '17:10 PM', '17:15 PM', '17:20 PM', '17:25 PM', '17:30 PM', '17:35 PM', '17:40 PM', '17:45 PM', '17:50 PM', '17:55 PM',\n                                '18:00 PM', '18:05 PM', '18:10 PM', '18:15 PM', '18:20 PM', '18:25 PM', '18:30 PM', '18:35 PM', '18:40 PM', '18:45 PM', '18:50 PM', '18:55 PM',\n                                '19:00 PM',\n\n                                stringDate3, '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                                '6:00 AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                                '7:00 AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                                '8:00 AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                                '9:00 AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                                '10:00 AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                                '11:00 AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                                '12:00 PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                                '13:00 PM', '13:05 PM', '13:10 PM', '13:15 PM', '13:20 PM', '13:25 PM', '13:30 PM', '13:35 PM', '13:40 PM', '13:45 PM', '13:50 PM', '13:55 PM',\n                                '14:00 PM', '14:05 PM', '14:10 PM', '14:15 PM', '14:20 PM', '14:25 PM', '14:30 PM', '14:35 PM', '14:40 PM', '14:45 PM', '14:50 PM', '14:55 PM',\n                                '15:00 PM', '15:05 PM', '15:10 PM', '15:15 PM', '15:20 PM', '15:25 PM', '15:30 PM', '15:35 PM', '15:40 PM', '15:45 PM', '15:50 PM', '15:55 PM',\n                                '16:00 PM', '16:05 PM', '16:10 PM', '16:15 PM', '16:20 PM', '16:25 PM', '16:30 PM', '16:35 PM', '16:40 PM', '16:45 PM', '16:50 PM', '16:55 PM',\n                                '17:00 PM', '17:05 PM', '17:10 PM', '17:15 PM', '17:20 PM', '17:25 PM', '17:30 PM', '17:35 PM', '17:40 PM', '17:45 PM', '17:50 PM', '17:55 PM',\n                                '18:00 PM', '18:05 PM', '18:10 PM', '18:15 PM', '18:20 PM', '18:25 PM', '18:30 PM', '18:35 PM', '18:40 PM', '18:45 PM', '18:50 PM', '18:55 PM',\n                                '19:00 PM',\n\n                            ];\n                            if(Libs.isArrayData(data)){\n                                for (let i = 0; i < data.length; i++) {\n                                    rowItemEnergy.push([data[i].time_full, data[i].activeEnergy]);\n                                    rowItemPower.push([data[i].time_full, data[i].activePower]);\n                                }\n                            }\n\n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n\n                            break;\n                        case 2:\n                            curItem.tickInterval = 57;\n                            categories = [\n                                stringDate1, '5:15AM', '5:30AM', '5:45AM',\n                                '6AM', '6:15AM', '6:30AM', '6:45AM',\n                                '7AM', '7:15AM', '7:30AM', '7:45AM',\n                                '8AM', '8:15AM', '8:30AM', '8:45AM',\n                                '9AM', '9:15AM', '9:30AM', '9:45AM',\n                                '10AM', '10:15AM', '10:30AM', '10:45AM',\n                                '11AM', '11:15AM', '11:30AM', '11:45AM',\n                                '12PM', '12:15PM', '12:30PM', '12:45PM',\n                                '13PM', '13:15PM', '13:30PM', '13:45PM',\n                                '14PM', '14:15PM', '14:30PM', '14:45PM',\n                                '15PM', '15:15PM', '15:30PM', '15:45PM',\n                                '16PM', '16:15PM', '16:30PM', '16:45PM',\n                                '17PM', '17:15PM', '17:30PM', '17:45PM',\n                                '18PM', '18:15PM', '18:30PM', '18:45PM', '19PM',\n\n                                stringDate2, '5:15AM', '5:30AM', '5:45AM',\n                                '6AM', '6:15AM', '6:30AM', '6:45AM',\n                                '7AM', '7:15AM', '7:30AM', '7:45AM',\n                                '8AM', '8:15AM', '8:30AM', '8:45AM',\n                                '9AM', '9:15AM', '9:30AM', '9:45AM',\n                                '10AM', '10:15AM', '10:30AM', '10:45AM',\n                                '11AM', '11:15AM', '11:30AM', '11:45AM',\n                                '12PM', '12:15PM', '12:30PM', '12:45PM',\n                                '13PM', '13:15PM', '13:30PM', '13:45PM',\n                                '14PM', '14:15PM', '14:30PM', '14:45PM',\n                                '15PM', '15:15PM', '15:30PM', '15:45PM',\n                                '16PM', '16:15PM', '16:30PM', '16:45PM',\n                                '17PM', '17:15PM', '17:30PM', '17:45PM',\n                                '18PM', '18:15PM', '18:30PM', '18:45PM', '19PM',\n\n                                stringDate3, '5:15AM', '5:30AM', '5:45AM',\n                                '6AM', '6:15AM', '6:30AM', '6:45AM',\n                                '7AM', '7:15AM', '7:30AM', '7:45AM',\n                                '8AM', '8:15AM', '8:30AM', '8:45AM',\n                                '9AM', '9:15AM', '9:30AM', '9:45AM',\n                                '10AM', '10:15AM', '10:30AM', '10:45AM',\n                                '11AM', '11:15AM', '11:30AM', '11:45AM',\n                                '12PM', '12:15PM', '12:30PM', '12:45PM',\n                                '13PM', '13:15PM', '13:30PM', '13:45PM',\n                                '14PM', '14:15PM', '14:30PM', '14:45PM',\n                                '15PM', '15:15PM', '15:30PM', '15:45PM',\n                                '16PM', '16:15PM', '16:30PM', '16:45PM',\n                                '17PM', '17:15PM', '17:30PM', '17:45PM',\n                                '18PM', '18:15PM', '18:30PM', '18:45PM', '19PM',\n                            ];\n\n                            if(Libs.isArrayData(data)){\n                                for (let i = 0; i < data.length; i++) {\n                                    rowItemEnergy.push([data[i].time_full, data[i].activeEnergy]);\n                                    rowItemPower.push([data[i].time_full, data[i].activePower]);\n                                }\n                            }\n\n                            \n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n\n                            break;\n                        case 3:\n\n                            curItem.tickInterval = 15;\n                            categories = [\n                                stringDate1, '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '13PM', '14PM', '15PM', '16PM', '17PM', '18PM', '19PM',\n                                stringDate2, '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '13PM', '14PM', '15PM', '16PM', '17PM', '18PM', '19PM',\n                                stringDate3, '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '13PM', '14PM', '15PM', '16PM', '17PM', '18PM', '19PM',\n                            ];\n\n\n                            if(Libs.isArrayData(data)){\n                                for (let i = 0; i < data.length; i++) {\n                                    rowItemEnergy.push([data[i].time_full, data[i].activeEnergy]);\n                                    rowItemPower.push([data[i].time_full, data[i].activePower]);\n                                }\n                            }\n\n                            seriesItemEnergy.data = rowItemEnergy;\n                            series.push(seriesItemEnergy);\n                            seriesItemPower.data = rowItemPower;\n                            series.push(seriesItemPower);\n                            break\n                    }\n\n                } else {\n                    curItem.tickInterval = 1;\n                    categories = [];\n                    var lastDate = '', minMonth = '', maxMonth = '';\n                    for (let i = 0; i < dataListEnergy.length; i++) {\n                        categories.push([dataListEnergy[i].category_time_format]);\n                        lastDate = dataListEnergy[i].time_format;\n                        if (i === 0) {\n                            let date = new Date(dataListEnergy[i].time_format);\n                            minMonth = date.getMonth() + 1;\n                        }\n\n                        if (i === dataListEnergy.length - 1) {\n                            let date = new Date(dataListEnergy[i].time_format);\n                            maxMonth = date.getMonth() + 1;\n                        }\n                        rowItemEnergy.push([dataListEnergy[i].time_full, dataListEnergy[i].activeEnergy]);\n                        rowItemPower.push([dataListEnergy[i].time_full, dataListEnergy[i].activePower]);\n\n                    }\n\n\n\n                    switch (params.filterBy) {\n                        case 'this_month':\n                        case 'last_month':\n                            if (!Libs.isBlank(lastDate)) {\n                                let date = new Date(lastDate);\n                                let firstDay = date.getDate();\n                                let lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n                                if (firstDay < lastDay.getDate()) {\n                                    for (let i = firstDay; i < lastDay.getDate(); i++) {\n                                        lastDate = Libs.addDays(lastDate, 1);\n                                        rowItemEnergy.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY', 'YYYY-MM-DD'), null]);\n                                        rowItemPower.push([Libs.dateFormat(lastDate, 'DD/MM/YYYY', 'YYYY-MM-DD'), null]);\n                                        categories.push([lastDate.getDate()]);\n                                    }\n                                }\n                            }\n                            break;\n                        case '12_month':\n                            if (!Libs.isBlank(minMonth) && !Libs.isBlank(maxMonth)) {\n                                let firstArrEnergy = [], firstArrayPower = [], firstArrCategory = [];\n                                let date = new Date(lastDate);\n\n                                for (let i = 1; i < minMonth; i++) {\n                                    firstArrEnergy.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                    firstArrayPower.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                    firstArrCategory.push([Libs.getStringMonthNumber(i)]);\n                                }\n\n                                firstArrCategory.push(...categories);\n                                firstArrEnergy.push(...rowItemEnergy);\n                                firstArrayPower.push(...rowItemPower);\n\n                                for (let i = maxMonth + 1; i <= 12; i++) {\n                                    firstArrEnergy.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                    firstArrayPower.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                    firstArrCategory.push([Libs.getStringMonthNumber(i)]);\n                                }\n\n                                categories = firstArrCategory;\n                                rowItemEnergy = firstArrEnergy;\n                                rowItemPower = firstArrayPower;\n                            }\n                            break;\n\n                        case 'lifetime':\n                            if (!Libs.isBlank(curItem.total_year) && curItem.total_year < 2) {\n                                if (!Libs.isBlank(minMonth) && !Libs.isBlank(maxMonth)) {\n                                    let firstArrEnergy = [], firstArrayPower = [], firstArrCategory = [];\n                                    let date = new Date(lastDate);\n\n                                    for (let i = 1; i < minMonth; i++) {\n                                        firstArrEnergy.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                        firstArrayPower.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                        firstArrCategory.push([Libs.getStringMonthNumber(i)]);\n                                    }\n\n                                    firstArrCategory.push(...categories);\n                                    firstArrEnergy.push(...rowItemEnergy);\n                                    firstArrayPower.push(...rowItemPower);\n\n                                    for (let i = maxMonth + 1; i <= 12; i++) {\n                                        firstArrEnergy.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                        firstArrayPower.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                                        firstArrCategory.push([Libs.getStringMonthNumber(i)]);\n                                    }\n\n                                    categories = firstArrCategory;\n                                    rowItemEnergy = firstArrEnergy;\n                                    rowItemPower = firstArrayPower;\n                                }\n                            }\n                            break;\n                    }\n\n\n                    seriesItemEnergy.data = rowItemEnergy;\n                    series.push(seriesItemEnergy);\n                    seriesItemPower.data = rowItemPower;\n                    series.push(seriesItemPower);\n                }\n\n                self.setState({\n                    dataCategories: categories,\n                    dataEnergy: data,\n                    curItem: curItem,\n                    series: series\n                }, () => {\n                    self.loadChartOption();\n                });\n            } else {\n                self.setState({\n                    dataCategories: [],\n                    dataEnergy: [],\n                    curItem: curItem,\n                    series: []\n                }, () => {\n                    self.loadChartOption();\n                });\n            }\n        });\n\n    }\n\n\n    loadChartOption() {\n        var chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            title: { text: null },\n\n            chart: {\n                type: 'column'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n                borderWidth: 0,\n                showInLegend: false\n            },\n            colors: ['#82cdff', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n            xAxis: [\n                {\n                    title: { text: \"Power\", enabled: false },\n                    alignTicks: true,\n                    gridLineWidth: 1,\n                    tickInterval: this.state.curItem.tickInterval,\n                    visible: true,\n                    categories: this.state.dataCategories\n                },\n\n                {\n                    title: { text: 'Data', enabled: false },\n                    tickInterval: 1,\n                    opposite: true,\n                    visible: false,\n                },\n\n            ],\n\n            yAxis: [{\n                min: 0,\n                title: {\n                    text: 'kWh',\n                    enabled: true\n                },\n                lineWidth: 1,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }, {\n                title: { text: 'kW', enabled: true },\n                lineWidth: 1,\n                opposite: true,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }\n            ],\n\n            plotOptions: {\n                column: {\n                    stacking: 'normal'\n                },\n            },\n\n            tooltip: {\n                shared: false,\n                crosshairs: true\n            },\n            series: this.state.series\n        };\n\n        this.setState({ chartOption: chartOption });\n    }\n\n\n\n    onClickShowFilter = () => {\n        var { chartParams } = this.state;\n        chartParams.show_filter = true;\n        this.setState({\n            chartParams: chartParams\n        });\n    }\n\n\n    downloadData = () => {\n        var { dataEnergy, curItem } = this.state;\n        var { t } = this.props;\n        if (!Libs.isArrayData(dataEnergy)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = dataEnergy.length; i < len; i++) {\n            dataExport.push({\n                // \"ID\": ++i,\n                'Time': dataEnergy[i].time_full,\n                'Project name': curItem.name,\n                'Energy now (kWh)': dataEnergy[i].activeEnergy,\n                \"Power now (kW)\": dataEnergy[i].activePower\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Alerts'],\n            Sheets: { 'Alerts': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-alerts-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Plant)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}