{"ast":null,"code":"import ProjectJsx from './Project.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport ProjectService from '../../../../../services/ProjectService';\n\nclass Project extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onClickAddDevice = index => {\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var item = dataList[index];\n      if (Libs.isObjectEmpty(item)) return;\n      item.screen_mode = Constants.SCREEN_MODE.ADD;\n      this.setState({\n        curItem: item,\n        addDevice: true\n      });\n    };\n\n    this.onClickCloseAddDevice = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        addDevice: false\n      });\n    };\n\n    this.onClickAdd = () => {\n      let curItem = {};\n      let data = [];\n      var allLanguage = this.state.allLanguage;\n      curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n      curItem.tabActive = '';\n      allLanguage.map((language, index) => {\n        if (language.is_default === 1) {\n          curItem.tabActive = language.is_default === 1 ? language.iso_code : '';\n        }\n\n        let item = {\n          is_default: language.is_default,\n          iso_code: language.iso_code,\n          id_language: language.id,\n          name: \"\",\n          site_name: \"\",\n          description: \"\"\n        };\n        return data.push(item);\n      });\n      curItem.data = data;\n      this.setState({\n        curItem: curItem,\n        add: true\n      });\n    };\n\n    this.onClickCloseAdd = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        add: false\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      var params = this.state.curItem;\n      params.id = item.id;\n      ProjectService.instance.getDetail(params, data => {\n        if (data) {\n          item.data = data.data;\n          item.dataEmployees = data.dataEmployees;\n          item.screen_mode = Constants.SCREEN_MODE.EDIT;\n          let curTransItem = Libs.find(data.data, 'is_default', 1);\n\n          if (Libs.isObjectEmpty(curTransItem)) {\n            return false;\n          }\n\n          item[\"name_\" + curTransItem.iso_code] = curTransItem.name;\n\n          if (Libs.isArrayData(data.data)) {\n            var dataLang = data.data;\n            dataLang.map((row, index) => {\n              if (row.is_default === 1) {\n                item.tabActive = row.iso_code;\n              }\n\n              return 1;\n            });\n          }\n\n          self.setState({\n            curItem: item,\n            add: true\n          });\n        }\n      }, false);\n    };\n\n    this.onItemClickSetup = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      if (Libs.isObjectEmpty(item)) return;\n      self.setState({\n        curItem: item,\n        setup: true\n      });\n    };\n\n    this.onItemClickCloseSetup = () => {\n      this.setState({\n        setup: false\n      });\n    };\n\n    this.onStatusChange = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      item.id_language = this.employee.id_language;\n      var isActiveUpdate = item.status;\n\n      if (isActiveUpdate * 1 === 1) {\n        isActiveUpdate = 0;\n      } else {\n        isActiveUpdate = 1;\n      }\n\n      item.status = isActiveUpdate;\n      item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n      ProjectService.instance.updateStatus(item, function (status, msg) {\n        if (status) {\n          self.setState({\n            dataList: self.state.dataList\n          });\n        }\n      });\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.jsxTemplate = ProjectJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      add: false,\n      addDevice: false,\n      delete: false,\n      formSearch: false,\n      setup: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getList() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    ProjectService.instance.getList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.keyword = null;\n    searchParam.id = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Project);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Project/Project.js"],"names":["ProjectJsx","BaseComponent","Libs","withTranslation","Constants","ProjectService","Project","constructor","props","context","onClickAddDevice","index","dataList","state","isArrayData","item","isObjectEmpty","screen_mode","SCREEN_MODE","ADD","setState","curItem","addDevice","onClickCloseAddDevice","status","getList","onClickAdd","data","allLanguage","tabActive","map","language","is_default","iso_code","id_language","id","name","site_name","description","push","add","onClickCloseAdd","onClickCloseDelete","delete","onItemClick","self","params","instance","getDetail","dataEmployees","EDIT","curTransItem","find","dataLang","row","onItemClickSetup","setup","onItemClickCloseSetup","onStatusChange","employee","isActiveUpdate","updated_by","first_name","last_name","updateStatus","msg","onItemClickDelete","jsxTemplate","searchParam","limit","COMMON","LIMIT","offset","formSearch","isBlank","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","componentDidMount","total_row","parseInt","forceUpdate","event","target","value","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","keyword","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ProjectJsx from './Project.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport ProjectService from '../../../../../services/ProjectService';\n\nclass Project extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = ProjectJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            add: false,\n            addDevice: false,\n            delete: false,\n            formSearch: false,\n            setup: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        ProjectService.instance.getList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    onClickAddDevice = (index) => {\n        var {dataList} = this.state;\n        if(!Libs.isArrayData(dataList)) return;\n        var item = dataList[index];\n        if(Libs.isObjectEmpty(item)) return;\n        item.screen_mode = Constants.SCREEN_MODE.ADD;\n        this.setState({\n            curItem: item,\n            addDevice: true\n        });\n    };\n\n    onClickCloseAddDevice = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            addDevice: false\n        })\n    }\n\n\n    onClickAdd = () => {\n        let curItem = {};\n        let data = [];\n        var allLanguage = this.state.allLanguage;\n        curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n        curItem.tabActive = '';\n        allLanguage.map((language, index) => {\n            if (language.is_default === 1) { curItem.tabActive = language.is_default === 1 ? language.iso_code : ''; }\n            let item = {\n                is_default: language.is_default,\n                iso_code: language.iso_code,\n                id_language: language.id,\n                name: \"\",\n                site_name: \"\",\n                description: \"\"\n            };\n            return data.push(item);\n        });\n\n        curItem.data = data;\n        this.setState({\n            curItem: curItem,\n            add: true\n        });\n\n    };\n\n    onClickCloseAdd = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            add: false\n        })\n    }\n\n    onClickCloseDelete = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n\n        var params = this.state.curItem;\n        params.id = item.id;\n\n        ProjectService.instance.getDetail(params, data => {\n            if (data) {\n                item.data = data.data;\n                item.dataEmployees = data.dataEmployees;\n                item.screen_mode = Constants.SCREEN_MODE.EDIT;\n                let curTransItem = Libs.find(data.data,'is_default', 1);\n                if(Libs.isObjectEmpty(curTransItem)){ return false; }\n                item[\"name_\"+curTransItem.iso_code] = curTransItem.name;\n\n                if(Libs.isArrayData(data.data)){\n                    var dataLang = data.data;\n                    dataLang.map((row, index) => {\n                        if(row.is_default === 1){\n                            item.tabActive = row.iso_code;\n                        }\n                        return 1;\n                    });\n                }\n\n                self.setState({\n                    curItem: item,\n                    add: true\n                });\n            }\n        }, false);\n    }\n\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n     onItemClickSetup = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        if(Libs.isObjectEmpty(item)) return;\n        self.setState({\n            curItem: item,\n            setup: true\n        });\n        \n    }\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n     onItemClickCloseSetup = () => {\n        this.setState({\n            setup: false\n        });\n        \n    }\n\n\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onStatusChange = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        item.id_language = this.employee.id_language;\n\n        var isActiveUpdate = item.status;\n        if (isActiveUpdate * 1 === 1) {\n            isActiveUpdate = 0;\n        }\n        else {\n            isActiveUpdate = 1;\n        }\n\n        item.status = isActiveUpdate;\n        item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n\n        ProjectService.instance.updateStatus(item, function (status, msg) {\n            if (status) {\n                self.setState({\n                    dataList: self.state.dataList\n                });\n            }\n        });\n    }\n\n    /**\n   * @description Item click event delete\n   * @author Long.Pham 12-05-2021\n   * @param index Order element in the list\n   */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n   /**\n     * @description Call form search\n     * @author Long.Pham 12/05/2021\n     */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.keyword = null;\n        searchParam.id = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Project)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}