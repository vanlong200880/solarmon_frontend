{"ast":null,"code":"/**\n * 表单验证\n * @author ydr.me\n * @create 2015-07-01 16:57\n * @update 2015-10-19 11:44:25\n */var howdo=require('howdo');var klass=require('./class.js');var dato=require('./dato.js');var typeis=require('./typeis.js');var allocation=require('./allocation.js');var string=require('./string.js');var Emitter=require('./emitter.js');var random=require('./random.js');/**\n * @type {{}}\n * @exmaple\n * {\n     *     // val 值\n     *     // param 参数值\n     *     // done 验证结束回调\n     *     minLength: function (val, done, param0, param1, ...) {\n     *        // done(null); done(null)表示没有错误\n     *        // done('${path}的长度不足xx字符')\n     *     }\n     * }\n */var validationMap={};var namespace='donkey-libs-validation';var alienIndex=0;var defaults={// true: 返回单个错误对象\n// false: 返回错误对象组成的数组\n// 浏览器端，默认为 false\n// 服务器端，默认为 true\nbreakOnInvalid:typeof window==='undefined',defaultMsg:'${1}不合法'};var Validation=klass.extends(Emitter).create({constructor:function constructor(options){var the=this;the._options=dato.extend({},defaults,options);the._validateList=[];the._validateIndexMap={};the._aliasMap={};the._msgMap={};the._validationMap={};the.className='validation';},/**\n     * 为路径设置别名\n     * @param path {String} 字段\n     * @param [alias] {String} 别名\n     * @returns {Validation}\n     */setAlias:function setAlias(path,alias){var the=this;if(typeis(path)==='object'){dato.extend(the._aliasMap,path);return the;}the._aliasMap[path]=alias;return the;},/**\n     * 获取字段别名\n     * @param path\n     * @returns {*}\n     */getAlias:function getAlias(path){return this._aliasMap[path];},/**\n     * 重设验证消息\n     * @param path\n     * @param ruleName\n     * @param msg\n     * @returns {Validation}\n     */setMsg:function setMsg(path,ruleName,msg){var the=this;the._msgMap[path]=the._msgMap[path]||{};the._msgMap[path][ruleName]=msg;return the;},/**\n     * 注册验证规则，按顺序执行验证\n     * @param path {String} 字段\n     * @param nameOrfn {String|Function} 验证规则，可以是静态规则，也可以添加规则\n     * @returns {Validation}\n     */addRule:function addRule(path,nameOrfn/*arguments*/){var the=this;var args=allocation.args(arguments);var params=args.slice(2);var index=the._validateIndexMap[path];if(typeis.Undefined(index)){index=the._validateIndexMap[path]=the._validateList.length;the._validateList.push({path:path,rules:[]});}if(typeis.String(nameOrfn)){var name=nameOrfn;if(!validationMap[name]){throw'can not found `'+name+'` validation';}the._validateList[index].rules.push({name:name,params:params,fn:validationMap[name],id:random.guid()});}else if(typeis.Function(nameOrfn)){the._validateList[index].rules.push({name:namespace+alienIndex++,params:params,fn:nameOrfn,id:random.guid()});}return the;},/**\n     * 获取字段的规则\n     * @param [path] {String} 字段\n     * @returns {Array}\n     */getRules:function getRules(path){var the=this;if(!path){return the._validateList;}var rules=[];dato.each(the._validateList,function(i,validate){if(path===validate.path){rules=validate.rules;return false;}});return rules;},/**\n     * 获取字段验证规则的参数\n     * @param path {String} 字段\n     * @param name {String} 规则名称\n     * @returns {*|Array}}\n     */getRuleParams:function getRuleParams(path,name){var the=this;var rules=the.getRules(path);var rule;dato.each(rules,function(index,_rule){if(_rule.name===name){rule=_rule;return false;}});return rule&&rule.params;},/**\n     * 返回待验证的数据\n     * @param [path] {String} 字段\n     * @returns {*}\n     */getData:function getData(path){var the=this;if(typeis.Array(path)){return dato.select(the.data,path);}else if(typeis.String(path)){return the.data[path];}return the.data;},/**\n     * 设置待验证的数据\n     * @param path {String} 数据字段\n     * @param val {*} 数据值\n     * @returns {Validation}\n     */setData:function setData(path,val){var the=this;the.data[path]=val;return the;},/**\n     * 执行单个验证\n     * @param data {Object} 待验证的数据\n     * @param [path] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */validateOne:function validateOne(data,path,callback){var args=allocation.args(arguments);if(!typeis.String(args[1])){callback=args[1];path=Object.keys(data)[0];}return this.validateSome(data,path,callback);},/**\n     * 执行部分验证\n     * @param data {Object} 待验证的数据\n     * @param [paths] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */validateSome:function validateSome(data,paths,callback){var the=this;var options=the._options;var path='';var args=allocation.args(arguments);var pathMap={};if(the._isValidating){return the;}// validateSome(data, callback)\nif(!typeis.String(args[1])&&!typeis.Array(args[1])){paths=Object.keys(data);callback=args[1];}paths=typeis.String(paths)?[paths]:paths;dato.each(paths,function(index,path){pathMap[path]=1;});the._isValidating=true;the.data=data;// var errorLength = 0;\nvar firstInvlidError=null;var firstInvlidPath=null;howdo// 遍历验证顺序\n.each(the._validateList,function(i,item,next){if(!(item.path in pathMap)){return next();}the._validateOne(path=item.path,item.rules,function(err){if(err){if(!firstInvlidPath){firstInvlidError=err;firstInvlidPath=item.path;}// errorLength++;\n}// 有错误 && 失败不断开\nif(err&&!options.breakOnInvalid){err=null;}next(err);});}).follow(function(){the._isValidating=false;if(typeis.Function(callback)){callback.call(the,firstInvlidError,firstInvlidPath);}});return the;},/**\n     * @description Validate all data\n     * @author thanh.bay\n     * @param data {Object} 待验证的数据\n     * @param [paths] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */validateSomeAll:function validateSomeAll(data,paths,callback){var the=this;var options=the._options;var path='';var args=allocation.args(arguments);var pathMap={};if(the._isValidating){return the;}// validateSome(data, callback)\nif(!typeis.String(args[1])&&!typeis.Array(args[1])){paths=Object.keys(data);callback=args[1];}paths=typeis.String(paths)?[paths]:paths;dato.each(paths,function(index,path){pathMap[path]=1;});the._isValidating=true;the.data=data;// var errorLength = 0;\nvar invalidData={};howdo// 遍历验证顺序\n.each(the._validateList,function(i,item,next){if(!(item.path in pathMap)){return next();}the._validateOne(path=item.path,item.rules,function(err){if(err){invalidData[item.path]=err.message;// errorLength++;\n}// 有错误 && 失败不断开\nif(err&&!options.breakOnInvalid){err=null;}next(err);});}).follow(function(){the._isValidating=false;if(typeis.Function(callback)){callback.call(the,invalidData);}});return the;},/**\n     * 执行全部验证\n     * @param data {Object} 待验证的数据\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */validateAll:function validateAll(data,callback){var the=this;var paths=[];dato.each(the._validateList,function(index,item){paths.push(item.path);});return the.validateSome(data,paths,callback);},/**\n     * @description validate all data at the same time\n     * @param data {Object} 待验证的数据\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */FLValidateAll:function FLValidateAll(data,callback){var the=this;var paths=[];dato.each(the._validateList,function(index,item){paths.push(item.path);});return the.validateSomeAll(data,paths,callback);},/**\n     * 表单验证\n     * @param path {String} 字段\n     * @param rules {Array} 验证规则\n     * @param callback {Function} 验证回调\n     * @private\n     */_validateOne:function _validateOne(path,rules,callback){var the=this;var options=the._options;var data=the.data;/**\n         * 验证之前\n         * @event beforeValidate\n         * @param path {String} 字段\n         */the.emit('beforeValidate',path);var currentRule;howdo// 遍历验证规则\n.each(rules,function(j,rule,next){var args=[data[path],next];currentRule=rule;the.emit('validate',path,rule.name);args=args.concat(rule.params);the.path=path;rule.fn.apply(the,args);}).follow().try(function(){/**\n                 * 验证成功\n                 * @event valid\n                 * @param path {String} 字段\n                 */the.emit('valid',path);/**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */the.emit('validate',path);if(typeis.Function(callback)){callback.call(the,null);}}).catch(function(err){var overrideMsg=the._msgMap[path]&&the._msgMap[path][currentRule.name];var args=[overrideMsg||err||options.defaultMsg,the.getAlias(path)||path];args=args.concat(currentRule.params);err=new TypeError(string.assign.apply(string,args));err.id=currentRule.id;/**\n                 * 验证失败\n                 * @event invalid\n                 * @param error {Object} 错误对象\n                 * @param path {String} 字段\n                 */the.emit('invalid',err,path);/**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */the.emit('validate',path);if(typeis.Function(callback)){callback.call(the,err);}});},/**\n     * 表单验证\n     * @param path {String} 字段\n     * @param rules {Array} 验证规则\n     * @param callback {Function} 验证回调\n     * @private\n     */_validateAll:function _validateAll(path,rules,callback){var the=this;var options=the._options;var data=the.data;/**\n         * 验证之前\n         * @event beforeValidate\n         * @param path {String} 字段\n         */the.emit('beforeValidate',path);var currentRule;howdo// 遍历验证规则\n.each(rules,function(j,rule,next){var args=[data[path],next];currentRule=rule;the.emit('validate',path,rule.name);args=args.concat(rule.params);the.path=path;rule.fn.apply(the,args);}).follow().try(function(){/**\n                 * 验证成功\n                 * @event valid\n                 * @param path {String} 字段\n                 */the.emit('valid',path);/**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */the.emit('validate',path);if(typeis.Function(callback)){callback.call(the,null);}}).catch(function(err){var overrideMsg=the._msgMap[path]&&the._msgMap[path][currentRule.name];var args=[overrideMsg||err||options.defaultMsg,the.getAlias(path)||path];args=args.concat(currentRule.params);err=new TypeError(string.assign.apply(string,args));err.id=currentRule.id;/**\n                 * 验证失败\n                 * @event invalid\n                 * @param error {Object} 错误对象\n                 * @param path {String} 字段\n                 */the.emit('invalid',err,path);/**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */the.emit('validate',path);if(typeis.Function(callback)){callback.call(the,err);}});}});/**\n * 注册静态验证规则\n * @param name {String} 规则名称\n * @param fn {Function} 规则回调\n *\n * @example\n * Validation.addRule('number', function (val, done, param0, param1, ...) {\n *    done(/^\\d+$/.test(val) ? null : '${path}必须是数字');\n * });\n */Validation.addRule=function(name,fn/*arguments*/){validationMap[name]=fn;};/**\n * 返回静态规则\n * @param [name] {String} 规则名\n * @returns {Object|Function}\n */Validation.getRule=function(name){return name?validationMap[name]:validationMap;};require('./_validation-rules.js')(Validation);Validation.defaults=defaults;module.exports=Validation;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/validator/libs/validation.js"],"names":["howdo","require","klass","dato","typeis","allocation","string","Emitter","random","validationMap","namespace","alienIndex","defaults","breakOnInvalid","window","defaultMsg","Validation","extends","create","constructor","options","the","_options","extend","_validateList","_validateIndexMap","_aliasMap","_msgMap","_validationMap","className","setAlias","path","alias","getAlias","setMsg","ruleName","msg","addRule","nameOrfn","args","arguments","params","slice","index","Undefined","length","push","rules","String","name","fn","id","guid","Function","getRules","each","i","validate","getRuleParams","rule","_rule","getData","Array","select","data","setData","val","validateOne","callback","Object","keys","validateSome","paths","pathMap","_isValidating","firstInvlidError","firstInvlidPath","item","next","_validateOne","err","follow","call","validateSomeAll","invalidData","message","validateAll","FLValidateAll","emit","currentRule","j","concat","apply","try","catch","overrideMsg","TypeError","assign","_validateAll","getRule","module","exports"],"mappings":"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","sourcesContent":["/**\n * 表单验证\n * @author ydr.me\n * @create 2015-07-01 16:57\n * @update 2015-10-19 11:44:25\n */\n\n\nvar howdo = require('howdo');\n\nvar klass = require('./class.js');\nvar dato = require('./dato.js');\nvar typeis = require('./typeis.js');\nvar allocation = require('./allocation.js');\nvar string = require('./string.js');\nvar Emitter = require('./emitter.js');\nvar random = require('./random.js');\n\n\n/**\n * @type {{}}\n * @exmaple\n * {\n     *     // val 值\n     *     // param 参数值\n     *     // done 验证结束回调\n     *     minLength: function (val, done, param0, param1, ...) {\n     *        // done(null); done(null)表示没有错误\n     *        // done('${path}的长度不足xx字符')\n     *     }\n     * }\n */\nvar validationMap = {};\nvar namespace = 'donkey-libs-validation';\nvar alienIndex = 0;\nvar defaults = {\n    // true: 返回单个错误对象\n    // false: 返回错误对象组成的数组\n    // 浏览器端，默认为 false\n    // 服务器端，默认为 true\n    breakOnInvalid: typeof window === 'undefined',\n    defaultMsg: '${1}不合法'\n};\nvar Validation = klass.extends(Emitter).create({\n    constructor: function (options) {\n        var the = this;\n\n        the._options = dato.extend({}, defaults, options);\n        the._validateList = [];\n        the._validateIndexMap = {};\n        the._aliasMap = {};\n        the._msgMap = {};\n        the._validationMap = {};\n        the.className = 'validation';\n    },\n\n\n    /**\n     * 为路径设置别名\n     * @param path {String} 字段\n     * @param [alias] {String} 别名\n     * @returns {Validation}\n     */\n    setAlias: function (path, alias) {\n        var the = this;\n\n        if (typeis(path) === 'object') {\n            dato.extend(the._aliasMap, path);\n            return the;\n        }\n\n        the._aliasMap[path] = alias;\n        return the;\n    },\n\n\n    /**\n     * 获取字段别名\n     * @param path\n     * @returns {*}\n     */\n    getAlias: function (path) {\n        return this._aliasMap[path];\n    },\n\n\n    /**\n     * 重设验证消息\n     * @param path\n     * @param ruleName\n     * @param msg\n     * @returns {Validation}\n     */\n    setMsg: function (path, ruleName, msg) {\n        var the = this;\n\n        the._msgMap[path] = the._msgMap[path] || {};\n        the._msgMap[path][ruleName] = msg;\n\n        return the;\n    },\n\n\n    /**\n     * 注册验证规则，按顺序执行验证\n     * @param path {String} 字段\n     * @param nameOrfn {String|Function} 验证规则，可以是静态规则，也可以添加规则\n     * @returns {Validation}\n     */\n    addRule: function (path, nameOrfn/*arguments*/) {\n        var the = this;\n        var args = allocation.args(arguments);\n        var params = args.slice(2);\n        var index = the._validateIndexMap[path];\n        if (typeis.Undefined(index)) {\n            index = the._validateIndexMap[path] = the._validateList.length;\n            the._validateList.push({\n                path: path,\n                rules: []\n            });\n        }\n\n        if (typeis.String(nameOrfn)) {\n            var name = nameOrfn;\n\n            if (!validationMap[name]) {\n                throw 'can not found `' + name + '` validation';\n            }\n\n            the._validateList[index].rules.push({\n                name: name,\n                params: params,\n                fn: validationMap[name],\n                id: random.guid()\n            });\n        } else if (typeis.Function(nameOrfn)) {\n            the._validateList[index].rules.push({\n                name: namespace + alienIndex++,\n                params: params,\n                fn: nameOrfn,\n                id: random.guid()\n            });\n        }\n\n        return the;\n    },\n\n\n    /**\n     * 获取字段的规则\n     * @param [path] {String} 字段\n     * @returns {Array}\n     */\n    getRules: function (path) {\n        var the = this;\n\n        if (!path) {\n            return the._validateList;\n        }\n\n        var rules = [];\n\n        dato.each(the._validateList, function (i, validate) {\n            if (path === validate.path) {\n                rules = validate.rules;\n\n                return false;\n            }\n        });\n\n        return rules;\n    },\n\n\n    /**\n     * 获取字段验证规则的参数\n     * @param path {String} 字段\n     * @param name {String} 规则名称\n     * @returns {*|Array}}\n     */\n    getRuleParams: function (path, name) {\n        var the = this;\n        var rules = the.getRules(path);\n        var rule;\n\n        dato.each(rules, function (index, _rule) {\n            if (_rule.name === name) {\n                rule = _rule;\n                return false;\n            }\n        });\n\n        return rule && rule.params;\n    },\n\n\n    /**\n     * 返回待验证的数据\n     * @param [path] {String} 字段\n     * @returns {*}\n     */\n    getData: function (path) {\n        var the = this;\n\n        if (typeis.Array(path)) {\n            return dato.select(the.data, path);\n        } else if (typeis.String(path)) {\n            return the.data[path];\n        }\n\n        return the.data;\n    },\n\n\n    /**\n     * 设置待验证的数据\n     * @param path {String} 数据字段\n     * @param val {*} 数据值\n     * @returns {Validation}\n     */\n    setData: function (path, val) {\n        var the = this;\n\n        the.data[path] = val;\n\n        return the;\n    },\n\n\n    /**\n     * 执行单个验证\n     * @param data {Object} 待验证的数据\n     * @param [path] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */\n    validateOne: function (data, path, callback) {\n        var args = allocation.args(arguments);\n        if (!typeis.String(args[1])) {\n            callback = args[1];\n            path = Object.keys(data)[0];\n        }\n\n        return this.validateSome(data, path, callback);\n    },\n\n\n    /**\n     * 执行部分验证\n     * @param data {Object} 待验证的数据\n     * @param [paths] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */\n    validateSome: function (data, paths, callback) {\n        var the = this;\n        var options = the._options;\n        var path = '';\n        var args = allocation.args(arguments);\n        var pathMap = {};\n\n        if (the._isValidating) {\n            return the;\n        }\n\n        // validateSome(data, callback)\n        if(!typeis.String(args[1]) && !typeis.Array(args[1])){\n            paths = Object.keys(data);\n            callback = args[1];\n        }\n\n        paths = typeis.String(paths) ? [paths] : paths;\n\n        dato.each(paths, function (index, path) {\n            pathMap[path] = 1;\n        });\n\n        the._isValidating = true;\n        the.data = data;\n        // var errorLength = 0;\n        var firstInvlidError = null;\n        var firstInvlidPath = null;\n        howdo\n        // 遍历验证顺序\n            .each(the._validateList, function (i, item, next) {\n                if (!(item.path in pathMap)) {\n                    return next();\n                }\n                the._validateOne(path = item.path, item.rules, function (err) {\n                    if (err) {\n                        if (!firstInvlidPath) {\n                            firstInvlidError = err;\n                            firstInvlidPath = item.path;\n                        }\n\n                        // errorLength++;\n                    }\n\n                    // 有错误 && 失败不断开\n                    if (err && !options.breakOnInvalid) {\n                        err = null;\n                    }\n\n                    next(err);\n                });\n            })\n            .follow(function () {\n                the._isValidating = false;\n                if (typeis.Function(callback)) {\n                    callback.call(the, firstInvlidError, firstInvlidPath);\n                }\n            });\n\n        return the;\n    },\n\n    /**\n     * @description Validate all data\n     * @author thanh.bay\n     * @param data {Object} 待验证的数据\n     * @param [paths] {String} 指定验证的字段\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */\n    validateSomeAll: function (data, paths, callback) {\n        var the = this;\n        var options = the._options;\n        var path = '';\n        var args = allocation.args(arguments);\n        var pathMap = {};\n\n        if (the._isValidating) {\n            return the;\n        }\n\n        // validateSome(data, callback)\n        if (!typeis.String(args[1]) && !typeis.Array(args[1])) {\n            paths = Object.keys(data);\n            callback = args[1];\n        }\n\n        paths = typeis.String(paths) ? [paths] : paths;\n\n        dato.each(paths, function (index, path) {\n            pathMap[path] = 1;\n        });\n\n        the._isValidating = true;\n        the.data = data;\n        // var errorLength = 0;\n        var invalidData = {}\n\n        howdo\n            // 遍历验证顺序\n            .each(the._validateList, function (i, item, next) {\n                if (!(item.path in pathMap)) {\n                    return next();\n                }\n\n                the._validateOne(path = item.path, item.rules, function (err) {\n                    if (err) {\n                        invalidData[item.path] = err.message;\n                        // errorLength++;\n                    }\n\n                    // 有错误 && 失败不断开\n                    if (err && !options.breakOnInvalid) {\n                        err = null;\n                    }\n\n                    next(err);\n                });\n            })\n            .follow(function () {\n                the._isValidating = false;\n\n                if (typeis.Function(callback)) {\n                    callback.call(the, invalidData);\n                }\n            });\n        return the;\n    },\n\n\n    /**\n     * 执行全部验证\n     * @param data {Object} 待验证的数据\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */\n    validateAll: function (data, callback) {\n        var the = this;\n        var paths = [];\n\n        dato.each(the._validateList, function (index, item) {\n            paths.push(item.path);\n        });\n\n        return the.validateSome(data, paths, callback);\n    },\n\n    /**\n     * @description validate all data at the same time\n     * @param data {Object} 待验证的数据\n     * @param [callback] {Function} 验证回调\n     * @returns {Validation}\n     */\n    FLValidateAll: function (data, callback) {\n        var the = this;\n        var paths = [];\n\n        dato.each(the._validateList, function (index, item) {\n            paths.push(item.path);\n        });\n\n        return the.validateSomeAll(data, paths, callback);\n    },\n\n    /**\n     * 表单验证\n     * @param path {String} 字段\n     * @param rules {Array} 验证规则\n     * @param callback {Function} 验证回调\n     * @private\n     */\n    _validateOne: function (path, rules, callback) {\n        var the = this;\n        var options = the._options;\n        var data = the.data;\n\n        /**\n         * 验证之前\n         * @event beforeValidate\n         * @param path {String} 字段\n         */\n        the.emit('beforeValidate', path);\n        var currentRule;\n        howdo\n        // 遍历验证规则\n            .each(rules, function (j, rule, next) {\n                var args = [data[path], next];\n\n                currentRule = rule;\n                the.emit('validate', path, rule.name);\n                args = args.concat(rule.params);\n                the.path = path;\n                rule.fn.apply(the, args);\n            })\n            .follow()\n            .try(function () {\n                /**\n                 * 验证成功\n                 * @event valid\n                 * @param path {String} 字段\n                 */\n                the.emit('valid', path);\n\n                /**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */\n                the.emit('validate', path);\n\n                if (typeis.Function(callback)) {\n                    callback.call(the, null);\n                }\n            })\n            .catch(function (err) {\n                var overrideMsg = the._msgMap[path] && the._msgMap[path][currentRule.name];\n                var args = [overrideMsg || err || options.defaultMsg, the.getAlias(path) || path];\n                args = args.concat(currentRule.params);\n                err = new TypeError(string.assign.apply(string, args));\n                err.id = currentRule.id;\n                /**\n                 * 验证失败\n                 * @event invalid\n                 * @param error {Object} 错误对象\n                 * @param path {String} 字段\n                 */\n                the.emit('invalid', err, path);\n\n                /**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */\n                the.emit('validate', path);\n\n                if (typeis.Function(callback)) {\n                    callback.call(the, err);\n                }\n            });\n    },\n\n    /**\n     * 表单验证\n     * @param path {String} 字段\n     * @param rules {Array} 验证规则\n     * @param callback {Function} 验证回调\n     * @private\n     */\n    _validateAll: function (path, rules, callback) {\n        var the = this;\n        var options = the._options;\n        var data = the.data;\n\n        /**\n         * 验证之前\n         * @event beforeValidate\n         * @param path {String} 字段\n         */\n        the.emit('beforeValidate', path);\n        var currentRule;\n        howdo\n            // 遍历验证规则\n            .each(rules, function (j, rule, next) {\n                var args = [data[path], next];\n\n                currentRule = rule;\n                the.emit('validate', path, rule.name);\n                args = args.concat(rule.params);\n                the.path = path;\n                rule.fn.apply(the, args);\n            })\n            .follow()\n            .try(function () {\n                /**\n                 * 验证成功\n                 * @event valid\n                 * @param path {String} 字段\n                 */\n                the.emit('valid', path);\n\n                /**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */\n                the.emit('validate', path);\n\n                if (typeis.Function(callback)) {\n                    callback.call(the, null);\n                }\n            })\n            .catch(function (err) {\n                var overrideMsg = the._msgMap[path] && the._msgMap[path][currentRule.name];\n                var args = [overrideMsg || err || options.defaultMsg, the.getAlias(path) || path];\n\n                args = args.concat(currentRule.params);\n                err = new TypeError(string.assign.apply(string, args));\n                err.id = currentRule.id;\n\n                /**\n                 * 验证失败\n                 * @event invalid\n                 * @param error {Object} 错误对象\n                 * @param path {String} 字段\n                 */\n                the.emit('invalid', err, path);\n\n                /**\n                 * 验证之后\n                 * @event validate\n                 * @param path {String} 字段\n                 */\n                the.emit('validate', path);\n\n                if (typeis.Function(callback)) {\n                    callback.call(the, err);\n                }\n            });\n    }\n    \n});\n\n/**\n * 注册静态验证规则\n * @param name {String} 规则名称\n * @param fn {Function} 规则回调\n *\n * @example\n * Validation.addRule('number', function (val, done, param0, param1, ...) {\n *    done(/^\\d+$/.test(val) ? null : '${path}必须是数字');\n * });\n */\nValidation.addRule = function (name, fn/*arguments*/) {\n    validationMap[name] = fn;\n};\n\n\n/**\n * 返回静态规则\n * @param [name] {String} 规则名\n * @returns {Object|Function}\n */\nValidation.getRule = function (name) {\n    return name ? validationMap[name] : validationMap;\n};\n\nrequire('./_validation-rules.js')(Validation);\nValidation.defaults = defaults;\nmodule.exports = Validation;\n"]},"metadata":{},"sourceType":"module"}