{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\n\nclass AddPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.onFileAvatarChange = event => {\n      var {\n        t\n      } = this.props;\n      var target = event.target;\n      var file = target.files[0];\n      if (!file || file === undefined || file === null) return;\n      var fileName = file.name,\n          fileSize = file.size;\n      var checkExtFile = Libs.checkExtensionFile(fileName, 1);\n      var msgAvatarError = null;\n\n      if (!checkExtFile) {\n        msgAvatarError = t('message.msg_err_ext_image_file');\n      } else if (fileSize <= 0) {\n        msgAvatarError = t('message.msg_err_file_size');\n      } else if (fileSize > Constants.COMMON.MAX_IMAGE_SIZE) {\n        msgAvatarError = t('message.msg_err_max_size_upload');\n      }\n\n      var self = this;\n      var {\n        curItem\n      } = this.state;\n\n      if (!Libs.isBlank(msgAvatarError)) {\n        curItem.upload_thumbnail = '';\n        curItem.thumbnail_message = msgAvatarError;\n        this.setState({\n          curItem: curItem\n        });\n        return;\n      } else {\n        curItem.thumbnail_message = '';\n        this.setState({\n          curItem: curItem\n        });\n      } //Read file upload\n\n\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        curItem.upload_thumbnail = e.target.result;\n        curItem.upload_thumbnail_name = fileName;\n        self.setState({\n          curItem: curItem\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    this.onClickDeleteAvatar = event => {\n      var {\n        curItem\n      } = this.state;\n      curItem.thumbnail_message = '';\n      curItem.thumbnail_upload = '';\n      curItem.thumbnail = null;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.onClickShowTab = (e, tabActive) => {\n      var curItem = this.state.curItem;\n      if (Libs.isBlank(tabActive)) return;\n      curItem.tabActive = tabActive;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.handleInputTranslateChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (target.type === 'checkbox') {\n        value = target.checked ? 1 : 0;\n      }\n\n      if (name) {\n        let item = this.state.curItem;\n        let allLanguage = this.state.allLanguage;\n        let isoCode = name.substr(-2, 2),\n            dataName = name.substr(0, 4),\n            dataDescription = name.substr(0, 11);\n        allLanguage.map((language, index) => {\n          if (isoCode === language.iso_code && dataName === 'name') {\n            item.data[index].name = event.target.validity.valid ? value : this.state.curItem.data[index].name;\n          }\n\n          if (isoCode === language.iso_code && dataDescription === 'description') {\n            item.data[index].description = event.target.validity.valid ? value : this.state.curItem.data[index].description;\n          }\n\n          return 1;\n        });\n        item[name] = event.target.validity.valid ? value : this.state.curItem[name];\n        this.setState({\n          curItem: item\n        });\n      }\n    };\n\n    this.state = {\n      curItem: this.props.curItem,\n      allLanguage: this.props.allLanguage\n    };\n    this.jsxTemplate = AddPopupJsx;\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  componentDidMount() {\n    var {\n      curItem\n    } = this.state;\n\n    if (Constants.SCREEN_MODE.ADD == curItem.screen_mode) {\n      curItem.status = 1;\n    }\n\n    this.setState({\n      curItem: curItem\n    });\n  }\n  /**\n   * @description Upload icon  \n   * @author Long.Pham 12/05/2021\n   */\n\n\n  /**\n   * @description validate a field input\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n  async validateOne(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new AddPopupValidate(this.props);\n      let error = await v.validateOne(param, name);\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n  /**\n   * @description select change\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n\n\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n  async onSave() {\n    var {\n      curItem\n    } = this.state,\n        self = this;\n    var params = Object.assign({}, this.state.curItem);\n    var screenMode = !Libs.isBlank(curItem.id) ? Constants.SCREEN_MODE.EDIT : !Libs.isBlank(this.props.curItem.screen_mode) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD;\n    let v = new AddPopupValidate(this.props);\n    let errors = await v.FLValidationAll(curItem);\n\n    if (errors) {\n      this.setValidateMessage(errors);\n      return;\n    } //remove message validation\n\n\n    this.removeAllValidateMessage();\n    params.screen_mode = screenMode;\n    params.iso_code_lang = this.employee.lang;\n    params.id_language = this.employee.id_language;\n    params.iso_code = this.employee.iso_code;\n\n    if (Libs.isArrayData(params.data)) {\n      let itemLanguageDefault = Libs.find(params.data, 'is_default', 1);\n      if (!itemLanguageDefault) return;\n      params.data.map((item, index) => {\n        params.data[index].name = item.name === '' ? itemLanguageDefault.name : item.name;\n        params.data[index].description = item.description === '' ? itemLanguageDefault.description : item.description;\n        return params;\n      });\n    } else {\n      return false;\n    }\n\n    ErrorTypeService.instance.save(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseAdd(true);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default AddPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/ErrorType/AddPopup.js"],"names":["BaseComponent","Libs","Constants","AddPopupJsx","AddPopupValidate","ErrorTypeService","AddPopup","constructor","props","onFileAvatarChange","event","t","target","file","files","undefined","fileName","name","fileSize","size","checkExtFile","checkExtensionFile","msgAvatarError","COMMON","MAX_IMAGE_SIZE","self","curItem","state","isBlank","upload_thumbnail","thumbnail_message","setState","reader","FileReader","onload","e","result","upload_thumbnail_name","readAsDataURL","onClickDeleteAvatar","thumbnail_upload","thumbnail","onClickShowTab","tabActive","handleInputTranslateChange","value","type","checked","item","allLanguage","isoCode","substr","dataName","dataDescription","map","language","index","iso_code","data","validity","valid","description","jsxTemplate","componentDidMount","SCREEN_MODE","ADD","screen_mode","status","validateOne","param","v","error","setValidateMessage","onSave","params","Object","assign","screenMode","id","EDIT","errors","FLValidationAll","removeAllValidateMessage","iso_code_lang","employee","lang","id_language","isArrayData","itemLanguageDefault","find","instance","save","msg","toast","onClickCloseAdd"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\n\nclass AddPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            allLanguage: this.props.allLanguage\n        }\n\n        this.jsxTemplate = AddPopupJsx;\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/05/2021\n     */\n    componentDidMount() {\n        var { curItem } = this.state;\n        if(Constants.SCREEN_MODE.ADD == curItem.screen_mode){\n            curItem.status = 1;\n        }\n        this.setState({\n            curItem: curItem\n        })\n    }\n    \n\n    /**\n     * @description Upload icon  \n     * @author Long.Pham 12/05/2021\n     */\n    onFileAvatarChange = (event) => {\n        var { t } = this.props;\n        var target = event.target;\n        var file = target.files[0];\n        if (!file || file === undefined || file === null) return;\n        var fileName = file.name, fileSize = file.size;\n        var checkExtFile = Libs.checkExtensionFile(fileName, 1);\n        var msgAvatarError = null;\n        if (!checkExtFile) {\n            msgAvatarError = t('message.msg_err_ext_image_file')\n        }\n        else if (fileSize <= 0) {\n            msgAvatarError = t('message.msg_err_file_size');\n        }\n        else if (fileSize > Constants.COMMON.MAX_IMAGE_SIZE) {\n            msgAvatarError = t('message.msg_err_max_size_upload');\n        }\n\n        var self = this;\n        var { curItem } = this.state;\n        if (!Libs.isBlank(msgAvatarError)) {\n            curItem.upload_thumbnail = '';\n            curItem.thumbnail_message = msgAvatarError;\n            this.setState({\n                curItem: curItem\n            });\n\n            return;\n        } else {\n            curItem.thumbnail_message = '';\n            this.setState({\n                curItem: curItem\n            });\n        }\n\n        //Read file upload\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            curItem.upload_thumbnail = e.target.result;\n            curItem.upload_thumbnail_name = fileName;\n            self.setState({\n                curItem: curItem\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    /**\n     * @description Delete icon upload \n     * @author Long.Pham 12/05/2021\n     */\n    onClickDeleteAvatar = (event) => {\n        var { curItem } = this.state;\n        curItem.thumbnail_message = '';\n        curItem.thumbnail_upload = '';\n        curItem.thumbnail = null;\n\n        this.setState({\n            curItem: curItem\n        });\n    }\n\n    onClickShowTab = (e, tabActive) => {\n        var curItem = this.state.curItem;\n        if (Libs.isBlank(tabActive)) return;\n        curItem.tabActive = tabActive;\n\n        this.setState({\n            curItem: curItem\n        });\n    }\n\n\n    /**\n     * @description validate a field input\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n    async validateOne(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value\n        if (name) {\n            let param = {\n                [name]: value\n            }\n            let v = new AddPopupValidate(this.props);\n            let error = await v.validateOne(param, name);\n            if (error != null) {\n                this.setValidateMessage(error, true);\n            }\n        }\n    }\n\n    /**\n     * @description select change\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n\n    handleInputTranslateChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n        if (name) {\n            let item = this.state.curItem;\n            let allLanguage = this.state.allLanguage;\n            let isoCode = name.substr(-2, 2),\n                dataName = name.substr(0, 4),\n                dataDescription = name.substr(0, 11);\n\n            allLanguage.map((language, index) => {\n                if (isoCode === language.iso_code && dataName === 'name') {\n                    item.data[index].name = (event.target.validity.valid) ? value : this.state.curItem.data[index].name;\n                }\n\n                if (isoCode === language.iso_code && dataDescription === 'description') {\n                    item.data[index].description = (event.target.validity.valid) ? value : this.state.curItem.data[index].description;\n                }\n                return 1;\n            });\n\n            item[name] = (event.target.validity.valid) ? value : this.state.curItem[name];\n\n            this.setState({ curItem: item });\n        }\n    }\n\n\n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var {curItem} = this.state, self = this;\n        var params = Object.assign({}, this.state.curItem);\n        var screenMode = (!Libs.isBlank(curItem.id)) ? Constants.SCREEN_MODE.EDIT : ((!Libs.isBlank(this.props.curItem.screen_mode)) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD);\n        let v = new AddPopupValidate(this.props);\n        let errors = await v.FLValidationAll(curItem);\n        if (errors) {\n            this.setValidateMessage(errors);\n            return;\n        }\n        //remove message validation\n        this.removeAllValidateMessage();\n        params.screen_mode = screenMode;\n\n        params.iso_code_lang = this.employee.lang;\n        params.id_language = this.employee.id_language;\n        params.iso_code = this.employee.iso_code;\n\n        if (Libs.isArrayData(params.data)) {\n            let itemLanguageDefault = Libs.find(params.data, 'is_default', 1);\n            if (!itemLanguageDefault) return;\n\n            params.data.map((item, index) => {\n                params.data[index].name = (item.name === '') ? itemLanguageDefault.name : item.name;\n                params.data[index].description = (item.description === '') ? itemLanguageDefault.description : item.description;\n                return params;\n\n            });\n        } else { return false; }\n\n        ErrorTypeService.instance.save(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseAdd(true);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default AddPopup;"]},"metadata":{},"sourceType":"module"}