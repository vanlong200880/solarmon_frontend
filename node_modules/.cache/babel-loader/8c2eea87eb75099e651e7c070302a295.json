{"ast":null,"code":"import _classCallCheck from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import BaseValidate from'../../../../validator/BaseValidate';var AddChangePasswordValidate=/*#__PURE__*/function(_BaseValidate){_inherits(AddChangePasswordValidate,_BaseValidate);var _super=_createSuper(AddChangePasswordValidate);function AddChangePasswordValidate(props){var _this;_classCallCheck(this,AddChangePasswordValidate);_this=_super.call(this);var t=props.t;_this.trans=t;return _this;}_createClass(AddChangePasswordValidate,[{key:\"setRule\",value:function setRule(){this.addRuleForField('current_password','trim',true);this.addRuleForField('current_password','required',true,this.trans('validate_rule.required'),this.trans('employee.current_password'));this.addRuleForField('current_password','maxLength',200,this.trans('validate_rule.maxLength_input'),this.trans('employee.current_password'));this.addRuleForField('current_password','minLength',8,this.trans('validate_rule.minLength_input'),this.trans('employee.current_password'));this.addRuleForField('password','trim',true);this.addRuleForField('password','required',true,this.trans('validate_rule.required'),this.trans('employee.new_password'));this.addRuleForField('password','maxLength',200,this.trans('validate_rule.maxLength_input'),this.trans('employee.new_password'));this.addRuleForField('password','minLength',8,this.trans('validate_rule.minLength_input'),this.trans('employee.new_password'));this.addRuleForField('password_confirm','trim',true);this.addRuleForField('password_confirm','required',true,this.trans('validate_rule.required'),this.trans('employee.password_confirm'));this.addRuleForField('password_confirm','maxLength',200,this.trans('validate_rule.maxLength_input'),this.trans('employee.password_confirm'));this.addRuleForField('password_confirm','minLength',8,this.trans('validate_rule.minLength_input'),this.trans('employee.password_confirm'));}},{key:\"setAlias\",value:function setAlias(){this.v.setAlias({current_password:this.trans('employee.current_password'),password:this.trans('employee.new_password'),password_confirm:this.trans('employee.password_confirm')});}}]);return AddChangePasswordValidate;}(BaseValidate);export default AddChangePasswordValidate;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/Account/AddChangePasswordValidate.js"],"names":["BaseValidate","AddChangePasswordValidate","props","t","trans","addRuleForField","v","setAlias","current_password","password","password_confirm"],"mappings":"gmBAAA,MAAOA,CAAAA,YAAP,KAAyB,oCAAzB,C,GACMC,CAAAA,yB,4IACF,mCAAYC,KAAZ,CAAkB,2DACd,wBACA,GAAKC,CAAAA,CAAL,CAAUD,KAAV,CAAKC,CAAL,CACA,MAAKC,KAAL,CAAaD,CAAb,CAHc,aAIjB,C,6DACD,kBAAS,CACL,KAAKE,eAAL,CAAqB,kBAArB,CAAyC,MAAzC,CAAiD,IAAjD,EACA,KAAKA,eAAL,CAAqB,kBAArB,CAAyC,UAAzC,CAAqD,IAArD,CAA2D,KAAKD,KAAL,CAAW,wBAAX,CAA3D,CAAiG,KAAKA,KAAL,CAAW,2BAAX,CAAjG,EACA,KAAKC,eAAL,CAAqB,kBAArB,CAAyC,WAAzC,CAAsD,GAAtD,CAA2D,KAAKD,KAAL,CAAW,+BAAX,CAA3D,CAAwG,KAAKA,KAAL,CAAW,2BAAX,CAAxG,EACA,KAAKC,eAAL,CAAqB,kBAArB,CAAyC,WAAzC,CAAsD,CAAtD,CAAyD,KAAKD,KAAL,CAAW,+BAAX,CAAzD,CAAsG,KAAKA,KAAL,CAAW,2BAAX,CAAtG,EAEA,KAAKC,eAAL,CAAqB,UAArB,CAAiC,MAAjC,CAAyC,IAAzC,EACA,KAAKA,eAAL,CAAqB,UAArB,CAAiC,UAAjC,CAA6C,IAA7C,CAAmD,KAAKD,KAAL,CAAW,wBAAX,CAAnD,CAAyF,KAAKA,KAAL,CAAW,uBAAX,CAAzF,EACA,KAAKC,eAAL,CAAqB,UAArB,CAAiC,WAAjC,CAA8C,GAA9C,CAAmD,KAAKD,KAAL,CAAW,+BAAX,CAAnD,CAAgG,KAAKA,KAAL,CAAW,uBAAX,CAAhG,EACA,KAAKC,eAAL,CAAqB,UAArB,CAAiC,WAAjC,CAA8C,CAA9C,CAAiD,KAAKD,KAAL,CAAW,+BAAX,CAAjD,CAA8F,KAAKA,KAAL,CAAW,uBAAX,CAA9F,EAEA,KAAKC,eAAL,CAAqB,kBAArB,CAAyC,MAAzC,CAAiD,IAAjD,EACA,KAAKA,eAAL,CAAqB,kBAArB,CAAyC,UAAzC,CAAqD,IAArD,CAA2D,KAAKD,KAAL,CAAW,wBAAX,CAA3D,CAAiG,KAAKA,KAAL,CAAW,2BAAX,CAAjG,EACA,KAAKC,eAAL,CAAqB,kBAArB,CAAyC,WAAzC,CAAsD,GAAtD,CAA2D,KAAKD,KAAL,CAAW,+BAAX,CAA3D,CAAwG,KAAKA,KAAL,CAAW,2BAAX,CAAxG,EACA,KAAKC,eAAL,CAAqB,kBAArB,CAAyC,WAAzC,CAAsD,CAAtD,CAAyD,KAAKD,KAAL,CAAW,+BAAX,CAAzD,CAAsG,KAAKA,KAAL,CAAW,2BAAX,CAAtG,EACH,C,wBACD,mBAAU,CACN,KAAKE,CAAL,CAAOC,QAAP,CAAgB,CACZC,gBAAgB,CAAE,KAAKJ,KAAL,CAAW,2BAAX,CADN,CAEZK,QAAQ,CAAE,KAAKL,KAAL,CAAW,uBAAX,CAFE,CAGZM,gBAAgB,CAAE,KAAKN,KAAL,CAAW,2BAAX,CAHN,CAAhB,EAMH,C,uCA7BmCJ,Y,EA+BxC,cAAeC,CAAAA,yBAAf","sourcesContent":["import BaseValidate from '../../../../validator/BaseValidate';\nclass AddChangePasswordValidate extends BaseValidate{\n    constructor(props){\n        super();\n        var {t} = props;\n        this.trans = t;\n    }\n    setRule(){\n        this.addRuleForField('current_password', 'trim', true);\n        this.addRuleForField('current_password', 'required', true, this.trans('validate_rule.required'), this.trans('employee.current_password'));\n        this.addRuleForField('current_password', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.current_password'));\n        this.addRuleForField('current_password', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.current_password'));\n\n        this.addRuleForField('password', 'trim', true);\n        this.addRuleForField('password', 'required', true, this.trans('validate_rule.required'), this.trans('employee.new_password'));\n        this.addRuleForField('password', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.new_password'));\n        this.addRuleForField('password', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.new_password'));\n\n        this.addRuleForField('password_confirm', 'trim', true);\n        this.addRuleForField('password_confirm', 'required', true, this.trans('validate_rule.required'), this.trans('employee.password_confirm'));\n        this.addRuleForField('password_confirm', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.password_confirm'));\n        this.addRuleForField('password_confirm', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.password_confirm'));\n    }\n    setAlias(){\n        this.v.setAlias({\n            current_password: this.trans('employee.current_password'),\n            password: this.trans('employee.new_password'),\n            password_confirm: this.trans('employee.password_confirm')\n        });\n        \n    }\n}\nexport default AddChangePasswordValidate;"]},"metadata":{},"sourceType":"module"}