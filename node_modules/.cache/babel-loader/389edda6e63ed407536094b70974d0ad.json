{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport ClientActivitiesService from '../../../../../services/ClientActivitiesService';\nimport AlertStateService from '../../../../../services/AlertStateService';\n\nclass AddPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleAlertStateInputChange = index => {\n      var {\n        dataAlertState,\n        curItem\n      } = this.state;\n      if (!Libs.isArrayData(dataAlertState)) return;\n      var item = dataAlertState[index];\n      if (Libs.isObjectEmpty(item)) return;\n      curItem.id_alert_state = item.id;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n\n      if (Libs.isObjectEmpty(item)) {\n        curItem.status = '';\n      } else {\n        var value = item.value;\n        curItem[name] = value;\n      }\n\n      self.setState({\n        curItem: curItem\n      });\n    };\n\n    this.state = {\n      curItem: this.props.curItem,\n      dataErrorType: this.props.dataErrorType,\n      dataErrorLevel: this.props.dataErrorLevel,\n      dataStatus: this.props.dataStatus,\n      dataAlertState: []\n    };\n    this.jsxTemplate = AddPopupJsx;\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  componentDidMount() {\n    this.getListAlertState();\n  }\n\n  /**\n  * ge list error state\n  * @author Long.Pham 2019-06-03\n  */\n  getListAlertState() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    AlertStateService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataAlertState: data\n        });\n      } else {\n        self.setState({\n          dataAlertState: []\n        });\n      }\n    });\n  }\n\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n  async onSave() {\n    var curItem = this.state.curItem,\n        self = this;\n    var params = Object.assign({}, curItem);\n    params.screen_mode = Constants.SCREEN_MODE.EDIT;\n    params.id_employee = this.employee.id_employee;\n    params.id_language = this.employee.id_language;\n    params.type = 'customer';\n    ClientActivitiesService.instance.save(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseAdd(true);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default AddPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleProject/Activities/AddPopup.js"],"names":["BaseComponent","Libs","Constants","AddPopupJsx","ClientActivitiesService","AlertStateService","AddPopup","constructor","props","handleAlertStateInputChange","index","dataAlertState","curItem","state","isArrayData","item","isObjectEmpty","id_alert_state","id","setState","handleDropdownChange","name","self","status","value","dataErrorType","dataErrorLevel","dataStatus","jsxTemplate","bind","componentDidMount","getListAlertState","params","id_language","employee","instance","getDropdownList","data","total_row","onSave","Object","assign","screen_mode","SCREEN_MODE","EDIT","id_employee","type","save","msg","toast","onClickCloseAdd","setValidateMessage","isBlank"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport ClientActivitiesService from '../../../../../services/ClientActivitiesService';\nimport AlertStateService from '../../../../../services/AlertStateService';\n\nclass AddPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            dataErrorType: this.props.dataErrorType,\n            dataErrorLevel: this.props.dataErrorLevel,\n            dataStatus: this.props.dataStatus,\n            dataAlertState: []\n        }\n        this.jsxTemplate = AddPopupJsx;\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/05/2021\n     */\n    componentDidMount() {\n        this.getListAlertState();\n    }\n\n    handleAlertStateInputChange = (index) => {\n        var { dataAlertState, curItem } = this.state;\n        if(!Libs.isArrayData(dataAlertState)) return;\n        var item = dataAlertState[index];\n        if(Libs.isObjectEmpty(item)) return;\n        curItem.id_alert_state = item.id;\n        this.setState({\n            curItem: curItem\n        })\n    }\n    /**\n    * ge list error state\n    * @author Long.Pham 2019-06-03\n    */\n    getListAlertState() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        AlertStateService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataAlertState: data\n                });\n            } else {\n                self.setState({\n                    dataAlertState: []\n                });\n            }\n        })\n    }\n\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item)) {\n            curItem.status = '';\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n    \n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var curItem = this.state.curItem, self = this;\n        var params = Object.assign({}, curItem);\n        params.screen_mode = Constants.SCREEN_MODE.EDIT ;\n        params.id_employee = this.employee.id_employee;\n        params.id_language = this.employee.id_language;\n        params.type = 'customer';\n\n        ClientActivitiesService.instance.save(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseAdd(true);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default AddPopup;"]},"metadata":{},"sourceType":"module"}