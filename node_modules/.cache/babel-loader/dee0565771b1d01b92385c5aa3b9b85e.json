{"ast":null,"code":"import React from 'react';\nimport Constants from '../utils/Constants';\nimport $ from 'jquery';\nimport { toast } from 'react-toastify';\nimport Libs from '../utils/Libs';\nexport default class BaseComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setValidateMessage = (errors, validateOne, wrapEleId) => {\n      var wrapEle = $('#' + wrapEleId);\n\n      function isEmpty(el) {\n        return !$.trim(el.html());\n      }\n\n      if (typeof errors === 'undefined' || errors === null || Object.keys(errors).length === 0) return;\n      validateOne = typeof validateOne === 'boolean' ? validateOne : false;\n      var validateMessageClass = \".validate-message\",\n          formGroupClass = \".mb-3\",\n          inputErrorClass = \".input-error\",\n          parentErrorClass = '.input-error';\n\n      var createParagraph = text => {\n        var p = document.createElement(\"p\");\n        p.classList.add(validateMessageClass.replace(\".\", \"\"));\n        p.innerText = text;\n        return p;\n      };\n\n      var removeOldParagraph = (input, parent) => {\n        let oldParagraph = parent.find(validateMessageClass);\n\n        if (oldParagraph.length > 0) {\n          oldParagraph.remove();\n        }\n      };\n      /**\n       * @description find elements to set message\n       * @param  {} errors\n       */\n\n\n      var find = errors => {\n        if (!validateOne) {\n          // remove all validate message\n          this.removeAllValidateMessage();\n        }\n\n        for (let key in errors) {\n          let message = errors[key];\n          var input = $('[name=\"' + key + '\"]');\n\n          if (!isEmpty(wrapEle)) {\n            input = wrapEle.find('[name=\"' + key + '\"]');\n          }\n\n          if (input.length > 0) {\n            let parent = input.parents(formGroupClass);\n\n            if (parent.length > 0) {\n              setMessage(message, input, parent);\n            } else {\n              // case input isn't wrap by class form-group\n              let parent = input.parent();\n              setMessage(message, input, parent);\n            }\n          }\n        }\n      };\n      /**\n       * Create element new paragraph message validate\n       * @param  {} message\n       * @param  {} input\n       * @param  {} parent\n       */\n\n\n      var setMessage = (message, input, parent) => {\n        if (typeof message === 'string' && message.length > 0) {\n          let paragraph = createParagraph(message);\n          removeOldParagraph(input, parent);\n          input[0].classList.add(inputErrorClass.replace(\".\", \"\"));\n          let nextElement = input[0].nextElementSibling;\n          let nodeName = input[0].nodeName;\n\n          if (nodeName === \"SELECT\") {\n            nextElement.classList.add(inputErrorClass.replace(\".\", \"\"));\n          }\n\n          parent[0].appendChild(paragraph);\n          parent[0].classList.add(parentErrorClass.replace(\".\", \"\"));\n        } else {\n          removeOldParagraph(input, parent);\n          input[0].classList.remove(inputErrorClass.replace(\".\", \"\"));\n          parent[0].classList.remove(parentErrorClass.replace(\".\", \"\"));\n          let nextElement = input[0].nextElementSibling;\n          let nodeName = input[0].nodeName;\n\n          if (nodeName === \"SELECT\") {\n            nextElement.classList.remove(inputErrorClass.replace(\".\", \"\"));\n          }\n        }\n      };\n\n      find(errors);\n    };\n\n    this.removeAllValidateMessage = () => {\n      if ($('.validate-message').length) {\n        $('.validate-message').remove();\n      }\n\n      if ($('.input-error').length) {\n        $('.input-error').removeClass('input-error');\n      }\n\n      if ($('.select2-error').length) {\n        $('.select2-error').removeClass('select2-error');\n      }\n    };\n\n    this.state = {\n      currentMode: Constants.SCREEN_MODE.VIEW // mode cập nhật hoặc edit\n\n    };\n\n    this.jsxTemplate = function () {};\n\n    this.searchParam = {};\n\n    if (props.baseParam && props.baseParam.match) {\n      this.params = props.baseParam.match.params;\n      this.path = props.baseParam.match.path;\n    }\n\n    var public_url = Constants.SITE_URL.PUBLIC_URL;\n\n    if (public_url.indexOf(window.location.pathname) === -1) {\n      this.setEmployeeInfo();\n\n      if (Libs.isObjectEmpty(props.auth)) {\n        window.location.href = Constants.SITE_URL.LOGIN;\n        return;\n      }\n\n      var path = null;\n\n      if (props.baseParam && props.baseParam.match) {\n        this.params = props.baseParam.match.params;\n        path = props.baseParam.match.path;\n      }\n\n      let param = props.auth[path];\n      this.permission = props.auth;\n\n      if (!Libs.isBlank(this.path)) {\n        if (param) {\n          this.actions = param.auth;\n\n          if (param.auth <= 0) {\n            window.location.href = Constants.SITE_URL.ERROR_PAGE;\n            return;\n          }\n        } else {\n          window.location.href = Constants.SITE_URL.ERROR_PAGE;\n          return;\n        }\n      }\n    }\n\n    if (this.constructor === BaseComponent) {\n      // Error Type 1. Abstract class can not be constructed.\n      throw new TypeError(\"Can not construct abstract class.\");\n    }\n  }\n  /**\n   * set user info param and set user permission\n   */\n\n\n  setEmployeeInfo() {\n    let info = localStorage.getItem(Constants.COMMON.EMPLOYEE_INFO);\n    let employeeInfo = JSON.parse(Libs.base64Decrypt(info));\n\n    if (Libs.isObjectEmpty(employeeInfo)) {\n      localStorage.clear();\n      window.location.href = Constants.SITE_URL.LOGIN;\n    }\n\n    var expired = employeeInfo.timeout * 1;\n    var currentDate = new Date();\n\n    if (currentDate.getTime() > expired) {\n      localStorage.clear();\n      window.location.href = Constants.SITE_URL.LOGIN;\n      return false;\n    }\n\n    this.employee = employeeInfo;\n  }\n  /**\n   * @description default function reactJS\n   */\n\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n  /**\n   * @description Set validate message\n   * @author Long.Pham\n   * @since 12/05/2021\n   * @param {*} errors\n   ******** IMPORTANT surround input field must have class form-group\n  */\n\n\n  /**\n  * @description Display error messages for validation fields\n  * @param object errors: Error field values\n  * @param string wrapperElement: Tag the fields, otherwise it will take all the files with names from errors and assignments and error messages\n  * @author long.pham 2018-11-24\n  */\n  setValidationError(errors, wrapperElement) {\n    if (typeof errors === 'undefined' || errors === null || Object.keys(errors).length <= 0) return;\n    $.each(errors, function (key, val) {\n      // var ele = $('[name=\\\"' + key + '\\\"]');\n      var ele = $('[name=\"' + key + '\"]');\n\n      if (wrapperElement !== 'undefined' && wrapperElement !== null && wrapperElement !== '') {\n        var wrapEle = $('.' + wrapperElement);\n\n        if (!wrapEle || wrapEle.length <= 0) {\n          wrapEle = $('#' + wrapperElement);\n        } // ele = wrapEle.find('[name=\\\"' + key + '\\\"]');\n\n\n        ele = wrapEle.find('[name=\"' + key + '\"]');\n      }\n\n      if (ele.length) {\n        if (val && val !== null) {\n          ele.removeClass('input-error');\n          ele.addClass('input-error');\n          ele.next('.validate-message').remove();\n          ele.after('<p class=\"validate-message\">' + val + '</p>');\n        } else {\n          ele.removeClass('input-error');\n          ele.next('.validate-message').remove();\n        }\n      }\n    });\n  }\n\n  toast(message, type, pos = \"top-right\") {\n    let posistion = \"top-right\";\n\n    if (typeof pos !== 'undefined') {\n      posistion = pos;\n    }\n\n    switch (type) {\n      case \"error\":\n        toast.error(message, {\n          position: posistion,\n          autoClose: true,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          draggablePercent: 10,\n          limit: 1\n        });\n        break;\n\n      case \"warn\":\n        toast.warn(message, {\n          position: posistion,\n          autoClose: true,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          draggablePercent: 10\n        });\n        break;\n\n      default:\n        toast.info(message, {\n          position: posistion,\n          autoClose: true,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          draggablePercent: 10\n        });\n        break;\n    }\n\n    toast.clearWaitingQueue();\n  }\n  /**\n   * handle Search Input Change Value\n   * @author Long.Pham\n   * @param {*} values \n   * @param {*} props \n   */\n\n\n  handleSearchInputChange(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let item = this.state.searchParam;\n      item.index = 1;\n      item.offset = 0;\n      /* check is number and not start with \"0\" charactor = 0(Phone number) => convert to number*/\n\n      /*Fix lỗi auto convert to string => sql query wrong*/\n\n      if (target.type !== 'checkbox') {\n        if (!isNaN(value) && !value.startsWith('0') && !Libs.isBlank(value)) {\n          value = value * 1;\n        }\n      }\n\n      item[name] = value;\n      this.setState({\n        searchParam: item\n      });\n    }\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n\n\n  handleInputChange(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        curItem\n      } = this.state;\n      curItem[name] = event.target.validity.valid ? value : curItem[name];\n      this.setState({\n        curItem\n      });\n    }\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n\n\n  handleInputDateChange(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        curItem\n      } = this.state;\n      curItem[name] = value;\n      this.setState({\n        curItem\n      });\n    }\n  } // /**\n  //  * set state for numeric number input\n  //  * @param {Object} event \n  //  */\n  // handleNumberInputChange(event) {\n  //     let target = event.target;\n  //     let name = target.name;\n  //     let value = target.value\n  //     if (name) {\n  //         var numericExpression = /^[0-9\\b]+$/;\n  //         if (value == \"\" || numericExpression.test(value)) {\n  //             let item = this.state.curItem;\n  //             item[name] = value;\n  //             this.setState({ curItem: item });\n  //         }\n  //     }\n  // }\n\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/BaseComponent.js"],"names":["React","Constants","$","toast","Libs","BaseComponent","Component","constructor","props","setValidateMessage","errors","validateOne","wrapEleId","wrapEle","isEmpty","el","trim","html","Object","keys","length","validateMessageClass","formGroupClass","inputErrorClass","parentErrorClass","createParagraph","text","p","document","createElement","classList","add","replace","innerText","removeOldParagraph","input","parent","oldParagraph","find","remove","removeAllValidateMessage","key","message","parents","setMessage","paragraph","nextElement","nextElementSibling","nodeName","appendChild","removeClass","state","currentMode","SCREEN_MODE","VIEW","jsxTemplate","searchParam","baseParam","match","params","path","public_url","SITE_URL","PUBLIC_URL","indexOf","window","location","pathname","setEmployeeInfo","isObjectEmpty","auth","href","LOGIN","param","permission","isBlank","actions","ERROR_PAGE","TypeError","info","localStorage","getItem","COMMON","EMPLOYEE_INFO","employeeInfo","JSON","parse","base64Decrypt","clear","expired","timeout","currentDate","Date","getTime","employee","render","call","setValidationError","wrapperElement","each","val","ele","addClass","next","after","type","pos","posistion","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","draggablePercent","limit","warn","clearWaitingQueue","handleSearchInputChange","event","target","name","value","checked","item","index","offset","isNaN","startsWith","setState","handleInputChange","curItem","validity","valid","handleInputDateChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Constants from '../utils/Constants';\nimport $ from 'jquery';\nimport { toast } from 'react-toastify';\nimport Libs from '../utils/Libs';\n\nexport default class BaseComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentMode: Constants.SCREEN_MODE.VIEW, // mode cập nhật hoặc edit\n        }\n        this.jsxTemplate = function () { };\n\n        this.searchParam = {};\n        if (props.baseParam && props.baseParam.match) {\n            this.params = props.baseParam.match.params;\n            this.path = props.baseParam.match.path;\n        }\n\n\n        var public_url = Constants.SITE_URL.PUBLIC_URL;\n\n        if (public_url.indexOf(window.location.pathname) === -1) {\n            this.setEmployeeInfo();\n            if (Libs.isObjectEmpty(props.auth)) {\n                window.location.href = Constants.SITE_URL.LOGIN;\n                return;\n            }\n            var path = null;\n            if (props.baseParam && props.baseParam.match) {\n                this.params = props.baseParam.match.params;\n                path = props.baseParam.match.path;\n            }\n\n            let param = props.auth[path];\n            this.permission = props.auth;\n            if (!Libs.isBlank(this.path)) {\n                if (param) {\n                    this.actions = param.auth;\n                    \n                    if (param.auth <= 0) {\n                        window.location.href = Constants.SITE_URL.ERROR_PAGE;\n                        return;\n                    }\n                } else {\n                    window.location.href = Constants.SITE_URL.ERROR_PAGE;\n                    return;\n                }\n            }\n\n        }\n\n\n        if (this.constructor === BaseComponent) {\n            // Error Type 1. Abstract class can not be constructed.\n            throw new TypeError(\"Can not construct abstract class.\");\n        }\n    }\n\n\n\n    /**\n     * set user info param and set user permission\n     */\n    setEmployeeInfo() {\n        let info = localStorage.getItem(Constants.COMMON.EMPLOYEE_INFO);\n        let employeeInfo = JSON.parse(Libs.base64Decrypt(info));\n        if (Libs.isObjectEmpty(employeeInfo)) {\n            localStorage.clear();\n            window.location.href = Constants.SITE_URL.LOGIN;\n        }\n\n        var expired = employeeInfo.timeout * 1;\n        var currentDate = new Date();\n        if (currentDate.getTime() > expired) {\n            localStorage.clear();\n            window.location.href = Constants.SITE_URL.LOGIN;\n            return false;\n        }\n        this.employee = employeeInfo;\n    }\n\n\n    /**\n     * @description default function reactJS\n     */\n    render() {\n        return this.jsxTemplate.call(this);\n    }\n\n    /**\n     * @description Set validate message\n     * @author Long.Pham\n     * @since 12/05/2021\n     * @param {*} errors\n     ******** IMPORTANT surround input field must have class form-group\n    */\n    setValidateMessage = (errors, validateOne, wrapEleId) => {\n        var wrapEle = $('#' + wrapEleId);\n        function isEmpty(el) {\n            return !$.trim(el.html())\n        }\n        if (typeof errors === 'undefined' || errors === null || Object.keys(errors).length === 0) return;\n        validateOne = (typeof validateOne === 'boolean') ? validateOne : false;\n        var validateMessageClass = \".validate-message\",\n            formGroupClass = \".mb-3\",\n            inputErrorClass = \".input-error\", parentErrorClass = '.input-error';\n        var createParagraph = (text) => {\n            var p = document.createElement(\"p\");\n            p.classList.add(validateMessageClass.replace(\".\", \"\"));\n            p.innerText = text;\n            return p;\n        }\n\n        var removeOldParagraph = (input, parent) => {\n            let oldParagraph = parent.find(validateMessageClass);\n            if (oldParagraph.length > 0) {\n                oldParagraph.remove();\n            }\n        }\n\n        /**\n         * @description find elements to set message\n         * @param  {} errors\n         */\n        var find = (errors) => {\n            if (!validateOne) {\n                // remove all validate message\n                this.removeAllValidateMessage();\n            }\n            for (let key in errors) {\n                let message = errors[key];\n                var input = $('[name=\"' + key + '\"]');\n                if (!isEmpty(wrapEle)) {\n                    input = wrapEle.find('[name=\"' + key + '\"]');\n                }\n                if (input.length > 0) {\n                    let parent = input.parents(formGroupClass);\n                    if (parent.length > 0) {\n                        setMessage(message, input, parent);\n                    } else { // case input isn't wrap by class form-group\n                        let parent = input.parent();\n                        setMessage(message, input, parent);\n                    }\n                }\n            }\n        }\n\n        /**\n         * Create element new paragraph message validate\n         * @param  {} message\n         * @param  {} input\n         * @param  {} parent\n         */\n        var setMessage = (message, input, parent) => {\n            if (typeof message === 'string' && message.length > 0) {\n                let paragraph = createParagraph(message);\n                removeOldParagraph(input, parent);\n                input[0].classList.add(inputErrorClass.replace(\".\", \"\"));\n                let nextElement = input[0].nextElementSibling;\n                let nodeName = input[0].nodeName;\n                if (nodeName === \"SELECT\") {\n                    nextElement.classList.add(inputErrorClass.replace(\".\", \"\"));\n                }\n                parent[0].appendChild(paragraph);\n                parent[0].classList.add(parentErrorClass.replace(\".\", \"\"));\n            } else {\n                removeOldParagraph(input, parent);\n                input[0].classList.remove(inputErrorClass.replace(\".\", \"\"));\n                parent[0].classList.remove(parentErrorClass.replace(\".\", \"\"));\n                let nextElement = input[0].nextElementSibling;\n                let nodeName = input[0].nodeName;\n                if (nodeName === \"SELECT\") {\n                    nextElement.classList.remove(inputErrorClass.replace(\".\", \"\"));\n                }\n            }\n        }\n        find(errors);\n    }\n\n    /**\n    * @description Remove validation\n    * @author long.pham 2018-11-27\n    */\n    removeAllValidateMessage = () => {\n        if ($('.validate-message').length) {\n            $('.validate-message').remove();\n        }\n        if ($('.input-error').length) {\n            $('.input-error').removeClass('input-error');\n        }\n        if ($('.select2-error').length) {\n            $('.select2-error').removeClass('select2-error');\n        }\n    }\n\n    /**\n    * @description Display error messages for validation fields\n    * @param object errors: Error field values\n    * @param string wrapperElement: Tag the fields, otherwise it will take all the files with names from errors and assignments and error messages\n    * @author long.pham 2018-11-24\n    */\n    setValidationError(errors, wrapperElement) {\n        if (typeof errors === 'undefined' || errors === null || Object.keys(errors).length <= 0) return;\n        $.each(errors, function (key, val) {\n            // var ele = $('[name=\\\"' + key + '\\\"]');\n            var ele = $('[name=\"' + key + '\"]');\n            if (wrapperElement !== 'undefined' && wrapperElement !== null && wrapperElement !== '') {\n                var wrapEle = $('.' + wrapperElement);\n                if (!wrapEle || wrapEle.length <= 0) {\n                    wrapEle = $('#' + wrapperElement);\n                }\n                // ele = wrapEle.find('[name=\\\"' + key + '\\\"]');\n                ele = wrapEle.find('[name=\"' + key + '\"]');\n            }\n            if (ele.length) {\n                if (val && val !== null) {\n                    ele.removeClass('input-error');\n                    ele.addClass('input-error');\n                    ele.next('.validate-message').remove();\n                    ele.after('<p class=\"validate-message\">' + val + '</p>');\n                }\n                else {\n                    ele.removeClass('input-error');\n                    ele.next('.validate-message').remove();\n                }\n            }\n        });\n    }\n\n\n    toast(message, type, pos = \"top-right\") {\n        let posistion = \"top-right\";\n        if (typeof pos !== 'undefined') {\n            posistion = pos;\n        }\n        switch (type) {\n            case \"error\":\n                toast.error(message, {\n                    position: posistion,\n                    autoClose: true,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    draggablePercent: 10,\n                    limit: 1\n                });\n                break;\n            case \"warn\":\n                toast.warn(message, {\n                    position: posistion,\n                    autoClose: true,\n                    hideProgressBar: true,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    draggablePercent: 10\n                });\n                break;\n            default:\n                toast.info(message, {\n                    position: posistion,\n                    autoClose: true,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    draggablePercent: 10\n                });\n                break;\n        }\n\n        toast.clearWaitingQueue();\n    }\n\n\n    /**\n     * handle Search Input Change Value\n     * @author Long.Pham\n     * @param {*} values \n     * @param {*} props \n     */\n    handleSearchInputChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let item = this.state.searchParam;\n            item.index = 1;\n            item.offset = 0;\n            /* check is number and not start with \"0\" charactor = 0(Phone number) => convert to number*/\n            /*Fix lỗi auto convert to string => sql query wrong*/\n            if (target.type !== 'checkbox') {\n                if (!isNaN(value) && !value.startsWith('0') && !Libs.isBlank(value)) {\n                    value = value * 1;\n                }\n            }\n            item[name] = value;\n            this.setState({ searchParam: item });\n        }\n    }\n\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { curItem } = this.state;\n            curItem[name] = (event.target.validity.valid) ? value : curItem[name];\n            this.setState({ curItem });\n        }\n    }\n\n\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputDateChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { curItem } = this.state;\n            curItem[name] = value;\n            this.setState({ curItem });\n        }\n    }\n\n\n    // /**\n    //  * set state for numeric number input\n    //  * @param {Object} event \n    //  */\n    // handleNumberInputChange(event) {\n    //     let target = event.target;\n    //     let name = target.name;\n    //     let value = target.value\n\n    //     if (name) {\n    //         var numericExpression = /^[0-9\\b]+$/;\n    //         if (value == \"\" || numericExpression.test(value)) {\n    //             let item = this.state.curItem;\n    //             item[name] = value;\n    //             this.setState({ curItem: item });\n    //         }\n    //     }\n    // }\n}"]},"metadata":{},"sourceType":"module"}