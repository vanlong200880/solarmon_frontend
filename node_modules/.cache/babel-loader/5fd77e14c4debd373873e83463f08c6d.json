{"ast":null,"code":"// import React from 'react';\nvar formatNum=require('format-number');var roundTo=require('round-to');var moment=require(\"moment\");// import { toast } from 'react-toastify';\nvar Libs={};/**\n * trim string\n * @param str\n * @returns\n */Libs.safeTrim=function(str){try{return typeof str==='string'?str.trim():str.toString();}catch(e){return\"\";}};/**\n * check blank object or string\n * @param str\n * @returns {Boolean}\n */Libs.isBlank=function(str){if(typeof str===undefined||str===null||Libs.safeTrim(str)===\"\"){return true;}return false;};/**\n * Check valid object\n * @param {*} obj \n */Libs.isObjectEmpty=function(obj){var hasOwnProperty=Object.prototype.hasOwnProperty;if(obj==null)return true;if(obj.length>0)return false;if(obj.length===0)return true;if(typeof obj!==\"object\")return true;for(var key in obj){if(hasOwnProperty.call(obj,key))return false;}return true;};/**\n * Find objects in arrays by value and field\n * @param items\n * @param field\n * @param value\n * @returns\n */Libs.find=function(items,field,value){if(!items)return null;for(var i=0;i<items.length;i++){if(value===items[i][field]){return items[i];}}return null;};/**\n * @description Check the array data \n * @param Array arr\n * @author: Luyen Nguyen\n * @return boolean\n */Libs.isArrayData=function(arr){if(Libs.isBlank(arr))return false;if(!Array.isArray(arr)||arr.length<=0)return false;return true;};Libs.isNumber=function(value){try{var val=value;if(typeof val==='undefined'||val===null)return false;if(typeof val==='number'){val=val.toString();}val=val.replace(/^-/,'');return /^[0-9\\b]+$/.test(val);}catch(err){return false;}};/**\n* @description Check ext file upload\n* @author Long.Pham 10/05/2021\n* @param  String file_name: file name\n* @param  {int} ext_type: undefined: all file, 1: only image, 2: only file, 3: video\n*/Libs.checkExtensionFile=function(file_name,ext_type){if(file_name==='undefined'||file_name===null)return;var extImg=['png','PNG','jpg','JPG','jpeg','JPEG','gif','GIF'];var extFile=['xlsx','xls','XLSX','XLS','doc','DOC','docs','DOCS','pdf','PDF'];var extAll=['png','PNG','jpg','JPG','jpeg','JPEG','gif','GIF','doc','DOC','docs','DOCS','docx','DOCX','pdf','PDF','mp4','MP4','avi','AVI'];var extVideo=['mp4','MP4','avi','AVI'];var ext=file_name.substr(file_name.lastIndexOf('.')+1);if(ext_type==='undefined'||ext_type===null){for(var i=0;i<extAll.length;i++){if(ext===extAll[i]){return true;}}}else if(ext_type===1){for(var _i=0;_i<extImg.length;_i++){if(ext===extImg[_i]){return true;}}}else if(ext_type===2){for(var _i2=0;_i2<extFile.length;_i2++){if(ext===extFile[_i2]){return true;}}}else if(ext_type===3){for(var _i3=0;_i3<extVideo.length;_i3++){if(ext===extVideo[_i3]){return true;}}}return false;};Libs.convertStringToNumber=function(value){try{var val=value;if(typeof val==='undefined'||val==null)return null;if(typeof val==='number'){val=val.toString();}return Number(val.replace(/[^0-9]+/g,\"\"));}catch(err){return null;}};/**\n* Format number according to the format option in formatNum format of the library\n* By default #, ###. ## separated by commas, spread after decimal 2 digits\n*\n* @param {String} val\n* @param {String} pattern default #,###.##\n* @param {int} round default 0: Default rounding -1: rounding down, 1: rounding up\n* @author:  MinhPham 2018-11-18 11:16:34 \n*/Libs.formatNum=function(val){var pattern=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"#,###.##\";var round=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(Libs.isBlank(val)||isNaN(val)){return\"\";}val=val*1;var comma=',';var decimal='.';var afterDecimalNum=0;//After the decimal point take some numbers\nif(Libs.isBlank(pattern)){pattern=\"#,###.##\";}var regex=new RegExp(\"[,.]+\",\"ig\");var myArray;var index=0;var afterDecimal=\"\";while((myArray=regex.exec(pattern))!==null){//The first time is the comma\nif(index===0){comma=myArray[0];}else if(comma!==myArray[0]){//The last time is the decimal separator\nafterDecimal=myArray[0];}index++;}if(afterDecimal!==\"\"){decimal=afterDecimal;afterDecimalNum=pattern.length-(pattern.lastIndexOf(decimal)+1);}var opts={\"negativeType\":'left',\"prefix\":'',\"suffix\":'',\"integerSeparator\":comma,\"decimalsSeparator\":'',\"decimal\":decimal,\"padLeft\":-1,\"round\":afterDecimalNum};if(round===1){val=roundTo.up(val,afterDecimalNum);}else if(round===0){val=roundTo(val,afterDecimalNum);}else{val=roundTo.down(val,afterDecimalNum);}return formatNum(opts)(val);};/**\n * string format\n * ex: let a = Libs.stringAssign(\"hello $<0> $<1>\", [\"world\",\"rrr\"])\n * @param {string template} str \n * @param {Array} data \n * @param {regex} REG_ASSIGN_VARIBLE \n */Libs.stringAssign=function(str,data,REG_ASSIGN_VARIBLE){if(Libs.isBlank(REG_ASSIGN_VARIBLE)){REG_ASSIGN_VARIBLE=/\\$\\<([^{}]*?)\\>/g;}return str.replace(REG_ASSIGN_VARIBLE,function($0,$1){return String(data[$1]);});};Libs.convertStrtoDate=function(_date,format){if(null===_date||typeof _date==='undefined'||_date===''){return'';}var date=_date;if(typeof format===\"undefined\"||Libs.isBlank(format)){var arrFormat=[\"YYYY/MM/DD HH:mm:ss\",\"YYYY-MM-DD HH:mm:ss\",\"DD/MM/YYYY HH:mm:ss\",\"DD-MM-YYYY HH:mm:ss\",\"MM/DD/YYYY HH:mm:ss\",\"MM-DD-YYYY HH:mm:ss\"];for(var i=0;i<arrFormat.length;i++){date=moment(_date,arrFormat[i]);if(date._isValid){return date._d;}}}else{if(format.toLowerCase()==='utc'){date=moment(_date);}else date=moment(_date,format);if(!date._isValid){return _date;}return date._d;}return _date;};/**\n  * format date to another format\n  * @param {String} _date \n  * @param {String} format \n  * @param {String} from_format \n  */Libs.dateFormat=function(_date){var format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"DD/MM/YYYY HH:mm:ss\";var from_format=arguments.length>2?arguments[2]:undefined;if(null===_date||typeof _date==='undefined'||_date===''){return'';}var date=_date;if(typeof from_format===\"undefined\"||Libs.isBlank(from_format)){var arrFormat=[\"YYYY/MM/DD HH:mm:ss\",\"YYYY-MM-DD HH:mm:ss\",\"DD/MM/YYYY HH:mm:ss\",\"DD-MM-YYYY HH:mm:ss\",\"MM/DD/YYYY HH:mm:ss\",\"MM-DD-YYYY HH:mm:ss\"];for(var i=0;i<arrFormat.length;i++){date=moment(_date,arrFormat[i]);if(date._isValid){return date.format(format);}}}else{if(from_format.toLowerCase()==='utc'){date=moment(_date);}else date=moment(_date,from_format);if(!date._isValid){return _date;}return date.format(format);}return _date;};/**\n * Check input on/off 111111111 : nByte _________ 000000100 : bitIndex:2\n * =>pow(2,2){base 10}= 000000100{base 2} =========== 000000100=>input 3 is\n * on.\n *\n * @param nByte\n * @param bitIndex\n * @return\n */Libs.checkBitOnOff=function(nByte,bitIndex){var result=nByte&parseInt(Math.pow(2,bitIndex));return result!=0?true:false;};Libs.getCurrentDDMMYYYY=function(){var date=new Date();var year=date.getFullYear().toString();var month=(date.getMonth()+1).toString().padStart(2,\"0\");var day=date.getDate().toString().padStart(2,\"0\");return day+\"/\"+month+\"/\"+year;};Libs.SHA3=function(plainText){if(typeof plainText==='undefined'){return plainText;}var CryptoLib=require('./Crypto.js');return CryptoLib.SHA3(plainText);};/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */Libs.base64Encrypt=function(plaintext){if(Libs.isBlank(plaintext)){return plaintext;}var CryptoLib=require('./Crypto.js');return CryptoLib.base64Encrypt(plaintext);};/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */Libs.base64Decrypt=function(ciph){if(Libs.isBlank(ciph)){return ciph;}var CryptoLib=require('./Crypto.js');return CryptoLib.base64Decrypt(ciph);};/**\n * @description Generate sku\n * @author: Long.Pham\n * @return str\n */Libs.generateSKU=function(id_company,lenUpper){var uniqId=Math.round(new Date().getTime()+Math.random()*100);var d=new Date();var n=d.getTime();var randomString='';var uppercase='ABCDEFGHIJKLMNOPQRSTUVWXYZ';for(var i=0;i<lenUpper;i++){var randomUppercase=Math.floor(Math.random()*uppercase.length);randomString+=uppercase.substring(randomUppercase,randomUppercase+1);}return!Libs.isBlank(id_company)?id_company+randomString+uniqId:randomString+uniqId;};/**\n * @description Generate random string chữ hoa, chữ thường, số, ký tự đặc biệt\n * @author: Long.Pham\n * @return str\n */Libs.generateStrRandom=function(lenUpper,lenLower,lenSpec,lenNumber){var uppercase='ABCDEFGHIJKLMNOPQRSTUVWXYZ';var lowercase='abcdefghijklmnopqrstuvwxyz';var specialChar='!@#$%^&*(){}<>?';var charNumber='0123456789';var randomString='';for(var i=0;i<lenUpper;i++){var randomUppercase=Math.floor(Math.random()*uppercase.length);randomString+=uppercase.substring(randomUppercase,randomUppercase+1);}for(var _i4=0;_i4<lenLower;_i4++){var randomLowercase=Math.floor(Math.random()*lowercase.length);randomString+=lowercase.substring(randomLowercase,randomLowercase+1);}for(var _i5=0;_i5<lenSpec;_i5++){var randomSpecialChar=Math.floor(Math.random()*specialChar.length);randomString+=specialChar.substring(randomSpecialChar,randomSpecialChar+1);}for(var _i6=0;_i6<lenNumber;_i6++){var randomCharNumber=Math.floor(Math.random()*charNumber.length);randomString+=charNumber.substring(randomCharNumber,randomCharNumber+1);}var str=randomString.split(\"\");return str.sort(function(){return 0.5-Math.random();}).join(\"\");};/**\n * Compare date\n * @author Long.Pham 2018-11-21\n * @param from_date  from date\n * @param format date format\n * @param to_date to date, default is current date\n * @returns -1: less, 0: equal, 1: bigger\n */Libs.compareDate=function(from_date,format){var to_date=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;from_date=moment(from_date,format.toUpperCase());if(to_date==null){to_date=moment(new Date()).startOf('day');;}else{to_date=moment(to_date,format);}if(from_date.isAfter(to_date)){return 1;}if(from_date.isBefore(to_date)){return-1;}return 0;};Libs.checkIfImageExists=function(url,callback){var img=new Image();img.src=url;if(img.complete){callback(true);}else{img.onload=function(){callback(true);};img.onerror=function(){callback(false);};}};Libs.checkImageExists=function(url){this.checkIfImageExists(url,function(exists){return exists?true:false;});};/**\n * @description get current date\n * @author Long.Pham 2020-10-26\n * @return string date\n */Libs.getCurrentMMDDYYYYHI=function(){var date=new Date();var year=date.getFullYear().toString();var month=(date.getMonth()+1).toString().padStart(2,\"0\");var day=date.getDate().toString().padStart(2,\"0\");var hour=date.getHours().toString().padStart(2,\"0\");var mi=date.getMinutes().toString().padStart(2,\"0\");return month+\"/\"+day+\"/\"+year+\" \"+hour+\":\"+mi;};/**\n * Add Minutes\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */Libs.addMinutes=function(date,minutes){var result=new Date(date);result.setMinutes(result.getMinutes()+minutes);return result;};/**\n * Add Days\n * @author Long.Pham 2020-10-26\n * @param date \n * @param days\n * @returns date\n */Libs.addDays=function(date,days){var result=new Date(date);result.setDate(result.getDate()+days);return result;};/**\n * Add Months\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */Libs.addMonths=function(date,months){var result=new Date(date);result.setMonth(result.getMonth()+months);return result;};/**\n * Add Years\n * @author Long.Pham 2020-10-26\n * @param date \n * @param years\n * @returns date\n */Libs.addYears=function(date,years){var result=new Date(date);result.setFullYear(result.getFullYear()+years);return result;};/**\n * @description Convert Data to DB\n * @author Long.Pham 2020-10-26\n * @param {String} _date \n * @param {String} format \n * @param {String} from_format\n */Libs.convertAllFormatDate=function(_date){var from_format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"MM/DD/YYYY HH:mm:ss\";var to_format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"YYYY-MM-DD HH:mm:ss\";if(null==_date||typeof _date==='undefined'||_date==''){return'';}var date=moment(_date,from_format);if(!date._isValid){return _date;}return date.format(to_format);};/**\n * Format electrical unit \n * @author Long.Pham 2020-10-26\n * @param {double} data: data\n * @return {string}: format data\n */Libs.formatElectricalUnit=function(data){var prefix=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';if(Libs.isBlank(data)||data<=0)return\"0 kW\"+prefix;if(data<1000){return Number.parseFloat(data).toFixed(2)+\" w\"+prefix;}else if(data>=1000&&data<1000000){return Number.parseFloat(data/1000).toFixed(2)+\" kW\"+prefix;}else if(data>=1000000&&data<1000000000){return Number.parseFloat(data/1000000).toFixed(2)+\" MW\"+prefix;}else if(data>=1000000000&&data<1000000000000){return Number.parseFloat(data/1000000000).toFixed(2)+\" GW\"+prefix;}else if(data>=1000000000000&&data<1000000000000000){return Number.parseFloat(data/1000000000000).toFixed(2)+\" TW\"+prefix;}};Libs.getStringMonthNumber=function(number){if(number<=0||number>12)return null;var monthNameList=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];return monthNameList[number-1];};Libs.getUnique=function(arr,comp){var unique=arr.map(function(e){return e[comp];}).map(function(e,i,final){return final.indexOf(e)===i&&i;}).filter(function(e){return arr[e];}).map(function(e){return arr[e];});return unique;};/**\n * @description Generate random string\n * @author: Luyen Nguyen\n * @return str\n */ // Libs.generateStrRandom = function (len, charSet) {\n// \tcharSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*?';\n//     var randomString = '';\n//     for (var i = 0; i < len; i++) {\n//         var randomPoz = Math.floor(Math.random() * charSet.length);\n//         randomString += charSet.substring(randomPoz,randomPoz+1);\n//     }\n//     return randomString;\n// }\n// Libs.baseUrl = function () {\n// \tlet url = \"\";\n// \tconst protocol = location.protocol;\n// \tconst API_HOST = process.api_host || Constants.API_HOST;\n// \tconst API_HTTP_PORT = process.api_http_port || Constants.API_HTTP_PORT;\n// \tconst API_HTTPS_PORT = process.api_https_port || Constants.API_HTTPS_PORT;\n// \tif (protocol == 'https:') {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTPS_PORT;\n// \t} else {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTP_PORT;\n// \t}\n// \treturn url; \n// }\n/**\n * @description Get file url\n * @author Long.Pham 14/06/2021\n * @param {string} filePath: file path\n */Libs.getFileUrl=function(filePath,server_data){if(Libs.isBlank(filePath))return;return server_data+\"/\"+filePath;};// Libs.rEnter = (event) => {\n// \tvar _this = $(event.target);\n// \tif (event.which === 13) {\n// \t\tvar sign = event.shiftKey ? -1 : 1;\n// \t\tevent.preventDefault();\n// \t\tvar fields = _this.parents('form:eq(0),body').find('input,textarea');\n// \t\tvar index = fields.index(_this);\n// \t\tif (index > -1 && (index + 1 * sign) < fields.length)\n// \t\t\tfields.eq(index + 1 * sign).focus();\n// \t}\n// }\n// /**\n//  * return json result\n//  * @param unknown $status\n//  * @param unknown $mess\n//  * @param unknown $data\n//  */\n// Libs.returnJsonResult = (status, mess, data, total_row) => {\n// \tvar result = {};\n// \tresult.status = status;\n// \tresult.mess = mess ? mess : \"\";\n// \tresult.data = data ? data : \"\";\n// \tresult.total_row = total_row ? total_row : 0;\n// \treturn result;\n// }\n// Libs.convertObjectToJson = (object) => {\n// \treturn JSON.stringify(object);\n// }\n// /**\n//  * Convert date to milisecond\n//  */\n// Libs.convertDateToMilliseconds = (date, char) => {\n// \tvar date = $(\"#datepicker\").val().split(\"-\");\n// \tvar f = new Date(date[2], date[1] - 1, date[0]);\n// \tif (null == f || \"undefined\" === typeof f)\n// \t\treturn 0;\n// \treturn f.getTime();\n// }\n// Libs.convertMillisecondsToDataFormat = (milliseconds, isShowHour = true) => {\n// \tmilliseconds = parseInt(milliseconds);\n// \tif (milliseconds == null || milliseconds == 0) return \"\";\n// \tvar dateObj = new Date(milliseconds);\n// \tvar day = (dateObj.getDate() < 10) ? (\"0\" + dateObj.getDate()) : dateObj.getDate();\n// \tvar month = (dateObj.getMonth() + 1 < 10) ? (\"0\" + (dateObj.getMonth() + 1)) : (dateObj.getMonth() + 1);\n// \tvar year = dateObj.getFullYear();\n// \tvar hour = (dateObj.getHours() < 10) ? (\"0\" + dateObj.getHours()) : dateObj.getHours();\n// \tvar minute = (dateObj.getMinutes() < 10) ? (\"0\" + dateObj.getMinutes()) : dateObj.getMinutes();\n// \tvar second = (dateObj.getSeconds() < 10) ? (\"0\" + dateObj.getSeconds()) : dateObj.getSeconds();\n// \tif (isShowHour)\n// \t\treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute + \":\" + second;\n// \telse\n// \t\treturn day + \"/\" + month + \"/\" + year\n// }\n// Libs.convertMillisecondsToDate = (time) => {\n// \tvar date = new Date(time);\n// \treturn date;\n// }\n// Libs.scrollToBottom = (your_div) => {\n// \tvar objDiv = your_div;\n// \t//console.log(\"objDiv.scrollTop :\" + objDiv.scrollTop);\n// \t//console.log(\"objDiv.scrollHeight - objDiv.offsetHeight :\" + (objDiv.scrollHeight - objDiv.offsetHeight));\n// \tif (objDiv.scrollTop >= (objDiv.scrollHeight - objDiv.offsetHeight)) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// Libs.convertStr2Date = (_date, _format, _delimiter) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\t;\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = _format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = _date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \tmonth -= 1;\n// \tvar formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);\n// \treturn formatedDate;\n// }\n// Libs.getMillisecondsFromDataPickerFrom = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn 0;\n// \t}\n// \treturn new Date(date).getTime();\n// }\n// Libs.getMillisecondsFromDataPickerTo = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn new Date().getTime() + 86400000;\n// \t}\n// \treturn new Date(date).getTime() + 86400000;\n// }\n// Libs.getCurrentDDMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year;\n// }\n// Libs.getCurrentMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn  month + \"/\" + year;\n// }\n// Libs.getCurrentDDMMYYYYHI = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \tlet hour = date.getHours().toString().padStart(2, \"0\");\n// \tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n// \tlet ss = date.getSeconds().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + mi;\n// }\n// \treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n// \t\treturn String(data[$1]);\n// \t});\n// };\n// Libs.printError = (messages) => {\n// \tif (!(messages instanceof Array)) {\n// \t\treturn \"\";\n// \t}\n// \tvar str = \"\";\n// \tif (messages.length > 0) {\n// \t\tfor (var me in messages) {\n// \t\t\tvar message = messages[me];\n// \t\t\tfor (var k in message) {\n// \t\t\t\tstr += message[k];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// Libs.md5 = function (plainText) {\n// \tif (typeof plainText === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.md5(plainText);\n// }\n// Libs.AESEncrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESEncrypt(plainText, secretKey);\n// }\n// Libs.AESDecrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESDecrypt(plainText, secretKey);\n// }\n// /**\n//  * encrypt\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.encrypt = function (plaintext) {\n// \tif (Libs.isBlank(plaintext)) {\n// \t\treturn plaintext;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.encrypt(plaintext);\n// }\n// /**\n//  * Taka Encode\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.takaEncode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tvar chars = text.split('');\n// \tlet str = '';\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'id', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.value;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// /**\n//  * Taka Decode\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.takaDecode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tlet chars = [], str = '';\n// \tvar start = 0;\n// \tfor(var i = 0; i< text.length/ 3; i++){\n// \t\tchars.push(text.substr(start, 3));\n// \t\tstart +=3;\n// \t}\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'value', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.id;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n// Libs.convertEmptyPropToNullProp = function (object) {\n// \tif (typeof object != 'object') return {};\n// \tfor (var key in object) {\n// \t\tobject[key] = (object[key] === '') ? null : object[key];\n// \t}\n// \treturn object;\n// }\n// Libs.isInteger = function (value) {\n// \ttry {\n// \t\tvar val = value;\n// \t\tif (typeof val === 'undefined' || val == null) return false;\n// \t\tif (typeof val === 'number') {\n// \t\t\tval = val.toString();\n// \t\t}\n// \t\tval = val.replace(/^-/, '');\n// \t\treturn /^(0|[1-9]\\d*)$/.test(val);\n// \t} catch (err) {\n// \t\tconsole.log(err)\n// \t\treturn false;\n// \t}\n// }\n// /**\n//  * Custom css to select tag using for compoent react-select\n//  */\n// Libs.customSelectStyles = {\n// \tplaceholder: styles => ({\n// \t\t...styles,\n// \t\tcolor: '#ccc'\n// \t}),\n// \tcontrol: (styles, { data, isDisabled, isFocused, isSelected }) => {\n// \t\treturn {\n// \t\t\t...styles,\n// \t\t\tminHeight: '34px',\n// \t\t\tborderColor: '#ccc !important',\n// \t\t\tboxShadow: 'unset',\n// \t\t\tbackgroundColor: isDisabled ? '#e9ecef' : '#fff'\n// \t\t}\n// \t},\n// \tclearIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tdropdownIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tcontainer: styles => ({\n// \t\t...styles,\n// \t\t'z-index': '2000',\n// \t\t'position': 'relative'\n// \t})\n// }\n// Libs.buildPathValidateMessage = function (path, message) {\n// \tif (typeof path !== 'string' || typeof message !== 'string')\n// \t\treturn null;\n// \tif (path.length <= 0) return null;\n// \tvar validate = {};\n// \tvalidate[path] = message;\n// \treturn validate;\n// }\n// /**\n// * @description get content height\n// * If passing classname, height will be calculated by screen height except offset top of first name class\n// * The remaining classnames are deducted for the remaining classname's height\n// * ex: Libs.getContentHeight(\"className1\",\"className2\",...)\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getContentHeight = function () {\n// \tvar contentInner = $('#main-container .content-inner');\n// \tif (contentInner === 'undefined' || contentInner == null && contentInner === '') {\n// \t\treturn;\n// \t}\n// \tlet contentInnerHeight = (contentInner.innerHeight() ? contentInner.height() : 0)\n// \tif (!arguments || arguments.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerGroup = $('.fl-btn-group');\n// \tif (!footerGroup || footerGroup.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerOffsetTop = $(footerGroup[footerGroup.length - 1]).offset().top * 1\n// \tvar minHeight = null;\n// \tvar elementHeight = 0;\n// \tfor (let i = 0; i < arguments.length; i++) {\n// \t\tlet className = arguments[i];\n// \t\tif (!Libs.isBlank(className) && !Libs.isInteger(className)) {\n// \t\t\t//ưu tiên className\n// \t\t\tvar elements = $('.' + className);\n// \t\t\tif (!elements || elements.length <= 0) {\n// \t\t\t\t//tiến hành lấy theo id\n// \t\t\t\telements = $('#' + className);\n// \t\t\t}\n// \t\t\tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\t\t\telements.each(function () {\n// \t\t\t\t\tif (elementHeight == 0) {\n// \t\t\t\t\t\telementHeight += $(this).offset().top * 1;// - 46;//trừ cho header\n// \t\t\t\t\t} else\n// \t\t\t\t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t\t\t});\n// \t\t\t}\n// \t\t} else {\n// \t\t\tminHeight = className * 1;\n// \t\t}\n// \t}\n// \tvar height = 0;\n// \t//height = contentInnerHeight - (elementHeight + 5);\n// \theight = footerOffsetTop - (elementHeight + 10);//mặc định cách footer là 10px\n// \tif (minHeight == null) {\n// \t\tminHeight = 250;\n// \t}\n// \treturn height < minHeight ? minHeight : height;\n// }\n// /**\n// * @description get height by classname\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getHeightByClassName = function (className) {\n// \tif (className === 'undefined' || className == null && className === '') {\n// \t\treturn 0;\n// \t}\n// \tvar elementHeight = 0;\n// \tvar elements = $('.' + className);\n// \tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\telements.each(function () {\n// \t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t});\n// \t}\n// \treturn elementHeight;\n// }\n// /**\n//  * Round the number after a comma\n//  * @author thanh.bay 2018-09-27 11:24\n//  * @param  {string | float | int} value\n//  * @param  {int} fixed=1 : round to n numbers based on fixed value\n//  */\n// Libs.fixNumber = function (value, fixed = 1) {\n// \tif (typeof value === 'undefined' || value == null) return null;\n// \treturn parseFloat(Number.parseFloat(value).toFixed(fixed));\n// }\n// /**\n// * @description Get the element index in the array according to the field and value\n// * @author Luyen Nguyen 2018-09-28 16:10\n// * @param  array items\n// * @param String field: object you want to find in the array\n// * @param String value: compare value\n// * @param boolean isIndex: false return index, true: return object\n// * @return int|object\n// */\n// Libs.findIndex = (items, field, value, isIndex) => {\n// \tvar result = -1;\n// \tfor (var i = 0; i < items.length; i++) {\n// \t\tvalue = value + \"\";\n// \t\tvalue = (value) ? value.toLowerCase().trim() : \"\";\n// \t\tvar itemValue = items[i][field] + \"\";\n// \t\tvar itemName = (itemValue) ? itemValue.toLowerCase().trim() : \"\";\n// \t\tif (value == itemName) {\n// \t\t\tif (Libs.isBlank(isIndex)) {\n// \t\t\t\tresult = i;\n// \t\t\t}\n// \t\t\telse {\n// \t\t\t\tresult = items[i];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn result;\n// }\n// /**\n// * @description clear date input file\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.clearAllInputFile = function () {\n// \tif ($('input[type=\"file\"]').length) {\n// \t\t$('input[type=\"file\"]').val('');\n// \t}\n// \tif ($('.custom-file-label').length) {\n// \t\t$('.custom-file-label').html('');\n// \t}\n// }\n// /**\n// * @description Default configuration for tinymce\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.tinymceConfig = function (selector, readonly, height) {\n// \tif (!height) {\n// \t\theight = 150;\n// \t}\n// \tif (!selector) {\n// \t\tselector = 'textarea';\n// \t}\n// \tif (!readonly) {\n// \t\treadonly = false;\n// \t}\n// \treturn {\n// \t\tselector: selector,\n// \t\ttheme: 'modern',\n// \t\treadonly: readonly,\n// \t\theight: height,\n// \t\tplugins: 'print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists textcolor wordcount imagetools contextmenu colorpicker textpattern'\n// \t}\n// }\n// /**\n//  * @description Set select selected\n//  * @param {array} data \n//  * @author: thanh.bay\n//  */\n// Libs.setSelectSelected = function (selector, value) {\n// \tif (!selector || selector === 'undefined' && selector == null) return;\n// \t$(selector).val(value);\n// \t$(selector).trigger('change.select2');\n// }\n// /**\n//  * @description convert date to string\n//  * @param {array} data \n//  * @author: Minh.Pham\n//  */\n// Libs.convertSQLDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar date = new Date(_date);\n// \tvar result = Libs.convertDateToStr(date, _format);\n// \treturn result;\n// }\n// Libs.convertDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar day = _date.getDate();\n// \tvar month = _date.getMonth();\n// \tvar year = _date.getFullYear() + '';\n// \tmonth += 1;\n// \tif (day < 10) {\n// \t\tday = '0' + day;\n// \t}\n// \tif (month < 10) {\n// \t\tmonth = '0' + month;\n// \t}\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', day);\n// \tresult = result.replace('mm', month);\n// \tresult = result.replace('yyyy', year);\n// \treturn result;\n// }\n// /**\n//  * Get current year\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getCurrentYear = () => {\n// \tvar year = new Date().getFullYear();\n// \treturn year;\n// }\n// /**\n//  * Get days in month\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getDaysOfMonth = (year, month) => {\n// \tvar d = new Date(year, month, 0);\n// \treturn d.getDate();\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV01 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \t//var month = parseInt(dateItems[monthIndex]);\n// \tvar month = dateItems[monthIndex];\n// \treturn dateItems[yearIndex] + '-' + (month) + '-' + dateItems[dayIndex];\n// }\n// /**\n//  * Convert date to YYYYMMDD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV02 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \treturn dateItems[yearIndex] + (month) + dateItems[dayIndex];\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStrYearMonth = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \treturn dateItems[yearIndex] + '-' + dateItems[monthIndex];\n// }\n// /**\n//  * Convert date to 'YYYY-MM-DD'\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertYYYYMMDDDateToStr = (date, _format) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar dateItems = date.split('-');\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', dateItems[2]);\n// \tresult = result.replace('mm', dateItems[1]);\n// \tresult = result.replace('yyyy', dateItems[0]);\n// \treturn result;\n// }\n// /**\n//  * @description Delete special characters\n//  * @param {String} str \n//  * @return string\n//  * @author: minh.pham\n//  */\n// Libs.removeWildcard = (str) => {\n// \tstr = str.replace(/!|@|%|\\^|\\\\|\\/|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'||\\\"|\\&|\\#|\\[|\\]|~|$|_/g, \"\");\n// \treturn str;\n// }\n// /**\n//  * @description Search for characters in the string\n//  * @param {array} data \n//  * @return true\n//  * @author: lam.nguyen\n//  */\n// Libs.searchLikeString = (str, strSearch) => {\n// \tif (Libs.isBlank(str)) {\n// \t\treturn false;\n// \t}\n// \tstr = Libs.removeUnicode(str).toLowerCase().trim();\n// \tif (!Libs.isBlank(strSearch)) {\n// \t\tstrSearch = Libs.removeUnicode(strSearch).toLowerCase().trim();\n// \t}\n// \tif (str.indexOf(strSearch) != -1) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// /**\n//  * @description Remove duplicate elements in the array\n//  * @param Array arr\n//  * @author: Luyen Nguyen\n//  * @return Array\n//  */\n// Libs.removeDuplicatesSafe = function (arr) {\n// \tvar seen = {};\n// \tvar retArr = [];\n// \tfor (var i = 0; i < arr.length; i++) {\n// \t\tif (!(arr[i] in seen)) {\n// \t\t\tretArr.push(arr[i]);\n// \t\t\tseen[arr[i]] = true;\n// \t\t}\n// \t}\n// \treturn retArr;\n// }\n// /*\n//  * call await method\n//  * ex: let users = await Libs.callWithPromise((resolve, reject)=>{\n//  * UserService.instance.getDropDownList({}, (arrData) => {\n//  * \t\tif(arrData){ resolve(arrData)}\n//  * \t\telse{ reject(false)}\n//  *    }, false);\n//  * });\n//  * @param {func} func \n//  */\n// Libs.callWithPromise = (func) => {\n// \treturn new Promise(function (resolve, reject) {\n// \t\tfunc(resolve, reject)\n// \t})\n// }\n// /**\n// * Auto generate key from name\n// *\n// * @param {string} name\n// * @author:  minh.pham 2018-10-20 15:37:34 \n// * */\n// Libs.generateKeyFromName = function (name) {\n// \tif (Libs.isBlank(name)) return \"\";\n// \t//replace all wildchar\n// \tvar regex1 = /\\w+/;\n// \t// const regex = new RegExp(\"([a-zA-Z0-9 ]+)\", \"ig\");\n// \t// let myArray = regex.exec(name);\n// \t// if(myArray!=null){\n// \t// \tname = myArray.join(\"\");\n// \t// }\n// \tname = Libs.removeUnicode(name);\n// \tname = Libs.removeWildcard(name);\n// \tlet nameArr = name.split(\" \");\n// \tif (nameArr.length <= 1) {\n// \t\treturn nameArr[0].substring(0, 4).toUpperCase();\n// \t}\n// \tlet newName = \"\";\n// \tfor (let i = 0; i < nameArr.length; i++) {\n// \t\tnewName += nameArr[i].substring(0, 1).toUpperCase();\n// \t}\n// \treturn newName;\n// }\n// Libs.groupByProps = function (objectArray, property) {\n// \treturn objectArray.reduce(function (acc, obj) {\n// \t\tvar key = obj[property];\n// \t\tif (!acc[key]) {\n// \t\t\tacc[key] = [];\n// \t\t}\n// \t\tacc[key].push(obj);\n// \t\treturn acc;\n// \t}, {});\n// }\n// /**\n//  * \n//  * @param {*} inputDate format dd/MM/yyyy\n//  * @returns string yyyy-MM-dd\n//  */\n// Libs.inputDateToDBDate = function (inputDate) {\n// \tif (inputDate === undefined || inputDate == null || inputDate === '' || typeof inputDate !== 'string') {\n// \t\treturn null;\n// \t}\n// \tvar division = inputDate.split('/');\n// \tif (division <= 1) return null;\n// \tif (inputDate.length != 10) return null;\n// \tlet day = inputDate.substring(0, 2);\n// \tlet month = inputDate.substring(3, 5);\n// \tlet year = inputDate.substring(6, 10);\n// \treturn year + \"-\" + month + \"-\" + day;\n// }\n// /**\n//  * Display toast message\n//  * @param String message: content\n//  * @param String type: \"error\": red background, \"success\": blue background\n//  * @returns {*}\n//  */\n// Libs.toast = function (message, type, pos = \"top-right\") {\n// \tlet posistion = \"top-right\";\n// \tif (typeof pos != 'undefined') {\n// \t\tposistion = pos;\n// \t}\n// \tswitch (type) {\n// \t\tcase \"info\":\n// \t\t\ttoast.info(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"error\":\n// \t\t\ttoast.error(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"warn\":\n// \t\t\ttoast.warn(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t}\n// }\n// /**\n//  * Image url from API\n//  * @author thanh.bay 2018-10-30\n//  * @param  {string} file_path\n//  * @param  {string} headquarter_id\n//  */\n// Libs.linkShowImageAction = function (file_path, headquarter_id) {\n// \tlet host = Libs.baseUrl();\n// \tlet url = Constants.URL.SYSTEM.SHOW_IMAGE;\n// \tfile_path = encodeURI(file_path);\n// \treturn host + \"/\" + url + \"?file_path=\" + file_path + \"&headquarter_id=\" + headquarter_id;\n// }\n// Libs.convertAllFormatDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tif (_date.includes('/')) {\n// \t\treturn _date;\n// \t}\n// \tlet date = moment(_date);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(_format.toUpperCase());\n// }\n// /**\n//  * Convert Data to DB\n//  */\n// Libs.convertAllFormatDate = (_date, from_format = \"DD/MM/YYYY hh:mm\", to_format = \"YYYY-MM-DD hh:mm\") => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tlet date = moment(_date, from_format);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(to_format);\n// }\n// /**\n//  * Validate date 0000-00-00 \n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.validateDateNull = (date) => {\n// \tlet arrFormat = [\"0000-00-00\", \"0000/00/00\", \"0000-00-00 00:00:00\",\"0000/00/00 00:00:00\", \"00/00/0000\", \"00-00-0000\", \"00/00/0000 00:00:00\", \"00-00-0000 00:00:00\"];\n// \tfor (let i = 0; i < arrFormat.length; i++) {\n// \t\tif(date == arrFormat[i]){\n// \t\t\treturn false;\n// \t\t}\n// \t}\n// \treturn true;\n// }\n// /**\n//  * @description synchronize data\n//  * @author LuyenNguyen 2018-11-03\n//  * @param oldItems\n//  * @param newItems\n//  * @param field_key_name\n//  * @param unUpdateFields ex: \"field1,field2,...,fieldn\"\n//  * @returns {Array} \n//  */\n// Libs.synchronizeData = function (oldItems, newItems, field_key_name, unUpdateFields) {\n// \tif (!oldItems)\n// \t\toldItems = [];\n// \tif (!newItems) {\n// \t\treturn;\n// \t}\n// \tvar deletedList = [];\n// \tvar unUpdateFieldArr = null;\n// \tif (unUpdateFields && unUpdateFields != \"\") {\n// \t\tunUpdateFieldArr = unUpdateFields.split(\",\");\n// \t}\n// \t// add and update new item\n// \tnewItems.some(function (el) {\n// \t\tvar new_key_val = el[field_key_name];\n// \t\tvar oldItem = Libs.findIndex(oldItems, field_key_name, new_key_val, true);\n// \t\tif (oldItem == -1) {\n// \t\t\toldItems.push(el);\n// \t\t} else {\n// \t\t\tfor (var key in el) {\n// \t\t\t\tvar is_update = true;\n// \t\t\t\tif (unUpdateFieldArr && unUpdateFieldArr.length > 0\n// \t\t\t\t\t&& unUpdateFieldArr.indexOf(key) >= 0) {\n// \t\t\t\t\tis_update = false;\n// \t\t\t\t}\n// \t\t\t\tif (is_update) {\n// \t\t\t\t\toldItem[key] = el[key];\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t});\n// \t// remove item not in new items\n// \tfor (var index = oldItems.length - 1; index >= 0; index--) {\n// \t\tvar item = oldItems[index];\n// \t\tvar new_key_val = item[field_key_name];\n// \t\t// update\n// \t\tvar newItem = Libs.findIndex(newItems, field_key_name, new_key_val, true);\n// \t\tif (newItem == -1) {\n// \t\t\tdeletedList.push(item);\n// \t\t\toldItems.splice(index, 1);\n// \t\t}\n// \t}\n// \treturn deletedList;\n// };\n// /**\n//  * @description Check editor data\n//  * @author LuyenNguyen 2018-11-04\n//  * @param string str\n//  * @returns boolean\n//  */\n// Libs.checkEditorEmpty = function (str) {\n// \tif (Libs.isBlank(str)) return false;\n// \tstr = str.replace(/<\\/?p[^>]*>/g, \"\");\n// \tstr = str.replace(/\\s|\\&nbsp;|\\(|\\)|\\（|\\）/g, '');\n// \tif (!str) return false;\n// \treturn true;\n// }\n// /**\n//  * @description Check onClick or doubleClick\n//  * @author LuyenNguyen 2018-11-04\n//  * @param func onClick\n//  * @param func onDblClick\n//  * @param int delay: time delay\n//  */\n// Libs.getClickHandler = function (onClick, onDblClick, delay) {\n// \tvar timeoutID = null;\n// \tdelay = delay || 250;\n// \treturn function (event) {\n// \t\tif (!timeoutID) {\n// \t\t\ttimeoutID = setTimeout(function () {\n// \t\t\t\tonClick(event);\n// \t\t\t\ttimeoutID = null\n// \t\t\t}, delay);\n// \t\t} else {\n// \t\t\ttimeoutID = clearTimeout(timeoutID);\n// \t\t\tonDblClick(event);\n// \t\t}\n// \t};\n// }\n// Libs.padLeft = function (str, number, digit) {\n// \treturn Array(number - String(str).length + 1).join(digit || '0') + str;\n// }\n// /**\n// * @description Rounding\n//  * (0.55 -> 0.6, 0.54 -> 0.5)\n//  * @author LuyenNguyen 2018-11-04\n//  */\n// Libs.round = function (number, decimals) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \treturn Number((Math.round(number + \"e\" + decimals) + \"e-\" + decimals));\n// };\n// Libs.getCurrentDate = function (format) {\n// \tformat = (!format || typeof format !== 'string') ? 'DD/MM/YYYY' : format;\n// \treturn moment().format(format);\n// }\n// /**\n//  * Add Days\n//  */\n// Libs.addDays = function (date, days) {\n// \tvar result = new Date(date);\n// \tresult.setDate(result.getDate() + days);\n// \treturn result;\n// }\n// /**\n//  * Valid date checks\n//  * @author Minh.Pham 2019-02-19\n//  * @param from_date  từ ngày\n//  * @param format định dạng kiểu ngày truyền vào\n//  * @returns bool\n//  */\n// Libs.isValidDate = function (from_date, format) {\n// \tfrom_date = moment(from_date, format.toUpperCase());\n// \treturn from_date.isValid();\n// }\n// /**\n// * @description Gọi lại sự kiện sau khi gọi collapse cho element bootstrap\n// * @param function callback: nhận một tham số là status nếu true collapse là show và ngược lại\n// * @param string selector: tên id hoặc class\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.collapseCallback = function (func, selector) {\n// \tif (Libs.isBlank(selector)) {\n// \t\tselector = $('#group-advance-search');\n// \t}\n// \telse {\n// \t\tselector = $('.' + selector);\n// \t\tif (!selector || selector.length <= 0) {\n// \t\t\tselector = $('#' + selector);\n// \t\t}\n// \t}\n// \tif (!selector || selector.length <= 0 || !func || typeof func !== 'function') return;\n// \tselector.on('hidden.bs.collapse', function () {\n// \t\tfunc(false);\n// \t});\n// \tselector.on('show.bs.collapse', function () {\n// \t\tfunc(true);\n// \t});\n// }\n// /**\n// * @description Thêm class để tính lại chiều cao của màn hình bên phải luôn full trong trường hợp không có button dưới footer\n// * @param boolean|string isRemove: Nếu có giá trị sẽ remove class content-full và trả về trạng thái ban đầu\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.addClassContentFull = function (isRemove) {\n// \tlet content = $('#main-container>.content');\n// \tif (!content || content.length <= 0) return;\n// \tif (!Libs.isBlank(isRemove)) {\n// \t\tcontent.removeClass('content-full');\n// \t}\n// \telse {\n// \t\tcontent.addClass('content-full');\n// \t}\n// }\n// /**\n// * @description Làm tròn số\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param decimal số thập phân\n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundNumber = function (number, decimals = 0, type = 0) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \ttype = type * 1;\n// \tswitch(type){\n// \t\tcase -1:\n// \t\t\treturn roundTo.down(number, decimals);\n// \t\tcase 1:\n// \t\t\treturn roundTo.up(number, decimals);\n// \t\tdefault:\n// \t\t\treturn roundTo(number, decimals);\n// \t}\n// };\n// /**\n// * @description Làm tròn số theo format\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param format #,###.## \n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundByFormat = function (number, format, type = 0) {\n// \treturn Libs.roundNumber(number, Libs.getDecimalsOfFomat(format), type);\n// };\n// /**\n// * @description Lấy số decimals(phần thập phân) của format\n// * @author Minh.Pham 2018-12-04\n// * @param format #,###.## \n//  */\n// Libs.getDecimalsOfFomat = function (format) {\n// \tlet decimals = 0;\n// \tif(!Libs.isBlank(format)){\n// \t\ttry{\n// \t\t\tlet arr = format.split('.');\n// \t\t\tif(arr.length >= 2){\n// \t\t\t\tdecimals = arr[arr.length -1].length;\n// \t\t\t}\n// \t\t}catch(ex){\n// \t\t}\n// \t}\n// \treturn decimals;\n// };\n// /**\n// * @description insert 1 item tới array\n// * ex: insertAt(arr, 1, \"x\", \"y\", \"z\");\n// * @author TichNguyen 2018-12-04\n// * @param array mãng\n// * @param index insert tại index \n//  */\n// Libs.insertAt=function(array, index) {\n//     var arrayToInsert = Array.prototype.splice.apply(arguments, [2]);\n//     return Libs.insertArrayAt(array, index, arrayToInsert);\n// };\n// /**\n// * @description insert 1 array to array\n// * ex: var arrToInsert = [\"x\", \"y\", \"z\"];\n// * \t  insertArrayAt(arr, 1, arrToInsert);\n// * @author TichNguyen 2018-12-04\n// * @param array\n// * @param index insert tại index \n// * @param arrayToInsert\n//  */\n// Libs.insertArrayAt=function(array, index, arrayToInsert) {\n// \tif(!arrayToInsert || arrayToInsert.length<=0) return array;\n//     Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n//     return array;\n// }\n// /**\n//  * Move the element in the array\n//  */\n// Libs.arrayMove = function(arr, old_index, new_index) {\n//     if (new_index >= arr.length) {\n//         var k = new_index - arr.length + 1;\n//         while (k--) {\n//             arr.push(undefined);\n//         }\n//     }\n//     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n//     return arr; // for testing\n// };\n// /**\n//  * Hàm resize image \n//  * @param {image}: Image() hình cần resize\n//  * @param {maxWidth}: decimal chiều rộng tối đa\n//  * @param {maxHeight}: decimal chiều cao tối đa\n//  * @param {quality}: decimal chất lượng hình từ 0 => 1\n//  */\n// Libs.resizeImage = function(image, maxWidth, maxHeight, quality) {\n//     var canvas = document.createElement('canvas');\n//     var width = image.width;\n//     var height = image.height;\n//     if (width > height) {\n//         if (width > maxWidth) {\n//             height = Math.round(height * maxWidth / width);\n//             width = maxWidth;\n//         }\n//     } else {\n//         if (height > maxHeight) {\n//             width = Math.round(width * maxHeight / height);\n//             height = maxHeight;\n//         }\n//     }\n//     canvas.width = width;\n//     canvas.height = height;\n//     var ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(image, 0, 0, width, height);\n//     return canvas.toDataURL(\"image/jpeg\", quality);\n// }\n// /**\n//  * @description Check the array data \n//  * @param Array arr\n//  * @author: Minh.Pham\n//  * @return boolean\n//  */\n// Libs.isArray = function (arr) {\n// \tif (arr == null) return true;\n// \tif (!Array.isArray(arr)) return false;\n// \treturn true;\n// }\n// String.prototype.format = function() {\n// \ta = this;\n// \tfor (k in arguments) {\n// \t  a = a.replace(\"{\" + k + \"}\", arguments[k])\n// \t}\n// \treturn a\n//   }\n// Libs.getMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n//     while (date <= endDate)\n//     {\n//         var stringDate = monthNameList[date.getMonth()] + \" \" + date.getFullYear();\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n//         resultList.push({\n//             str:stringDate,\n//             first:firstDay,\n//             last:lastDay,\n//         });\n//         date.setMonth(date.getMonth() + 1);\n//     }\n//     return resultList;\n// };\n// Libs.getStringMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n//     while (date <= endDate)\n//     {\n// \t\tvar stringDate = monthNameList[date.getMonth()];\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n// \t\tresultList.push(stringDate)\n//         date.setMonth(date.getMonth() + 1);\n//     }\n//     return resultList;\n// };\n// /**\n// * @description get from_date, to_date from year ago to current year\n//  * @author Minh.Pham 2019-06-21\n//  */\n// Libs.getParamDayByYear =  function(numerOfYear, format){\n// \tlet currentDate = moment().toDate();\n// \tlet month = currentDate.getMonth();\n// \tlet day = currentDate.getDate();\n// \tlet year  = currentDate.getFullYear();\n// \treturn {\n// \t\tfrom_date: moment().date(1).month(month).year(year - numerOfYear).format(format),\n// \t\tto_date: moment().date(day).month(month).year(year).format(format),\n// \t};\n// }\n// // \n// /**\n// * @description date array from start_date -> end_date\n//  * @author Long.Pham 2019-06-21\n//  * @param start,  end new Date('2019-12-12')\n//  */\n// Libs.getDateArray =  function(start, end){\n// \tvar arr = new Array();\n// \tvar dt = new Date(start);\n//     while (dt <= end) {\n//         arr.push(moment(new Date(dt)).format('DD/MM/YYYY'));\n//         dt.setDate(dt.getDate() + 1);\n//     }\n//     return arr;\n// }\nexport default Libs;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/utils/Libs.js"],"names":["formatNum","require","roundTo","moment","Libs","safeTrim","str","trim","toString","e","isBlank","undefined","isObjectEmpty","obj","hasOwnProperty","Object","prototype","length","key","call","find","items","field","value","i","isArrayData","arr","Array","isArray","isNumber","val","replace","test","err","checkExtensionFile","file_name","ext_type","extImg","extFile","extAll","extVideo","ext","substr","lastIndexOf","convertStringToNumber","Number","pattern","round","isNaN","comma","decimal","afterDecimalNum","regex","RegExp","myArray","index","afterDecimal","exec","opts","up","down","stringAssign","data","REG_ASSIGN_VARIBLE","$0","$1","String","convertStrtoDate","_date","format","date","arrFormat","_isValid","_d","toLowerCase","dateFormat","from_format","checkBitOnOff","nByte","bitIndex","result","parseInt","Math","pow","getCurrentDDMMYYYY","Date","year","getFullYear","month","getMonth","padStart","day","getDate","SHA3","plainText","CryptoLib","base64Encrypt","plaintext","base64Decrypt","ciph","generateSKU","id_company","lenUpper","uniqId","getTime","random","d","n","randomString","uppercase","randomUppercase","floor","substring","generateStrRandom","lenLower","lenSpec","lenNumber","lowercase","specialChar","charNumber","randomLowercase","randomSpecialChar","randomCharNumber","split","sort","join","compareDate","from_date","to_date","toUpperCase","startOf","isAfter","isBefore","checkIfImageExists","url","callback","img","Image","src","complete","onload","onerror","checkImageExists","exists","getCurrentMMDDYYYYHI","hour","getHours","mi","getMinutes","addMinutes","minutes","setMinutes","addDays","days","setDate","addMonths","months","setMonth","addYears","years","setFullYear","convertAllFormatDate","to_format","formatElectricalUnit","prefix","parseFloat","toFixed","getStringMonthNumber","number","monthNameList","getUnique","comp","unique","map","final","indexOf","filter","getFileUrl","filePath","server_data"],"mappings":"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AV,CAApB,CACA,CAJD,CAMApK,IAAI,CAACsK,SAAL,CAAiB,SAAUhJ,GAAV,CAAeiJ,IAAf,CAAqB,CACrC,GAAMC,CAAAA,MAAM,CAAGlJ,GAAG,CAChBmJ,GADa,CACT,SAAApK,CAAC,QAAIA,CAAAA,CAAC,CAACkK,IAAD,CAAL,EADQ,EAEbE,GAFa,CAET,SAACpK,CAAD,CAAIe,CAAJ,CAAOsJ,KAAP,QAAiBA,CAAAA,KAAK,CAACC,OAAN,CAActK,CAAd,IAAqBe,CAArB,EAA0BA,CAA3C,EAFS,EAGbwJ,MAHa,CAGN,SAAAvK,CAAC,QAAIiB,CAAAA,GAAG,CAACjB,CAAD,CAAP,EAHK,EAGOoK,GAHP,CAGW,SAAApK,CAAC,QAAIiB,CAAAA,GAAG,CAACjB,CAAD,CAAP,EAHZ,CAAf,CAKA,MAAOmK,CAAAA,MAAP,CACA,CAPD,CAYA;AACA;AACA;AACA;AACA,G,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA,GACAxK,IAAI,CAAC6K,UAAL,CAAkB,SAAUC,QAAV,CAAoBC,WAApB,CAAiC,CAClD,GAAI/K,IAAI,CAACM,OAAL,CAAawK,QAAb,CAAJ,CAA4B,OAC5B,MAAOC,CAAAA,WAAW,CAAG,GAAd,CAAoBD,QAA3B,CACA,CAHD,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,cAAe9K,CAAAA,IAAf","sourcesContent":["// import React from 'react';\nvar formatNum = require('format-number');\nconst roundTo = require('round-to');\nconst moment = require(\"moment\");\n// import { toast } from 'react-toastify';\nvar Libs = {};\n\n/**\n * trim string\n * @param str\n * @returns\n */\nLibs.safeTrim = (str) => {\n\ttry {\n\t\treturn (typeof str === 'string') ? str.trim() : str.toString();\n\t} catch (e) {\n\t\treturn \"\";\n\t}\n};\n\n/**\n * check blank object or string\n * @param str\n * @returns {Boolean}\n */\nLibs.isBlank = (str) => {\n\tif (typeof str === undefined || str === null || Libs.safeTrim(str) === \"\") {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Check valid object\n * @param {*} obj \n */\nLibs.isObjectEmpty = (obj) => {\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tif (obj == null) return true;\n\tif (obj.length > 0) return false;\n\tif (obj.length === 0) return true;\n\tif (typeof obj !== \"object\") return true;\n\tfor (var key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) return false;\n\t}\n\treturn true;\n}\n\n/**\n * Find objects in arrays by value and field\n * @param items\n * @param field\n * @param value\n * @returns\n */\nLibs.find = function (items, field, value) {\n\tif (!items)\n\t\treturn null;\n\tfor (var i = 0; i < items.length; i++) {\n\t\tif (value === items[i][field]) {\n\t\t\treturn items[i];\n\t\t}\n\t}\n\treturn null;\n};\n\n/**\n * @description Check the array data \n * @param Array arr\n * @author: Luyen Nguyen\n * @return boolean\n */\nLibs.isArrayData = function (arr) {\n\tif (Libs.isBlank(arr)) return false;\n\tif (!Array.isArray(arr) || arr.length <= 0) return false;\n\treturn true;\n}\n\nLibs.isNumber = function (value) {\n\ttry {\n\t\tvar val = value;\n\t\tif (typeof val === 'undefined' || val === null) return false;\n\t\tif (typeof val === 'number') {\n\t\t\tval = val.toString();\n\t\t}\n\t\tval = val.replace(/^-/, '');\n\t\treturn /^[0-9\\b]+$/.test(val);\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n\n/**\n* @description Check ext file upload\n* @author Long.Pham 10/05/2021\n* @param  String file_name: file name\n* @param  {int} ext_type: undefined: all file, 1: only image, 2: only file, 3: video\n*/\nLibs.checkExtensionFile = function (file_name, ext_type) {\n\tif (file_name === 'undefined' || file_name === null) return;\n\tvar extImg = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF'];\n\tvar extFile = ['xlsx', 'xls', 'XLSX', 'XLS', 'doc', 'DOC', 'docs', 'DOCS', 'pdf', 'PDF'];\n\tvar extAll = ['png', 'PNG', 'jpg', 'JPG', 'jpeg', 'JPEG', 'gif', 'GIF', 'doc', 'DOC', 'docs', 'DOCS', 'docx', 'DOCX', 'pdf', 'PDF', 'mp4', 'MP4', 'avi', 'AVI'];\n\tvar extVideo = ['mp4', 'MP4', 'avi', 'AVI'];\n\tvar ext = file_name.substr((file_name.lastIndexOf('.') + 1));\n\tif (ext_type === 'undefined' || ext_type === null) {\n\t\tfor (let i = 0; i < extAll.length; i++) {\n\t\t\tif (ext === extAll[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 1) {\n\t\tfor (let i = 0; i < extImg.length; i++) {\n\t\t\tif (ext === extImg[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 2) {\n\t\tfor (let i = 0; i < extFile.length; i++) {\n\t\t\tif (ext === extFile[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\telse if (ext_type === 3) {\n\t\tfor (let i = 0; i < extVideo.length; i++) {\n\t\t\tif (ext === extVideo[i]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n\nLibs.convertStringToNumber = function (value) {\n\ttry {\n\t\tvar val = value;\n\t\tif (typeof val === 'undefined' || val == null) return null;\n\t\tif (typeof val === 'number') {\n\t\t\tval = val.toString();\n\t\t}\n\t\treturn Number(val.replace(/[^0-9]+/g, \"\"));\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n* Format number according to the format option in formatNum format of the library\n* By default #, ###. ## separated by commas, spread after decimal 2 digits\n*\n* @param {String} val\n* @param {String} pattern default #,###.##\n* @param {int} round default 0: Default rounding -1: rounding down, 1: rounding up\n* @author:  MinhPham 2018-11-18 11:16:34 \n*/\nLibs.formatNum = function (val, pattern = \"#,###.##\", round = 0) {\n\tif (Libs.isBlank(val) || isNaN(val)) {\n\t\treturn \"\";\n\t}\n\tval = val * 1;\n\tlet comma = ','\n\tlet decimal = '.'\n\tlet afterDecimalNum = 0;//After the decimal point take some numbers\n\tif (Libs.isBlank(pattern)) {\n\t\tpattern = \"#,###.##\";\n\t}\n\tconst regex = new RegExp(\"[,.]+\", \"ig\");\n\tlet myArray;\n\tlet index = 0;\n\tlet afterDecimal = \"\";\n\twhile ((myArray = regex.exec(pattern)) !== null) {\n\t\t//The first time is the comma\n\t\tif (index === 0) {\n\t\t\tcomma = myArray[0];\n\t\t} else if (comma !== myArray[0]) {\n\t\t\t//The last time is the decimal separator\n\t\t\tafterDecimal = myArray[0];\n\t\t}\n\t\tindex++;\n\t}\n\tif (afterDecimal !== \"\") {\n\t\tdecimal = afterDecimal;\n\t\tafterDecimalNum = pattern.length - (pattern.lastIndexOf(decimal) + 1)\n\t}\n\n\tvar opts = {\n\t\t\"negativeType\": 'left',\n\t\t\"prefix\": '',\n\t\t\"suffix\": '',\n\t\t\"integerSeparator\": comma,\n\t\t\"decimalsSeparator\": '',\n\t\t\"decimal\": decimal,\n\t\t\"padLeft\": -1,\n\t\t\"round\": afterDecimalNum\n\t};\n\tif (round === 1) {\n\t\tval = roundTo.up(val, afterDecimalNum);\n\t} else if (round === 0) {\n\t\tval = roundTo(val, afterDecimalNum);\n\t} else {\n\t\tval = roundTo.down(val, afterDecimalNum);\n\t}\n\n\treturn formatNum(opts)(val);\n}\n\n/**\n * string format\n * ex: let a = Libs.stringAssign(\"hello $<0> $<1>\", [\"world\",\"rrr\"])\n * @param {string template} str \n * @param {Array} data \n * @param {regex} REG_ASSIGN_VARIBLE \n */\nLibs.stringAssign = function (str, data, REG_ASSIGN_VARIBLE) {\n\tif (Libs.isBlank(REG_ASSIGN_VARIBLE)) {\n\t\tREG_ASSIGN_VARIBLE = /\\$\\<([^{}]*?)\\>/g;\n\t}\n\treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n\t\treturn String(data[$1]);\n\t});\n};\n\n\nLibs.convertStrtoDate = (_date, format) => {\n\tif (null === _date || typeof _date === 'undefined' || _date === '') {\n\t\treturn '';\n\t}\n\tlet date = _date;\n\tif (typeof format === \"undefined\" || Libs.isBlank(format)) {\n\t\tlet arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"]\n\t\tfor (let i = 0; i < arrFormat.length; i++) {\n\t\t\tdate = moment(_date, arrFormat[i]);\n\t\t\tif (date._isValid) {\n\t\t\t\treturn date._d;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (format.toLowerCase() === 'utc') {\n\t\t\tdate = moment(_date);\n\t\t} else date = moment(_date, format);\n\t\tif (!date._isValid) {\n\t\t\treturn _date;\n\t\t}\n\t\treturn date._d;\n\t}\n\treturn _date;\n}\n\n\n/**\n  * format date to another format\n  * @param {String} _date \n  * @param {String} format \n  * @param {String} from_format \n  */\nLibs.dateFormat = (_date, format = \"DD/MM/YYYY HH:mm:ss\", from_format) => {\n\tif (null === _date || typeof _date === 'undefined' || _date === '') {\n\t\treturn '';\n\t}\n\tlet date = _date;\n\tif (typeof from_format === \"undefined\" || Libs.isBlank(from_format)) {\n\t\tlet arrFormat = [\"YYYY/MM/DD HH:mm:ss\", \"YYYY-MM-DD HH:mm:ss\", \"DD/MM/YYYY HH:mm:ss\", \"DD-MM-YYYY HH:mm:ss\", \"MM/DD/YYYY HH:mm:ss\", \"MM-DD-YYYY HH:mm:ss\"]\n\t\tfor (let i = 0; i < arrFormat.length; i++) {\n\t\t\tdate = moment(_date, arrFormat[i]);\n\t\t\tif (date._isValid) {\n\t\t\t\treturn date.format(format);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (from_format.toLowerCase() === 'utc') {\n\t\t\tdate = moment(_date);\n\t\t} else date = moment(_date, from_format);\n\t\tif (!date._isValid) {\n\t\t\treturn _date;\n\t\t}\n\t\treturn date.format(format);\n\t}\n\treturn _date;\n}\n\n/**\n * Check input on/off 111111111 : nByte _________ 000000100 : bitIndex:2\n * =>pow(2,2){base 10}= 000000100{base 2} =========== 000000100=>input 3 is\n * on.\n *\n * @param nByte\n * @param bitIndex\n * @return\n */\nLibs.checkBitOnOff = (nByte, bitIndex) => {\n\tlet result = nByte & parseInt(Math.pow(2, bitIndex));\n\treturn result != 0 ? true : false;\n}\n\nLibs.getCurrentDDMMYYYY = function () {\n\tlet date = new Date();\n\tlet year = date.getFullYear().toString();\n\tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\tlet day = date.getDate().toString().padStart(2, \"0\");\n\treturn day + \"/\" + month + \"/\" + year;\n}\n\n\nLibs.SHA3 = function (plainText) {\n\tif (typeof plainText === 'undefined') {\n\t\treturn plainText;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.SHA3(plainText);\n}\n\n\n/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */\nLibs.base64Encrypt = function (plaintext) {\n\tif (Libs.isBlank(plaintext)) {\n\t\treturn plaintext;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.base64Encrypt(plaintext);\n}\n/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */\nLibs.base64Decrypt = function (ciph) {\n\tif (Libs.isBlank(ciph)) {\n\t\treturn ciph;\n\t}\n\tvar CryptoLib = require('./Crypto.js');\n\treturn CryptoLib.base64Decrypt(ciph);\n}\n/**\n * @description Generate sku\n * @author: Long.Pham\n * @return str\n */\nLibs.generateSKU = function (id_company, lenUpper) {\n\n\tvar uniqId = Math.round(new Date().getTime() + (Math.random() * 100));\n\tvar d = new Date();\n\tvar n = d.getTime();\n\tvar randomString = '';\n\tvar uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tfor (var i = 0; i < lenUpper; i++) {\n\t\tvar randomUppercase = Math.floor(Math.random() * uppercase.length);\n\t\trandomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n\t}\n\n\treturn !Libs.isBlank(id_company) ? (id_company + randomString + uniqId) : (randomString + uniqId);\n};\n\n/**\n * @description Generate random string chữ hoa, chữ thường, số, ký tự đặc biệt\n * @author: Long.Pham\n * @return str\n */\n\nLibs.generateStrRandom = function (lenUpper, lenLower, lenSpec, lenNumber) {\n\tvar uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\tvar lowercase = 'abcdefghijklmnopqrstuvwxyz';\n\tvar specialChar = '!@#$%^&*(){}<>?';\n\tvar charNumber = '0123456789';\n\tvar randomString = '';\n\tfor (let i = 0; i < lenUpper; i++) {\n\t\tvar randomUppercase = Math.floor(Math.random() * uppercase.length);\n\t\trandomString += uppercase.substring(randomUppercase, randomUppercase + 1);\n\t}\n\tfor (let i = 0; i < lenLower; i++) {\n\t\tvar randomLowercase = Math.floor(Math.random() * lowercase.length);\n\t\trandomString += lowercase.substring(randomLowercase, randomLowercase + 1);\n\t}\n\tfor (let i = 0; i < lenSpec; i++) {\n\t\tvar randomSpecialChar = Math.floor(Math.random() * specialChar.length);\n\t\trandomString += specialChar.substring(randomSpecialChar, randomSpecialChar + 1);\n\t}\n\tfor (let i = 0; i < lenNumber; i++) {\n\t\tvar randomCharNumber = Math.floor(Math.random() * charNumber.length);\n\t\trandomString += charNumber.substring(randomCharNumber, randomCharNumber + 1);\n\t}\n\tvar str = randomString.split(\"\");\n\treturn str.sort(function () { return 0.5 - Math.random() }).join(\"\");\n}\n\n/**\n * Compare date\n * @author Long.Pham 2018-11-21\n * @param from_date  from date\n * @param format date format\n * @param to_date to date, default is current date\n * @returns -1: less, 0: equal, 1: bigger\n */\nLibs.compareDate = function (from_date, format, to_date = null) {\n\tfrom_date = moment(from_date, format.toUpperCase());\n\tif (to_date == null) {\n\t\tto_date = moment(new Date()).startOf('day');;\n\t} else {\n\t\tto_date = moment(to_date, format);\n\t}\n\tif (from_date.isAfter(to_date)) {\n\t\treturn 1;\n\t}\n\tif (from_date.isBefore(to_date)) {\n\t\treturn -1;\n\t}\n\treturn 0;\n}\n\nLibs.checkIfImageExists = function (url, callback) {\n\tconst img = new Image();\n\timg.src = url;\n\tif (img.complete) {\n\t\tcallback(true);\n\t} else {\n\t\timg.onload = () => {\n\t\t\tcallback(true);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\tcallback(false);\n\t\t};\n\t}\n};\n\nLibs.checkImageExists = function (url) {\n\tthis.checkIfImageExists(url, (exists) => {\n\t\treturn exists ? true : false;\n\t});\n}\n\n/**\n * @description get current date\n * @author Long.Pham 2020-10-26\n * @return string date\n */\nLibs.getCurrentMMDDYYYYHI = function () {\n\tlet date = new Date();\n\tlet year = date.getFullYear().toString();\n\tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\tlet day = date.getDate().toString().padStart(2, \"0\");\n\tlet hour = date.getHours().toString().padStart(2, \"0\");\n\tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n\treturn month + \"/\" + day + \"/\" + year + \" \" + hour + \":\" + mi;\n}\n\n/**\n * Add Minutes\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\nLibs.addMinutes = function (date, minutes) {\n\tvar result = new Date(date);\n\tresult.setMinutes(result.getMinutes() + minutes);\n\treturn result;\n}\n\n/**\n * Add Days\n * @author Long.Pham 2020-10-26\n * @param date \n * @param days\n * @returns date\n */\nLibs.addDays = function (date, days) {\n\tvar result = new Date(date);\n\tresult.setDate(result.getDate() + days);\n\treturn result;\n}\n\n/**\n * Add Months\n * @author Long.Pham 2020-10-26\n * @param date \n * @param months\n * @returns date\n */\nLibs.addMonths = function (date, months) {\n\tvar result = new Date(date);\n\tresult.setMonth(result.getMonth() + months);\n\treturn result;\n}\n\n/**\n * Add Years\n * @author Long.Pham 2020-10-26\n * @param date \n * @param years\n * @returns date\n */\nLibs.addYears = function (date, years) {\n\tvar result = new Date(date);\n\tresult.setFullYear(result.getFullYear() + years);\n\treturn result;\n}\n\n\n/**\n * @description Convert Data to DB\n * @author Long.Pham 2020-10-26\n * @param {String} _date \n * @param {String} format \n * @param {String} from_format\n */\nLibs.convertAllFormatDate = (_date, from_format = \"MM/DD/YYYY HH:mm:ss\", to_format = \"YYYY-MM-DD HH:mm:ss\") => {\n\tif (null == _date || typeof _date === 'undefined' || _date == '') {\n\t\treturn '';\n\t}\n\tlet date = moment(_date, from_format);\n\tif (!date._isValid) {\n\t\treturn _date;\n\t}\n\treturn date.format(to_format);\n}\n\n\n/**\n * Format electrical unit \n * @author Long.Pham 2020-10-26\n * @param {double} data: data\n * @return {string}: format data\n */\n\nLibs.formatElectricalUnit = function (data, prefix = '') {\n\tif (Libs.isBlank(data) || data <= 0) return \"0 kW\" + prefix;\n\n\tif (data < 1000) {\n\t\treturn Number.parseFloat(data).toFixed(2) + \" w\" + prefix;\n\t} else if (data >= 1000 && data < 1000000) {\n\t\treturn Number.parseFloat(data / 1000).toFixed(2) + \" kW\" + prefix;\n\t} else if (data >= 1000000 && data < 1000000000) {\n\t\treturn Number.parseFloat(data / 1000000).toFixed(2) + \" MW\" + prefix;\n\t} else if (data >= 1000000000 && data < 1000000000000) {\n\t\treturn Number.parseFloat(data / 1000000000).toFixed(2) + \" GW\" + prefix;\n\t}\n\telse if (data >= 1000000000000 && data < 1000000000000000) {\n\t\treturn Number.parseFloat(data / 1000000000000).toFixed(2) + \" TW\" + prefix;\n\t}\n}\n\n\nLibs.getStringMonthNumber = function (number) {\n\tif (number <= 0 || number > 12) return null;\n\tvar monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\treturn monthNameList[number - 1];\n}\n\nLibs.getUnique = function (arr, comp) {\n\tconst unique = arr\n\t\t.map(e => e[comp])\n\t\t.map((e, i, final) => final.indexOf(e) === i && i)\n\t\t.filter(e => arr[e]).map(e => arr[e]);\n\n\treturn unique;\n}\n\n\n\n\n/**\n * @description Generate random string\n * @author: Luyen Nguyen\n * @return str\n */\n// Libs.generateStrRandom = function (len, charSet) {\n// \tcharSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*?';\n//     var randomString = '';\n//     for (var i = 0; i < len; i++) {\n//         var randomPoz = Math.floor(Math.random() * charSet.length);\n//         randomString += charSet.substring(randomPoz,randomPoz+1);\n//     }\n//     return randomString;\n// }\n\n\n// Libs.baseUrl = function () {\n// \tlet url = \"\";\n// \tconst protocol = location.protocol;\n// \tconst API_HOST = process.api_host || Constants.API_HOST;\n// \tconst API_HTTP_PORT = process.api_http_port || Constants.API_HTTP_PORT;\n// \tconst API_HTTPS_PORT = process.api_https_port || Constants.API_HTTPS_PORT;\n// \tif (protocol == 'https:') {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTPS_PORT;\n// \t} else {\n// \t\turl = protocol + \"//\" + API_HOST + \":\" + API_HTTP_PORT;\n// \t}\n// \treturn url; \n// }\n\n\n/**\n * @description Get file url\n * @author Long.Pham 14/06/2021\n * @param {string} filePath: file path\n */\nLibs.getFileUrl = function (filePath, server_data) {\n\tif (Libs.isBlank(filePath)) return;\n\treturn server_data + \"/\" + filePath;\n}\n\n// Libs.rEnter = (event) => {\n// \tvar _this = $(event.target);\n// \tif (event.which === 13) {\n// \t\tvar sign = event.shiftKey ? -1 : 1;\n// \t\tevent.preventDefault();\n// \t\tvar fields = _this.parents('form:eq(0),body').find('input,textarea');\n// \t\tvar index = fields.index(_this);\n// \t\tif (index > -1 && (index + 1 * sign) < fields.length)\n// \t\t\tfields.eq(index + 1 * sign).focus();\n// \t}\n// }\n\n\n\n\n// /**\n//  * return json result\n//  * @param unknown $status\n//  * @param unknown $mess\n//  * @param unknown $data\n//  */\n// Libs.returnJsonResult = (status, mess, data, total_row) => {\n// \tvar result = {};\n// \tresult.status = status;\n// \tresult.mess = mess ? mess : \"\";\n// \tresult.data = data ? data : \"\";\n// \tresult.total_row = total_row ? total_row : 0;\n// \treturn result;\n// }\n\n// Libs.convertObjectToJson = (object) => {\n// \treturn JSON.stringify(object);\n// }\n\n\n\n\n// /**\n//  * Convert date to milisecond\n//  */\n// Libs.convertDateToMilliseconds = (date, char) => {\n// \tvar date = $(\"#datepicker\").val().split(\"-\");\n// \tvar f = new Date(date[2], date[1] - 1, date[0]);\n// \tif (null == f || \"undefined\" === typeof f)\n// \t\treturn 0;\n// \treturn f.getTime();\n// }\n\n// Libs.convertMillisecondsToDataFormat = (milliseconds, isShowHour = true) => {\n// \tmilliseconds = parseInt(milliseconds);\n// \tif (milliseconds == null || milliseconds == 0) return \"\";\n// \tvar dateObj = new Date(milliseconds);\n// \tvar day = (dateObj.getDate() < 10) ? (\"0\" + dateObj.getDate()) : dateObj.getDate();\n// \tvar month = (dateObj.getMonth() + 1 < 10) ? (\"0\" + (dateObj.getMonth() + 1)) : (dateObj.getMonth() + 1);\n// \tvar year = dateObj.getFullYear();\n// \tvar hour = (dateObj.getHours() < 10) ? (\"0\" + dateObj.getHours()) : dateObj.getHours();\n// \tvar minute = (dateObj.getMinutes() < 10) ? (\"0\" + dateObj.getMinutes()) : dateObj.getMinutes();\n// \tvar second = (dateObj.getSeconds() < 10) ? (\"0\" + dateObj.getSeconds()) : dateObj.getSeconds();\n// \tif (isShowHour)\n// \t\treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + minute + \":\" + second;\n// \telse\n// \t\treturn day + \"/\" + month + \"/\" + year\n// }\n// Libs.convertMillisecondsToDate = (time) => {\n// \tvar date = new Date(time);\n// \treturn date;\n// }\n// Libs.scrollToBottom = (your_div) => {\n\n// \tvar objDiv = your_div;\n// \t//console.log(\"objDiv.scrollTop :\" + objDiv.scrollTop);\n// \t//console.log(\"objDiv.scrollHeight - objDiv.offsetHeight :\" + (objDiv.scrollHeight - objDiv.offsetHeight));\n// \tif (objDiv.scrollTop >= (objDiv.scrollHeight - objDiv.offsetHeight)) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// Libs.convertStr2Date = (_date, _format, _delimiter) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\t;\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = _format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = _date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \tmonth -= 1;\n// \tvar formatedDate = new Date(dateItems[yearIndex], month, dateItems[dayIndex]);\n// \treturn formatedDate;\n// }\n// Libs.getMillisecondsFromDataPickerFrom = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn 0;\n// \t}\n// \treturn new Date(date).getTime();\n// }\n// Libs.getMillisecondsFromDataPickerTo = (date, format) => {\n// \tif (null == date || typeof date === \"undefined\") {\n// \t\treturn new Date().getTime() + 86400000;\n// \t}\n// \treturn new Date(date).getTime() + 86400000;\n// }\n\n\n// Libs.getCurrentDDMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year;\n// }\n\n// Libs.getCurrentMMYYYY = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \treturn  month + \"/\" + year;\n// }\n\n// Libs.getCurrentDDMMYYYYHI = function () {\n// \tlet date = new Date();\n// \tlet year = date.getFullYear().toString();\n// \tlet month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n// \tlet day = date.getDate().toString().padStart(2, \"0\");\n// \tlet hour = date.getHours().toString().padStart(2, \"0\");\n// \tlet mi = date.getMinutes().toString().padStart(2, \"0\");\n// \tlet ss = date.getSeconds().toString().padStart(2, \"0\");\n// \treturn day + \"/\" + month + \"/\" + year + \" \" + hour + \":\" + mi;\n// }\n\n\n// \treturn str.replace(REG_ASSIGN_VARIBLE, function ($0, $1) {\n// \t\treturn String(data[$1]);\n// \t});\n// };\n// Libs.printError = (messages) => {\n// \tif (!(messages instanceof Array)) {\n// \t\treturn \"\";\n// \t}\n// \tvar str = \"\";\n// \tif (messages.length > 0) {\n// \t\tfor (var me in messages) {\n// \t\t\tvar message = messages[me];\n// \t\t\tfor (var k in message) {\n// \t\t\t\tstr += message[k];\n// \t\t\t}\n// \t\t}\n// \t}\n\n// \treturn str;\n// }\n\n// Libs.md5 = function (plainText) {\n// \tif (typeof plainText === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.md5(plainText);\n// }\n\n\n// Libs.AESEncrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESEncrypt(plainText, secretKey);\n// }\n\n\n// Libs.AESDecrypt = function (plainText, secretKey) {\n// \tif (typeof plainText === 'undefined' || typeof secretKey === 'undefined') {\n// \t\treturn plainText;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.AESDecrypt(plainText, secretKey);\n// }\n\n\n// /**\n//  * encrypt\n//  * @param plaintext \n//  * @return string\n//  */\n// Libs.encrypt = function (plaintext) {\n// \tif (Libs.isBlank(plaintext)) {\n// \t\treturn plaintext;\n// \t}\n// \tvar CryptoLib = require('./Crypto.js');\n// \treturn CryptoLib.encrypt(plaintext);\n// }\n\n// /**\n//  * Taka Encode\n//  * @param plaintext \n//  * @return string\n//  */\n\n// Libs.takaEncode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n\n// \tvar chars = text.split('');\n// \tlet str = '';\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'id', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.value;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n\n\n// /**\n//  * Taka Decode\n//  * @param plaintext \n//  * @return string\n//  */\n\n// Libs.takaDecode = function (text) {\n// \tif (Libs.isBlank(text)) {\n// \t\treturn text;\n// \t}\n// \tlet chars = [], str = '';\n// \tvar start = 0;\n// \tfor(var i = 0; i< text.length/ 3; i++){\n// \t\tchars.push(text.substr(start, 3));\n// \t\tstart +=3;\n// \t}\n\n// \tfor (var i = 0; i < chars.length; i++) {\n// \t\tvar find = Libs.find(tableCode, 'value', chars[i]);\n// \t\tif(find){\n// \t\t\tstr += find.id;\n// \t\t}\n// \t}\n// \treturn str;\n// }\n\n\n\n\n// Libs.convertEmptyPropToNullProp = function (object) {\n// \tif (typeof object != 'object') return {};\n// \tfor (var key in object) {\n// \t\tobject[key] = (object[key] === '') ? null : object[key];\n// \t}\n// \treturn object;\n// }\n\n\n\n\n\n\n\n// Libs.isInteger = function (value) {\n// \ttry {\n// \t\tvar val = value;\n// \t\tif (typeof val === 'undefined' || val == null) return false;\n// \t\tif (typeof val === 'number') {\n// \t\t\tval = val.toString();\n// \t\t}\n// \t\tval = val.replace(/^-/, '');\n// \t\treturn /^(0|[1-9]\\d*)$/.test(val);\n// \t} catch (err) {\n// \t\tconsole.log(err)\n// \t\treturn false;\n// \t}\n// }\n\n// /**\n//  * Custom css to select tag using for compoent react-select\n//  */\n// Libs.customSelectStyles = {\n// \tplaceholder: styles => ({\n// \t\t...styles,\n// \t\tcolor: '#ccc'\n// \t}),\n// \tcontrol: (styles, { data, isDisabled, isFocused, isSelected }) => {\n// \t\treturn {\n// \t\t\t...styles,\n// \t\t\tminHeight: '34px',\n// \t\t\tborderColor: '#ccc !important',\n// \t\t\tboxShadow: 'unset',\n// \t\t\tbackgroundColor: isDisabled ? '#e9ecef' : '#fff'\n// \t\t}\n// \t},\n// \tclearIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tdropdownIndicator: styles => ({\n// \t\t...styles,\n// \t\tpadding: '4px 6px'\n// \t}),\n// \tcontainer: styles => ({\n// \t\t...styles,\n// \t\t'z-index': '2000',\n// \t\t'position': 'relative'\n// \t})\n// }\n\n// Libs.buildPathValidateMessage = function (path, message) {\n// \tif (typeof path !== 'string' || typeof message !== 'string')\n// \t\treturn null;\n// \tif (path.length <= 0) return null;\n// \tvar validate = {};\n// \tvalidate[path] = message;\n// \treturn validate;\n// }\n\n// /**\n// * @description get content height\n// * If passing classname, height will be calculated by screen height except offset top of first name class\n// * The remaining classnames are deducted for the remaining classname's height\n// * ex: Libs.getContentHeight(\"className1\",\"className2\",...)\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getContentHeight = function () {\n\n// \tvar contentInner = $('#main-container .content-inner');\n// \tif (contentInner === 'undefined' || contentInner == null && contentInner === '') {\n// \t\treturn;\n// \t}\n// \tlet contentInnerHeight = (contentInner.innerHeight() ? contentInner.height() : 0)\n// \tif (!arguments || arguments.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n// \tvar footerGroup = $('.fl-btn-group');\n// \tif (!footerGroup || footerGroup.length <= 0) {\n// \t\treturn contentInnerHeight;\n// \t}\n\n// \tvar footerOffsetTop = $(footerGroup[footerGroup.length - 1]).offset().top * 1\n// \tvar minHeight = null;\n// \tvar elementHeight = 0;\n// \tfor (let i = 0; i < arguments.length; i++) {\n// \t\tlet className = arguments[i];\n// \t\tif (!Libs.isBlank(className) && !Libs.isInteger(className)) {\n// \t\t\t//ưu tiên className\n// \t\t\tvar elements = $('.' + className);\n// \t\t\tif (!elements || elements.length <= 0) {\n// \t\t\t\t//tiến hành lấy theo id\n// \t\t\t\telements = $('#' + className);\n// \t\t\t}\n// \t\t\tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\t\t\telements.each(function () {\n// \t\t\t\t\tif (elementHeight == 0) {\n// \t\t\t\t\t\telementHeight += $(this).offset().top * 1;// - 46;//trừ cho header\n// \t\t\t\t\t} else\n// \t\t\t\t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t\t\t});\n// \t\t\t}\n// \t\t} else {\n// \t\t\tminHeight = className * 1;\n// \t\t}\n// \t}\n\n// \tvar height = 0;\n// \t//height = contentInnerHeight - (elementHeight + 5);\n// \theight = footerOffsetTop - (elementHeight + 10);//mặc định cách footer là 10px\n// \tif (minHeight == null) {\n// \t\tminHeight = 250;\n// \t}\n// \treturn height < minHeight ? minHeight : height;\n// }\n// /**\n// * @description get height by classname\n// * @author Luyen Nguyen 2018-09-24 16:10\n// */\n// Libs.getHeightByClassName = function (className) {\n// \tif (className === 'undefined' || className == null && className === '') {\n// \t\treturn 0;\n// \t}\n// \tvar elementHeight = 0;\n// \tvar elements = $('.' + className);\n// \tif (elements !== 'undefined' && elements != null && elements != '') {\n// \t\telements.each(function () {\n// \t\t\telementHeight += $(this).outerHeight() * 1;\n// \t\t});\n// \t}\n// \treturn elementHeight;\n// }\n// /**\n//  * Round the number after a comma\n//  * @author thanh.bay 2018-09-27 11:24\n//  * @param  {string | float | int} value\n//  * @param  {int} fixed=1 : round to n numbers based on fixed value\n//  */\n// Libs.fixNumber = function (value, fixed = 1) {\n// \tif (typeof value === 'undefined' || value == null) return null;\n// \treturn parseFloat(Number.parseFloat(value).toFixed(fixed));\n// }\n\n\n// /**\n// * @description Get the element index in the array according to the field and value\n// * @author Luyen Nguyen 2018-09-28 16:10\n// * @param  array items\n// * @param String field: object you want to find in the array\n// * @param String value: compare value\n// * @param boolean isIndex: false return index, true: return object\n// * @return int|object\n// */\n// Libs.findIndex = (items, field, value, isIndex) => {\n// \tvar result = -1;\n// \tfor (var i = 0; i < items.length; i++) {\n// \t\tvalue = value + \"\";\n// \t\tvalue = (value) ? value.toLowerCase().trim() : \"\";\n// \t\tvar itemValue = items[i][field] + \"\";\n// \t\tvar itemName = (itemValue) ? itemValue.toLowerCase().trim() : \"\";\n// \t\tif (value == itemName) {\n// \t\t\tif (Libs.isBlank(isIndex)) {\n// \t\t\t\tresult = i;\n// \t\t\t}\n// \t\t\telse {\n// \t\t\t\tresult = items[i];\n// \t\t\t}\n// \t\t}\n// \t}\n// \treturn result;\n// }\n// /**\n// * @description clear date input file\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.clearAllInputFile = function () {\n// \tif ($('input[type=\"file\"]').length) {\n// \t\t$('input[type=\"file\"]').val('');\n// \t}\n// \tif ($('.custom-file-label').length) {\n// \t\t$('.custom-file-label').html('');\n// \t}\n// }\n// /**\n// * @description Default configuration for tinymce\n// * @author Luyen Nguyen 2018-09-28 16:10\n// */\n// Libs.tinymceConfig = function (selector, readonly, height) {\n// \tif (!height) {\n// \t\theight = 150;\n// \t}\n// \tif (!selector) {\n// \t\tselector = 'textarea';\n// \t}\n// \tif (!readonly) {\n// \t\treadonly = false;\n// \t}\n// \treturn {\n// \t\tselector: selector,\n// \t\ttheme: 'modern',\n// \t\treadonly: readonly,\n// \t\theight: height,\n// \t\tplugins: 'print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists textcolor wordcount imagetools contextmenu colorpicker textpattern'\n// \t}\n// }\n\n// /**\n//  * @description Set select selected\n//  * @param {array} data \n//  * @author: thanh.bay\n//  */\n// Libs.setSelectSelected = function (selector, value) {\n// \tif (!selector || selector === 'undefined' && selector == null) return;\n// \t$(selector).val(value);\n// \t$(selector).trigger('change.select2');\n// }\n\n// /**\n//  * @description convert date to string\n//  * @param {array} data \n//  * @author: Minh.Pham\n//  */\n// Libs.convertSQLDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar date = new Date(_date);\n// \tvar result = Libs.convertDateToStr(date, _format);\n// \treturn result;\n// }\n// Libs.convertDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn null;\n// \t}\n// \tvar day = _date.getDate();\n// \tvar month = _date.getMonth();\n// \tvar year = _date.getFullYear() + '';\n// \tmonth += 1;\n// \tif (day < 10) {\n// \t\tday = '0' + day;\n// \t}\n// \tif (month < 10) {\n// \t\tmonth = '0' + month;\n// \t}\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', day);\n// \tresult = result.replace('mm', month);\n// \tresult = result.replace('yyyy', year);\n// \treturn result;\n// }\n// /**\n//  * Get current year\n//  * @author Minh.Pham 2018-11-28\n//  */ \n\n// Libs.getCurrentYear = () => {\n// \tvar year = new Date().getFullYear();\n// \treturn year;\n// }\n// /**\n//  * Get days in month\n//  * @author Minh.Pham 2018-11-28\n//  */ \n// Libs.getDaysOfMonth = (year, month) => {\n// \tvar d = new Date(year, month, 0);\n// \treturn d.getDate();\n// }\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV01 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \t//var month = parseInt(dateItems[monthIndex]);\n// \tvar month = dateItems[monthIndex];\n// \treturn dateItems[yearIndex] + '-' + (month) + '-' + dateItems[dayIndex];\n// }\n\n// /**\n//  * Convert date to YYYYMMDD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStr2DateV02 = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar dayIndex = formatItems.indexOf(\"dd\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \tvar month = parseInt(dateItems[monthIndex]);\n// \treturn dateItems[yearIndex] + (month) + dateItems[dayIndex];\n// }\n\n\n// /**\n//  * Convert date to YYYY-MM-DD\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertStrYearMonth = (date, format, _delimiter) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar formatLowerCase = format.toLowerCase();\n// \tvar formatItems = formatLowerCase.split(_delimiter);\n// \tvar dateItems = date.split(_delimiter);\n// \tvar monthIndex = formatItems.indexOf(\"mm\");\n// \tvar yearIndex = formatItems.indexOf(\"yyyy\");\n// \treturn dateItems[yearIndex] + '-' + dateItems[monthIndex];\n// }\n\n\n// /**\n//  * Convert date to 'YYYY-MM-DD'\n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.convertYYYYMMDDDateToStr = (date, _format) => {\n// \tif (null == date || typeof date === 'undefined' || date == '') {\n// \t\treturn null;\n// \t}\n// \tvar dateItems = date.split('-');\n// \tvar result = _format.toLowerCase();\n// \tresult = result.replace('dd', dateItems[2]);\n// \tresult = result.replace('mm', dateItems[1]);\n// \tresult = result.replace('yyyy', dateItems[0]);\n// \treturn result;\n// }\n\n// /**\n//  * @description Delete special characters\n//  * @param {String} str \n//  * @return string\n//  * @author: minh.pham\n//  */\n// Libs.removeWildcard = (str) => {\n// \tstr = str.replace(/!|@|%|\\^|\\\\|\\/|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'||\\\"|\\&|\\#|\\[|\\]|~|$|_/g, \"\");\n// \treturn str;\n\n// }\n// /**\n//  * @description Search for characters in the string\n//  * @param {array} data \n//  * @return true\n//  * @author: lam.nguyen\n//  */\n// Libs.searchLikeString = (str, strSearch) => {\n// \tif (Libs.isBlank(str)) {\n// \t\treturn false;\n// \t}\n// \tstr = Libs.removeUnicode(str).toLowerCase().trim();\n// \tif (!Libs.isBlank(strSearch)) {\n// \t\tstrSearch = Libs.removeUnicode(strSearch).toLowerCase().trim();\n// \t}\n// \tif (str.indexOf(strSearch) != -1) {\n// \t\treturn true;\n// \t}\n// \treturn false;\n// }\n// /**\n//  * @description Remove duplicate elements in the array\n//  * @param Array arr\n//  * @author: Luyen Nguyen\n//  * @return Array\n//  */\n// Libs.removeDuplicatesSafe = function (arr) {\n// \tvar seen = {};\n// \tvar retArr = [];\n// \tfor (var i = 0; i < arr.length; i++) {\n// \t\tif (!(arr[i] in seen)) {\n// \t\t\tretArr.push(arr[i]);\n// \t\t\tseen[arr[i]] = true;\n// \t\t}\n// \t}\n// \treturn retArr;\n// }\n\n\n// /*\n//  * call await method\n//  * ex: let users = await Libs.callWithPromise((resolve, reject)=>{\n//  * UserService.instance.getDropDownList({}, (arrData) => {\n//  * \t\tif(arrData){ resolve(arrData)}\n//  * \t\telse{ reject(false)}\n//  *    }, false);\n//  * });\n//  * @param {func} func \n//  */\n// Libs.callWithPromise = (func) => {\n// \treturn new Promise(function (resolve, reject) {\n// \t\tfunc(resolve, reject)\n// \t})\n// }\n\n\n\n\n\n\n// /**\n// * Auto generate key from name\n// *\n// * @param {string} name\n// * @author:  minh.pham 2018-10-20 15:37:34 \n// * */\n// Libs.generateKeyFromName = function (name) {\n// \tif (Libs.isBlank(name)) return \"\";\n// \t//replace all wildchar\n// \tvar regex1 = /\\w+/;\n\n// \t// const regex = new RegExp(\"([a-zA-Z0-9 ]+)\", \"ig\");\n// \t// let myArray = regex.exec(name);\n// \t// if(myArray!=null){\n// \t// \tname = myArray.join(\"\");\n// \t// }\n// \tname = Libs.removeUnicode(name);\n// \tname = Libs.removeWildcard(name);\n// \tlet nameArr = name.split(\" \");\n// \tif (nameArr.length <= 1) {\n// \t\treturn nameArr[0].substring(0, 4).toUpperCase();\n// \t}\n// \tlet newName = \"\";\n// \tfor (let i = 0; i < nameArr.length; i++) {\n// \t\tnewName += nameArr[i].substring(0, 1).toUpperCase();\n// \t}\n// \treturn newName;\n// }\n\n// Libs.groupByProps = function (objectArray, property) {\n// \treturn objectArray.reduce(function (acc, obj) {\n// \t\tvar key = obj[property];\n// \t\tif (!acc[key]) {\n// \t\t\tacc[key] = [];\n// \t\t}\n// \t\tacc[key].push(obj);\n// \t\treturn acc;\n// \t}, {});\n// }\n\n// /**\n//  * \n//  * @param {*} inputDate format dd/MM/yyyy\n//  * @returns string yyyy-MM-dd\n//  */\n// Libs.inputDateToDBDate = function (inputDate) {\n// \tif (inputDate === undefined || inputDate == null || inputDate === '' || typeof inputDate !== 'string') {\n// \t\treturn null;\n// \t}\n// \tvar division = inputDate.split('/');\n// \tif (division <= 1) return null;\n// \tif (inputDate.length != 10) return null;\n// \tlet day = inputDate.substring(0, 2);\n// \tlet month = inputDate.substring(3, 5);\n// \tlet year = inputDate.substring(6, 10);\n// \treturn year + \"-\" + month + \"-\" + day;\n// }\n// /**\n//  * Display toast message\n//  * @param String message: content\n//  * @param String type: \"error\": red background, \"success\": blue background\n//  * @returns {*}\n//  */\n// Libs.toast = function (message, type, pos = \"top-right\") {\n// \tlet posistion = \"top-right\";\n// \tif (typeof pos != 'undefined') {\n// \t\tposistion = pos;\n// \t}\n// \tswitch (type) {\n// \t\tcase \"info\":\n// \t\t\ttoast.info(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"error\":\n// \t\t\ttoast.error(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t\tcase \"warn\":\n// \t\t\ttoast.warn(message, {\n// \t\t\t\tposition: posistion,\n// \t\t\t\tautoClose: true,\n// \t\t\t\thideProgressBar: false,\n// \t\t\t\tcloseOnClick: true,\n// \t\t\t\tpauseOnHover: true,\n// \t\t\t\tdraggable: true,\n// \t\t\t\tdraggablePercent: 10\n// \t\t\t});\n// \t\t\tbreak;\n// \t}\n\n// }\n\n\n// /**\n//  * Image url from API\n//  * @author thanh.bay 2018-10-30\n//  * @param  {string} file_path\n//  * @param  {string} headquarter_id\n//  */\n// Libs.linkShowImageAction = function (file_path, headquarter_id) {\n// \tlet host = Libs.baseUrl();\n// \tlet url = Constants.URL.SYSTEM.SHOW_IMAGE;\n// \tfile_path = encodeURI(file_path);\n// \treturn host + \"/\" + url + \"?file_path=\" + file_path + \"&headquarter_id=\" + headquarter_id;\n// }\n// Libs.convertAllFormatDateToStr = (_date, _format) => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tif (_date.includes('/')) {\n// \t\treturn _date;\n// \t}\n// \tlet date = moment(_date);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(_format.toUpperCase());\n// }\n// /**\n//  * Convert Data to DB\n//  */\n// Libs.convertAllFormatDate = (_date, from_format = \"DD/MM/YYYY hh:mm\", to_format = \"YYYY-MM-DD hh:mm\") => {\n// \tif (null == _date || typeof _date === 'undefined' || _date == '') {\n// \t\treturn '';\n// \t}\n// \tlet date = moment(_date, from_format);\n// \tif (!date._isValid) {\n// \t\treturn _date;\n// \t}\n// \treturn date.format(to_format);\n// }\n\n// /**\n//  * Validate date 0000-00-00 \n//  * @author Minh.Pham 2018-10-20\n//  */\n// Libs.validateDateNull = (date) => {\n// \tlet arrFormat = [\"0000-00-00\", \"0000/00/00\", \"0000-00-00 00:00:00\",\"0000/00/00 00:00:00\", \"00/00/0000\", \"00-00-0000\", \"00/00/0000 00:00:00\", \"00-00-0000 00:00:00\"];\n// \tfor (let i = 0; i < arrFormat.length; i++) {\n// \t\tif(date == arrFormat[i]){\n// \t\t\treturn false;\n// \t\t}\n// \t}\n// \treturn true;\n// }\n\n\n\n\n\n// /**\n//  * @description synchronize data\n//  * @author LuyenNguyen 2018-11-03\n//  * @param oldItems\n//  * @param newItems\n//  * @param field_key_name\n//  * @param unUpdateFields ex: \"field1,field2,...,fieldn\"\n//  * @returns {Array} \n//  */\n// Libs.synchronizeData = function (oldItems, newItems, field_key_name, unUpdateFields) {\n// \tif (!oldItems)\n// \t\toldItems = [];\n// \tif (!newItems) {\n// \t\treturn;\n// \t}\n// \tvar deletedList = [];\n// \tvar unUpdateFieldArr = null;\n// \tif (unUpdateFields && unUpdateFields != \"\") {\n// \t\tunUpdateFieldArr = unUpdateFields.split(\",\");\n// \t}\n// \t// add and update new item\n// \tnewItems.some(function (el) {\n// \t\tvar new_key_val = el[field_key_name];\n// \t\tvar oldItem = Libs.findIndex(oldItems, field_key_name, new_key_val, true);\n// \t\tif (oldItem == -1) {\n// \t\t\toldItems.push(el);\n// \t\t} else {\n// \t\t\tfor (var key in el) {\n// \t\t\t\tvar is_update = true;\n// \t\t\t\tif (unUpdateFieldArr && unUpdateFieldArr.length > 0\n// \t\t\t\t\t&& unUpdateFieldArr.indexOf(key) >= 0) {\n// \t\t\t\t\tis_update = false;\n// \t\t\t\t}\n// \t\t\t\tif (is_update) {\n// \t\t\t\t\toldItem[key] = el[key];\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t});\n// \t// remove item not in new items\n// \tfor (var index = oldItems.length - 1; index >= 0; index--) {\n// \t\tvar item = oldItems[index];\n// \t\tvar new_key_val = item[field_key_name];\n// \t\t// update\n// \t\tvar newItem = Libs.findIndex(newItems, field_key_name, new_key_val, true);\n// \t\tif (newItem == -1) {\n// \t\t\tdeletedList.push(item);\n// \t\t\toldItems.splice(index, 1);\n// \t\t}\n// \t}\n// \treturn deletedList;\n// };\n\n// /**\n//  * @description Check editor data\n//  * @author LuyenNguyen 2018-11-04\n//  * @param string str\n//  * @returns boolean\n//  */\n// Libs.checkEditorEmpty = function (str) {\n// \tif (Libs.isBlank(str)) return false;\n// \tstr = str.replace(/<\\/?p[^>]*>/g, \"\");\n// \tstr = str.replace(/\\s|\\&nbsp;|\\(|\\)|\\（|\\）/g, '');\n// \tif (!str) return false;\n// \treturn true;\n// }\n// /**\n//  * @description Check onClick or doubleClick\n//  * @author LuyenNguyen 2018-11-04\n//  * @param func onClick\n//  * @param func onDblClick\n//  * @param int delay: time delay\n//  */\n// Libs.getClickHandler = function (onClick, onDblClick, delay) {\n// \tvar timeoutID = null;\n// \tdelay = delay || 250;\n// \treturn function (event) {\n// \t\tif (!timeoutID) {\n// \t\t\ttimeoutID = setTimeout(function () {\n// \t\t\t\tonClick(event);\n// \t\t\t\ttimeoutID = null\n// \t\t\t}, delay);\n// \t\t} else {\n// \t\t\ttimeoutID = clearTimeout(timeoutID);\n// \t\t\tonDblClick(event);\n// \t\t}\n// \t};\n// }\n// Libs.padLeft = function (str, number, digit) {\n// \treturn Array(number - String(str).length + 1).join(digit || '0') + str;\n// }\n\n// /**\n// * @description Rounding\n//  * (0.55 -> 0.6, 0.54 -> 0.5)\n//  * @author LuyenNguyen 2018-11-04\n//  */\n// Libs.round = function (number, decimals) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \treturn Number((Math.round(number + \"e\" + decimals) + \"e-\" + decimals));\n// };\n// Libs.getCurrentDate = function (format) {\n// \tformat = (!format || typeof format !== 'string') ? 'DD/MM/YYYY' : format;\n// \treturn moment().format(format);\n// }\n// /**\n//  * Add Days\n//  */\n// Libs.addDays = function (date, days) {\n// \tvar result = new Date(date);\n// \tresult.setDate(result.getDate() + days);\n// \treturn result;\n// }\n\n// /**\n//  * Valid date checks\n//  * @author Minh.Pham 2019-02-19\n//  * @param from_date  từ ngày\n//  * @param format định dạng kiểu ngày truyền vào\n//  * @returns bool\n//  */\n// Libs.isValidDate = function (from_date, format) {\n// \tfrom_date = moment(from_date, format.toUpperCase());\n// \treturn from_date.isValid();\n\n// }\n\n// /**\n// * @description Gọi lại sự kiện sau khi gọi collapse cho element bootstrap\n// * @param function callback: nhận một tham số là status nếu true collapse là show và ngược lại\n// * @param string selector: tên id hoặc class\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.collapseCallback = function (func, selector) {\n// \tif (Libs.isBlank(selector)) {\n// \t\tselector = $('#group-advance-search');\n// \t}\n// \telse {\n// \t\tselector = $('.' + selector);\n// \t\tif (!selector || selector.length <= 0) {\n// \t\t\tselector = $('#' + selector);\n// \t\t}\n// \t}\n// \tif (!selector || selector.length <= 0 || !func || typeof func !== 'function') return;\n// \tselector.on('hidden.bs.collapse', function () {\n// \t\tfunc(false);\n// \t});\n// \tselector.on('show.bs.collapse', function () {\n// \t\tfunc(true);\n// \t});\n// }\n// /**\n// * @description Thêm class để tính lại chiều cao của màn hình bên phải luôn full trong trường hợp không có button dưới footer\n// * @param boolean|string isRemove: Nếu có giá trị sẽ remove class content-full và trả về trạng thái ban đầu\n// * @author Luyen Nguyen 2018-11-23\n// */\n// Libs.addClassContentFull = function (isRemove) {\n// \tlet content = $('#main-container>.content');\n// \tif (!content || content.length <= 0) return;\n// \tif (!Libs.isBlank(isRemove)) {\n// \t\tcontent.removeClass('content-full');\n// \t}\n// \telse {\n// \t\tcontent.addClass('content-full');\n// \t}\n// }\n// /**\n// * @description Làm tròn số\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param decimal số thập phân\n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundNumber = function (number, decimals = 0, type = 0) {\n// \tif (decimals == null)\n// \t\tdecimals = 0;\n// \ttype = type * 1;\n// \tswitch(type){\n// \t\tcase -1:\n// \t\t\treturn roundTo.down(number, decimals);\n// \t\tcase 1:\n// \t\t\treturn roundTo.up(number, decimals);\n// \t\tdefault:\n// \t\t\treturn roundTo(number, decimals);\n// \t}\n// };\n// /**\n// * @description Làm tròn số theo format\n// * @author Minh.Pham 2018-12-04\n// * @param number giá trị cần làm tròn\n// * @param format #,###.## \n// * @type cách làm tròn: -1 làm tròn xuống, 0 làm tòn tự nhiên, 1: làm tròn lên\n//  */\n// Libs.roundByFormat = function (number, format, type = 0) {\n// \treturn Libs.roundNumber(number, Libs.getDecimalsOfFomat(format), type);\n// };\n\n// /**\n// * @description Lấy số decimals(phần thập phân) của format\n// * @author Minh.Pham 2018-12-04\n// * @param format #,###.## \n//  */\n// Libs.getDecimalsOfFomat = function (format) {\n// \tlet decimals = 0;\n// \tif(!Libs.isBlank(format)){\n// \t\ttry{\n// \t\t\tlet arr = format.split('.');\n// \t\t\tif(arr.length >= 2){\n// \t\t\t\tdecimals = arr[arr.length -1].length;\n// \t\t\t}\n// \t\t}catch(ex){\n\n// \t\t}\n// \t}\n// \treturn decimals;\n// };\n// /**\n// * @description insert 1 item tới array\n// * ex: insertAt(arr, 1, \"x\", \"y\", \"z\");\n// * @author TichNguyen 2018-12-04\n// * @param array mãng\n// * @param index insert tại index \n//  */\n// Libs.insertAt=function(array, index) {\n//     var arrayToInsert = Array.prototype.splice.apply(arguments, [2]);\n//     return Libs.insertArrayAt(array, index, arrayToInsert);\n// };\n// /**\n// * @description insert 1 array to array\n// * ex: var arrToInsert = [\"x\", \"y\", \"z\"];\n// * \t  insertArrayAt(arr, 1, arrToInsert);\n// * @author TichNguyen 2018-12-04\n// * @param array\n// * @param index insert tại index \n// * @param arrayToInsert\n//  */\n// Libs.insertArrayAt=function(array, index, arrayToInsert) {\n// \tif(!arrayToInsert || arrayToInsert.length<=0) return array;\n//     Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n//     return array;\n// }\n\n// /**\n//  * Move the element in the array\n//  */\n// Libs.arrayMove = function(arr, old_index, new_index) {\n//     if (new_index >= arr.length) {\n//         var k = new_index - arr.length + 1;\n//         while (k--) {\n//             arr.push(undefined);\n//         }\n//     }\n//     arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n//     return arr; // for testing\n// };\n\n// /**\n//  * Hàm resize image \n//  * @param {image}: Image() hình cần resize\n//  * @param {maxWidth}: decimal chiều rộng tối đa\n//  * @param {maxHeight}: decimal chiều cao tối đa\n//  * @param {quality}: decimal chất lượng hình từ 0 => 1\n//  */\n// Libs.resizeImage = function(image, maxWidth, maxHeight, quality) {\n//     var canvas = document.createElement('canvas');\n\n//     var width = image.width;\n//     var height = image.height;\n\n//     if (width > height) {\n//         if (width > maxWidth) {\n//             height = Math.round(height * maxWidth / width);\n//             width = maxWidth;\n//         }\n//     } else {\n//         if (height > maxHeight) {\n//             width = Math.round(width * maxHeight / height);\n//             height = maxHeight;\n//         }\n//     }\n\n//     canvas.width = width;\n//     canvas.height = height;\n\n//     var ctx = canvas.getContext(\"2d\");\n//     ctx.drawImage(image, 0, 0, width, height);\n//     return canvas.toDataURL(\"image/jpeg\", quality);\n// }\n\n// /**\n//  * @description Check the array data \n//  * @param Array arr\n//  * @author: Minh.Pham\n//  * @return boolean\n//  */\n// Libs.isArray = function (arr) {\n// \tif (arr == null) return true;\n// \tif (!Array.isArray(arr)) return false;\n// \treturn true;\n// }\n\n// String.prototype.format = function() {\n// \ta = this;\n// \tfor (k in arguments) {\n// \t  a = a.replace(\"{\" + k + \"}\", arguments[k])\n// \t}\n// \treturn a\n//   }\n// Libs.getMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n//     while (date <= endDate)\n//     {\n//         var stringDate = monthNameList[date.getMonth()] + \" \" + date.getFullYear();\n\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n\n//         resultList.push({\n//             str:stringDate,\n//             first:firstDay,\n//             last:lastDay,\n//         });\n//         date.setMonth(date.getMonth() + 1);\n//     }\n\n//     return resultList;\n// };\n// Libs.getStringMonths = function(startDate, endDate){\n//     var resultList = [];\n//     var date = new Date(startDate);\n//     var endDate = new Date(endDate);\n//     var monthNameList = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n//     while (date <= endDate)\n//     {\n// \t\tvar stringDate = monthNameList[date.getMonth()];\n\n//         //get first and last day of month\n//         var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n//         var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n// \t\tresultList.push(stringDate)\n//         date.setMonth(date.getMonth() + 1);\n//     }\n\n//     return resultList;\n// };\n\n// /**\n// * @description get from_date, to_date from year ago to current year\n//  * @author Minh.Pham 2019-06-21\n//  */\n// Libs.getParamDayByYear =  function(numerOfYear, format){\n// \tlet currentDate = moment().toDate();\n// \tlet month = currentDate.getMonth();\n// \tlet day = currentDate.getDate();\n// \tlet year  = currentDate.getFullYear();\n// \treturn {\n// \t\tfrom_date: moment().date(1).month(month).year(year - numerOfYear).format(format),\n// \t\tto_date: moment().date(day).month(month).year(year).format(format),\n// \t};\n// }\n\n// // \n// /**\n// * @description date array from start_date -> end_date\n//  * @author Long.Pham 2019-06-21\n//  * @param start,  end new Date('2019-12-12')\n//  */\n// Libs.getDateArray =  function(start, end){\n// \tvar arr = new Array();\n// \tvar dt = new Date(start);\n//     while (dt <= end) {\n//         arr.push(moment(new Date(dt)).format('DD/MM/YYYY'));\n//         dt.setDate(dt.getDate() + 1);\n//     }\n//     return arr;\n// }\n\n\n\nexport default Libs;\n"]},"metadata":{},"sourceType":"module"}