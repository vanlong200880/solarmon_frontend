{"ast":null,"code":"import ConfigJsx from './Config.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport MainConfigService from '../../../../../services/MainConfigService';\n\nclass Config extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleDeviceInputChange = index => {\n      var {\n        dataListDevice,\n        curItem: curItem\n      } = this.state;\n      if (!Libs.isArrayData(dataListDevice)) return;\n      var item = dataListDevice[index];\n      if (Libs.isObjectEmpty(item)) return;\n\n      for (var i = 0; i < dataListDevice.length; i++) {\n        dataListDevice[i].is_checked = 0;\n      }\n\n      dataListDevice[index].is_checked = 1;\n      this.setState({\n        dataListDevice: dataListDevice,\n        itemDevice: item,\n        curItem: curItem\n      });\n    };\n\n    this.onTabSetting = type => {\n      var {\n        curItem\n      } = this.state;\n      curItem.type = type;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.reloadData = () => {\n      this.forceUpdate();\n    };\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n\n      if (Libs.isObjectEmpty(item)) {\n        curItem.type = 2;\n      } else {\n        var value = item.value;\n        curItem[name] = value;\n      }\n\n      self.setState({\n        curItem: curItem\n      });\n    };\n\n    this.state = {\n      hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n      curItem: {\n        type: 2\n      },\n      itemDevice: {},\n      dataListDevice: [],\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      }\n    };\n    this.jsxTemplate = ConfigJsx;\n  }\n\n  componentDidMount() {\n    this.getListAllDeviceByProject();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let self = this;\n\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      this.setState({\n        hash_id: nextProps.match.params.id\n      }, () => {\n        self.getListAllDeviceByProject();\n      });\n    }\n  }\n\n  getListAllDeviceByProject() {\n    let self = this;\n    let params = {\n      hash_id: this.state.hash_id,\n      id_employee: this.employee.id_employee,\n      id_language: this.employee.id_language\n    };\n    MainConfigService.instance.getListAllDeviceByProject(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataListDevice: data,\n          itemDevice: {}\n        });\n      } else {\n        self.setState({\n          dataListDevice: [],\n          itemDevice: {}\n        });\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Config);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModulePrivate/Config/Config.js"],"names":["ConfigJsx","BaseComponent","Libs","withTranslation","Constants","MainConfigService","Config","constructor","props","context","handleDeviceInputChange","index","dataListDevice","curItem","state","isArrayData","item","isObjectEmpty","i","length","is_checked","setState","itemDevice","onTabSetting","type","reloadData","forceUpdate","handleDropdownChange","name","self","value","hash_id","params","id","dataList","searchParam","limit","COMMON","LIMIT","offset","jsxTemplate","componentDidMount","getListAllDeviceByProject","componentWillReceiveProps","nextProps","match","id_employee","employee","id_language","instance","data","total_row","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ConfigJsx from './Config.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport MainConfigService from '../../../../../services/MainConfigService';\nclass Config extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n            curItem: {\n                type: 2\n            },\n            itemDevice: {},\n\n            dataListDevice: [],\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n        };\n\n\n        this.jsxTemplate = ConfigJsx;\n\n    }\n\n    componentDidMount() {\n        \n        this.getListAllDeviceByProject();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.setState({\n                hash_id: nextProps.match.params.id\n            }, () => {\n                self.getListAllDeviceByProject();\n            });\n        }\n    }\n\n    handleDeviceInputChange = (index) => {\n        var { dataListDevice, curItem: curItem } = this.state;\n        if (!Libs.isArrayData(dataListDevice)) return;\n        var item = dataListDevice[index];\n        if (Libs.isObjectEmpty(item)) return;\n        for (var i = 0; i < dataListDevice.length; i++) {\n            dataListDevice[i].is_checked = 0;\n        }\n        dataListDevice[index].is_checked = 1;\n        this.setState({ dataListDevice: dataListDevice, itemDevice: item, curItem: curItem })\n    }\n    getListAllDeviceByProject() {\n        let self = this;\n        let params = {\n            hash_id: this.state.hash_id,\n            id_employee: this.employee.id_employee,\n            id_language: this.employee.id_language\n        };\n\n        MainConfigService.instance.getListAllDeviceByProject(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListDevice: data,\n                    itemDevice: {}\n                });\n            } else {\n                self.setState({\n                    dataListDevice: [],\n                    itemDevice: {}\n                });\n            }\n            self.forceUpdate();\n        });\n    }\n    onTabSetting = (type) => {\n        var { curItem } = this.state;\n        curItem.type = type;\n        this.setState({\n            curItem: curItem\n        })\n    }\n\n    reloadData = () => {\n        this.forceUpdate();\n    }\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item)) {\n            curItem.type = 2;\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Config)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}