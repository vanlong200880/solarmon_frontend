{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport OnOffPopupJsx from './OnOffPopup.jsx';\nimport MainDeviceService from '../../../../../services/MainDeviceService';\n\nclass OnOffPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curItem: this.props.curItem // dataDeviceType: [],\n      // dataList: [],\n      // show_tab: this.props.show_tab,\n      // dataDeviceHardware: []\n\n    };\n    this.jsxTemplate = OnOffPopupJsx;\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/09/2021\n   */\n\n\n  componentDidMount() {// this.getDataListHardware();\n  }\n\n  async onClickOnOffAction() {\n    let params = Object.assign({}, this.state.curItem),\n        self = this;\n    params.status = params.status == 1 ? 0 : 1;\n    params.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n    MainDeviceService.instance.updateOnOff(params, function (status, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseOnOff(true);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  } // onClickShowTab = (index) => {\n  //     this.setState({\n  //         show_tab: index\n  //     })\n  // }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  // getDataListHardware() {\n  //     let self = this;\n  //     var { curItem } = this.state;\n  //     let params = Object.assign({}, curItem);\n  //     params.id_language = this.employee.id_language;\n  //     params.id_employee = this.employee.id_employee;\n  //     ClientDeviceService.instance.getDataListHardware(params, (data, total_row) => {\n  //         if (Libs.isArrayData(data)) {\n  //             curItem.last_communication = data[0].last_communication;\n  //             curItem.last_attempt = data[0].last_attempt;\n  //             self.setState({\n  //                 dataDeviceHardware: data,\n  //                 curItem: curItem\n  //             });\n  //         } else {\n  //             self.setState({\n  //                 dataDeviceHardware: []\n  //             });\n  //         }\n  //     });\n  // }\n  // /**\n  //  * @description reload data\n  //  * @author Long.Pham 19/09/2021\n  //  * @param {int} index\n  //  */\n  // reloadLatestData() {\n  //     let self = this;\n  //     self.getDataListHardware();\n  // }\n\n\n}\n\nexport default OnOffPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModulePrivate/Device/OnOffPopup.js"],"names":["BaseComponent","Libs","OnOffPopupJsx","MainDeviceService","OnOffPopup","constructor","props","state","curItem","jsxTemplate","componentDidMount","onClickOnOffAction","params","Object","assign","self","status","updated_by","employee","first_name","last_name","instance","updateOnOff","msg","toast","onClickCloseOnOff","isBlank"],"mappings":"AACA,OAAOA,aAAP,MAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;;AACA,MAAMC,UAAN,SAAyBJ,aAAzB,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OADX,CAET;AACA;AACA;AACA;;AALS,KAAb;AAQA,SAAKC,WAAL,GAAmBP,aAAnB;AACH;AACD;AACJ;AACA;AACA;;;AACIQ,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAEuB,QAAlBC,kBAAkB,GAAG;AACvB,QAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKP,KAAL,CAAWC,OAA7B,CAAb;AAAA,QAAoDO,IAAI,GAAG,IAA3D;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgBJ,MAAM,CAACI,MAAP,IAAiB,CAAjB,GAAqB,CAArB,GAAyB,CAAzC;AACAJ,IAAAA,MAAM,CAACK,UAAP,GAAoB,KAAKC,QAAL,CAAcC,UAAd,GAA2B,GAA3B,GAAiC,KAAKD,QAAL,CAAcE,SAAnE;AACAjB,IAAAA,iBAAiB,CAACkB,QAAlB,CAA2BC,WAA3B,CAAuCV,MAAvC,EAA+C,UAAUI,MAAV,EAAkBO,GAAlB,EAAuB;AAClE,UAAIP,MAAJ,EAAY;AACRD,QAAAA,IAAI,CAACS,KAAL,CAAWD,GAAX,EAAgB,MAAhB;AACAR,QAAAA,IAAI,CAACT,KAAL,CAAWmB,iBAAX,CAA6B,IAA7B;AACH,OAHD,MAGO,IAAI,CAACxB,IAAI,CAACyB,OAAL,CAAaH,GAAb,CAAL,EAAwB;AAC3BR,QAAAA,IAAI,CAACS,KAAL,CAAWD,GAAX,EAAgB,OAAhB;AACH;AACJ,KAPD,EAOG,IAPH;AAQH,GAjCkC,CAmCnC;AACA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA3EmC;;AA8EvC,eAAenB,UAAf","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport OnOffPopupJsx from './OnOffPopup.jsx';\nimport MainDeviceService from '../../../../../services/MainDeviceService';\nclass OnOffPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            // dataDeviceType: [],\n            // dataList: [],\n            // show_tab: this.props.show_tab,\n            // dataDeviceHardware: []\n        }\n\n        this.jsxTemplate = OnOffPopupJsx;\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/09/2021\n     */\n    componentDidMount() {\n        // this.getDataListHardware();\n    }\n\n    async onClickOnOffAction() {\n        let params = Object.assign({}, this.state.curItem), self = this;\n        params.status = params.status == 1 ? 0 : 1;\n        params.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n        MainDeviceService.instance.updateOnOff(params, function (status, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseOnOff(true);\n            } else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n\n    // onClickShowTab = (index) => {\n    //     this.setState({\n    //         show_tab: index\n    //     })\n    // }\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    // getDataListHardware() {\n    //     let self = this;\n    //     var { curItem } = this.state;\n    //     let params = Object.assign({}, curItem);\n    //     params.id_language = this.employee.id_language;\n    //     params.id_employee = this.employee.id_employee;\n    //     ClientDeviceService.instance.getDataListHardware(params, (data, total_row) => {\n    //         if (Libs.isArrayData(data)) {\n    //             curItem.last_communication = data[0].last_communication;\n    //             curItem.last_attempt = data[0].last_attempt;\n    //             self.setState({\n    //                 dataDeviceHardware: data,\n    //                 curItem: curItem\n    //             });\n\n    //         } else {\n    //             self.setState({\n    //                 dataDeviceHardware: []\n    //             });\n    //         }\n    //     });\n    // }\n\n    // /**\n    //  * @description reload data\n    //  * @author Long.Pham 19/09/2021\n    //  * @param {int} index\n    //  */\n    // reloadLatestData() {\n    //     let self = this;\n    //     self.getDataListHardware();\n    // }\n\n}\nexport default OnOffPopup;"]},"metadata":{},"sourceType":"module"}