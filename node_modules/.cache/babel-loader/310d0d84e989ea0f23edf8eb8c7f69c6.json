{"ast":null,"code":"import _regeneratorRuntime from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/Data/sources/solarmon_production/solarmon_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import PVModelSettingJsx from'./PVModelSetting.jsx';import BaseComponent from'../../../../../BaseComponent';import Libs from'../../../../../../utils/Libs';import{withTranslation}from'react-i18next';import Constants from'../../../../../../utils/Constants';import MainConfigService from'../../../../../../services/MainConfigService';import{jsx as _jsx}from\"react/jsx-runtime\";var PVModelSetting=/*#__PURE__*/function(_BaseComponent){_inherits(PVModelSetting,_BaseComponent);var _super=_createSuper(PVModelSetting);function PVModelSetting(props,context){var _this;_classCallCheck(this,PVModelSetting);_this=_super.call(this,props,context);_this.handleDropdownChange=function(item,name){var self=_assertThisInitialized(_this);var curItem=self.state.curItem;if(Libs.isObjectEmpty(item)){if(name=='poa_irradiance'){curItem.poa_irradiance=null;}else if(name=='panel_temperature'){curItem.panel_temperature=null;}}else{var value=item.value;curItem[name]=value;}self.setState({curItem:curItem});};_this.state={curItem:{},itemDevice:_this.props.itemDevice,dataListSensor:[]};_this.jsxTemplate=PVModelSettingJsx;_this.handleDropdownChange=_this.handleDropdownChange.bind(_assertThisInitialized(_this));return _this;}_createClass(PVModelSetting,[{key:\"componentDidMount\",value:function componentDidMount(){this.getListDeviceSensor();this.getDeviceDetail();}},{key:\"getListDeviceSensor\",value:function getListDeviceSensor(){var self=this;var params={hash_id:this.state.hash_id};MainConfigService.instance.getListDeviceSensor(params,function(data,total_row){if(Libs.isArrayData(data)){self.setState({dataListSensor:data});}else{self.setState({dataListSensor:[]});}});}},{key:\"getDeviceDetail\",value:function getDeviceDetail(){var self=this,itemDevice=this.props.itemDevice;var params={id:itemDevice.id,id_employee:this.employee.id_employee,id_language:this.employee.id_language};MainConfigService.instance.getDeviceDetail(params,function(data){if(data){self.setState({curItem:data});}},false);}},{key:\"onSave\",value:function(){var _onSave=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var self,params;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:self=this;params=Object.assign({},this.state.curItem);params.screen_mode=Constants.SCREEN_MODE.EDIT;params.id_language=this.employee.id_language;MainConfigService.instance.updateDevice(params,function(status,data,msg){if(status){self.toast(msg,\"info\");}else if(data){self.setValidateMessage(data);}else if(!Libs.isBlank(msg)){self.toast(msg,\"error\");}},true);case 5:case\"end\":return _context.stop();}}},_callee,this);}));function onSave(){return _onSave.apply(this,arguments);}return onSave;}()},{key:\"render\",value:function render(){var itemDevice=this.state.itemDevice;switch(parseInt(itemDevice.id_device_group)){case 18:// innvert \ncase 19:// innvert\ncase 20:// innvert\ncase 21:// 6 string \ncase 22:// innvert\ncase 28:// 12 string\ncase 29:// emeter\ncase 30:// emeter\nreturn this.jsxTemplate.call(this);default:return Libs.isObjectEmpty(itemDevice)?/*#__PURE__*/_jsx(\"div\",{className:\"data-empty\",children:\"Device is not selected \"}):/*#__PURE__*/_jsx(\"div\",{className:\"data-empty\",children:\"There is no configuration for this device\"});}}}]);return PVModelSetting;}(BaseComponent);var HighOrderComponentTranslated=withTranslation('common')(PVModelSetting);export default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModulePrivate/Config/PVModelSetting/PVModelSetting.js"],"names":["PVModelSettingJsx","BaseComponent","Libs","withTranslation","Constants","MainConfigService","PVModelSetting","props","context","handleDropdownChange","item","name","self","curItem","state","isObjectEmpty","poa_irradiance","panel_temperature","value","setState","itemDevice","dataListSensor","jsxTemplate","bind","getListDeviceSensor","getDeviceDetail","params","hash_id","instance","data","total_row","isArrayData","id","id_employee","employee","id_language","Object","assign","screen_mode","SCREEN_MODE","EDIT","updateDevice","status","msg","toast","setValidateMessage","isBlank","parseInt","id_device_group","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import PVModelSettingJsx from './PVModelSetting.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport MainConfigService from '../../../../../../services/MainConfigService';\n\nclass PVModelSetting extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            curItem: {},\n            itemDevice: this.props.itemDevice,\n            dataListSensor: []\n\n        };\n\n        this.jsxTemplate = PVModelSettingJsx;\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getListDeviceSensor();\n        this.getDeviceDetail();\n    }\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item)) {\n            if (name == 'poa_irradiance') {\n                curItem.poa_irradiance = null;\n            } else if (name == 'panel_temperature') {\n                curItem.panel_temperature = null;\n            }\n\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n    getListDeviceSensor() {\n        let self = this;\n        let params = {\n            hash_id: this.state.hash_id\n        };\n\n        MainConfigService.instance.getListDeviceSensor(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListSensor: data\n                });\n            } else {\n                self.setState({\n                    dataListSensor: []\n                });\n            }\n        });\n    }\n\n    getDeviceDetail() {\n        let self = this, itemDevice = this.props.itemDevice;\n        var params = {\n            id: itemDevice.id,\n            id_employee: this.employee.id_employee,\n            id_language: this.employee.id_language\n        };\n\n        MainConfigService.instance.getDeviceDetail(params, data => {\n            if (data) {\n                self.setState({\n                    curItem: data\n                });\n            }\n        }, false);\n\n    }\n\n\n    async onSave() {\n        var self = this;\n        var params = Object.assign({}, this.state.curItem);\n        params.screen_mode = Constants.SCREEN_MODE.EDIT;\n        params.id_language = this.employee.id_language;\n\n        MainConfigService.instance.updateDevice(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n\n    render() {\n        var { itemDevice } = this.state;\n        switch (parseInt(itemDevice.id_device_group)) {\n            case 18: // innvert \n            case 19: // innvert\n            case 20: // innvert\n            case 21: // 6 string \n            case 22: // innvert\n            case 28: // 12 string\n            case 29: // emeter\n            case 30: // emeter\n                return this.jsxTemplate.call(this);\n            default:\n                return Libs.isObjectEmpty(itemDevice) ? <div className=\"data-empty\">Device is not selected </div> : <div className=\"data-empty\">There is no configuration for this device</div>;\n        }\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(PVModelSetting)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}