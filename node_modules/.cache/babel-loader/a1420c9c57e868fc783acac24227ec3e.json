{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/sources/solars/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './scss/layouts/dashboard/App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport vi from './translations/vi/common.json';\nimport en from './translations/en/common.json';\nimport Constants from './utils/Constants';\nimport Libs from './utils/Libs';\nimport CMSHttp from './utils/CMSHttp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nglobal.CMSHttp = CMSHttp;\nlet info = localStorage.getItem(Constants.COMMON.EMPLOYEE_INFO);\nlet employeeInfo = JSON.parse(Libs.base64Decrypt(info));\ni18next.init({\n  interpolation: {\n    escapeValue: false\n  },\n  lng: Libs.isBlank(employeeInfo) ? 'en' : employeeInfo.lang,\n  resources: {\n    vi: {\n      common: vi\n    },\n    en: {\n      common: en\n    }\n  }\n});\nexport default i18next;\nReactDOM.render(\n/*#__PURE__*/\n// <React.StrictMode>\n_jsxDEV(I18nextProvider, {\n  i18n: i18next,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this) // </React.StrictMode>\n, document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","serviceWorker","I18nextProvider","i18next","vi","en","Constants","Libs","CMSHttp","global","info","localStorage","getItem","COMMON","EMPLOYEE_INFO","employeeInfo","JSON","parse","base64Decrypt","init","interpolation","escapeValue","lng","isBlank","lang","resources","common","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,kCAAP;AACA,OAAO,4CAAP;AACA,OAAO,mCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,EAAP,MAAe,+BAAf;AACA,OAAOC,EAAP,MAAe,+BAAf;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,OAAP,MAAoB,iBAApB;;AACAC,MAAM,CAACD,OAAP,GAAiBA,OAAjB;AACA,IAAIE,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqBN,SAAS,CAACO,MAAV,CAAiBC,aAAtC,CAAX;AACA,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACW,aAAL,CAAmBR,IAAnB,CAAX,CAAnB;AACAP,OAAO,CAACgB,IAAR,CAAa;AACXC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,WAAW,EAAE;AAAf,GADJ;AAEXC,EAAAA,GAAG,EAAEf,IAAI,CAACgB,OAAL,CAAaR,YAAb,IAA6B,IAA7B,GAAmCA,YAAY,CAACS,IAF1C;AAGXC,EAAAA,SAAS,EAAE;AACTrB,IAAAA,EAAE,EAAE;AACFsB,MAAAA,MAAM,EAAEtB;AADN,KADK;AAITC,IAAAA,EAAE,EAAE;AACFqB,MAAAA,MAAM,EAAErB;AADN;AAJK;AAHA,CAAb;AAaA,eAAeF,OAAf;AAEAL,QAAQ,CAAC6B,MAAT;AAAA;AACE;AACE,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAExB,OAAvB;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAFJ,CAKE;AALF,EAOEyB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;;AACA7B,eAAe,G,CAGf;AACA;AACA;;AACAC,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './scss/layouts/dashboard/App.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { I18nextProvider } from \"react-i18next\";\nimport i18next from \"i18next\";\nimport vi from './translations/vi/common.json';\nimport en from './translations/en/common.json';\nimport Constants from './utils/Constants';\nimport Libs from './utils/Libs';\n\nimport CMSHttp from './utils/CMSHttp';\nglobal.CMSHttp = CMSHttp;\nlet info = localStorage.getItem(Constants.COMMON.EMPLOYEE_INFO);\nlet employeeInfo = JSON.parse(Libs.base64Decrypt(info));\ni18next.init({\n  interpolation: { escapeValue: false },\n  lng: Libs.isBlank(employeeInfo) ? 'en': employeeInfo.lang,\n  resources: {\n    vi: {\n      common: vi\n    },\n    en: {\n      common: en\n    },\n  },\n});\n\nexport default i18next;\n\nReactDOM.render(\n  // <React.StrictMode>\n    <I18nextProvider i18n={i18next}>\n      <App />\n    </I18nextProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}