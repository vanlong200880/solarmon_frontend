{"ast":null,"code":"import EmployeesJsx from './Employees.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport EmployeeService from '../../../../../services/EmployeeService';\nimport './Employees.scss';\n\nclass Employees extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onClickAdd = () => {\n      let curItem = {};\n      let data = [];\n      var allLanguage = this.state.allLanguage;\n      curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n      curItem.tabActive = '';\n      allLanguage.map((language, index) => {\n        if (language.default === 1) {\n          curItem.tabActive = language.default === 1 ? language.iso_code : '';\n        }\n\n        let item = {\n          default: language.default,\n          iso_code: language.iso_code,\n          id_language: language.id,\n          name: \"\",\n          description: \"\",\n          icon: \"\",\n          icon_upload: \"\",\n          icon_message: \"\",\n          banner_desktop: \"\",\n          banner_desktop_upload: \"\",\n          banner_desktop_message: \"\",\n          banner_mobile: \"\",\n          banner_mobile_upload: \"\",\n          banner_mobile_message: \"\",\n          meta_title: \"\",\n          meta_keyword: \"\",\n          meta_description: \"\",\n          status: 1\n        };\n        return data.push(item);\n      });\n      curItem.data = data;\n      this.setState({\n        curItem: curItem,\n        add: true\n      });\n    };\n\n    this.onClickCloseAdd = (status, data) => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        curItem: {},\n        add: false\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onStatusChange = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.id_company = this.employee.id_company;\n      item.id_language = this.employee.id_language;\n      var isActiveUpdate = item.status;\n\n      if (isActiveUpdate * 1 === 1) {\n        isActiveUpdate = 0;\n      } else {\n        isActiveUpdate = 1;\n      }\n\n      item.status = isActiveUpdate;\n      item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n      EmployeeService.instance.updateStatus(item, function (status, msg) {\n        if (status) {\n          self.setState({\n            dataList: self.state.dataList\n          });\n        }\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.id_company = this.employee.id_company;\n      item.id_language = this.employee.id_language;\n      EmployeeService.instance.getDetail(item, data => {\n        if (data) {\n          data.screen_mode = Constants.SCREEN_MODE.EDIT;\n          self.setState({\n            curItem: data,\n            add: true\n          });\n        }\n      }, false);\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.jsxTemplate = EmployeesJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      add: false,\n      delete: false,\n      formSearch: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getList() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_employee = this.employee.id_employee;\n    EmployeeService.instance.getList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n   * @description Call form search\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  onSearch() {\n    let self = this;\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.full_name = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Employees);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/Employees/Employees.js"],"names":["EmployeesJsx","BaseComponent","Libs","withTranslation","Constants","EmployeeService","Employees","constructor","props","context","onClickAdd","curItem","data","allLanguage","state","screen_mode","SCREEN_MODE","ADD","tabActive","map","language","index","default","iso_code","item","id_language","id","name","description","icon","icon_upload","icon_message","banner_desktop","banner_desktop_upload","banner_desktop_message","banner_mobile","banner_mobile_upload","banner_mobile_message","meta_title","meta_keyword","meta_description","status","push","setState","add","onClickCloseAdd","getList","onClickCloseDelete","delete","onStatusChange","isArrayData","dataList","self","id_company","employee","isActiveUpdate","updated_by","first_name","last_name","instance","updateStatus","msg","onItemClick","getDetail","EDIT","onItemClickDelete","jsxTemplate","searchParam","limit","COMMON","LIMIT","offset","formSearch","isBlank","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","componentDidMount","params","id_employee","total_row","parseInt","forceUpdate","event","target","value","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","full_name","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import EmployeesJsx from './Employees.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport EmployeeService from '../../../../../services/EmployeeService';\nimport './Employees.scss';\n\nclass Employees extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = EmployeesJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            add: false,\n            delete: false,\n            formSearch: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_employee = this.employee.id_employee;\n        EmployeeService.instance.getList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    onClickAdd = () => {\n        let curItem = {};\n        let data = [];\n        var allLanguage = this.state.allLanguage;\n        curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n        curItem.tabActive = '';\n        allLanguage.map((language, index) => {\n            if (language.default === 1) { curItem.tabActive = language.default === 1 ? language.iso_code : ''; }\n\n            let item = {\n                default: language.default,\n                iso_code: language.iso_code,\n                id_language: language.id,\n                name: \"\",\n                description: \"\",\n                icon: \"\",\n                icon_upload: \"\",\n                icon_message: \"\",\n                banner_desktop: \"\",\n                banner_desktop_upload: \"\",\n                banner_desktop_message: \"\",\n                banner_mobile: \"\",\n                banner_mobile_upload: \"\",\n                banner_mobile_message: \"\",\n                meta_title: \"\",\n                meta_keyword: \"\",\n                meta_description: \"\",\n                status: 1\n            };\n            return data.push(item);\n        });\n\n        curItem.data = data;\n        this.setState({\n            curItem: curItem,\n            add: true\n        });\n\n    };\n\n    onClickCloseAdd = (status, data) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            curItem: {},\n            add: false\n        })\n    }\n\n    onClickCloseDelete = (status, data) => {\n        if(status){\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n     onStatusChange = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.id_company = this.employee.id_company;\n        item.id_language = this.employee.id_language;\n\n        var isActiveUpdate = item.status;\n        if (isActiveUpdate * 1 === 1) {\n            isActiveUpdate = 0;\n        }\n        else {\n            isActiveUpdate = 1;\n        }\n\n        item.status = isActiveUpdate;\n        item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n\n        EmployeeService.instance.updateStatus(item, function (status, msg) {\n            if (status) {\n                self.setState({\n                    dataList: self.state.dataList\n                });\n            }\n        });\n    }\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.id_company = this.employee.id_company;\n        item.id_language = this.employee.id_language;\n\n        EmployeeService.instance.getDetail(item, data => {\n            if (data) {\n                data.screen_mode = Constants.SCREEN_MODE.EDIT;\n                self.setState({\n                    curItem: data,\n                    add: true\n                });\n            }\n        }, false);\n    }\n\n\n    /**\n   * @description Item click event delete\n   * @author Long.Pham 12-05-2021\n   * @param index Order element in the list\n   */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n    /**\n     * @description Call form search\n     * @author Long.Pham 12/05/2021\n     */\n    onSearch() {\n        let self = this;\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.full_name = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Employees)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}