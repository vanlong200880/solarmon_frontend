{"ast":null,"code":"import React from 'react';\nimport ChartDeviceDiagnosticsJsx from './ChartDeviceDiagnostics.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport ChartsDiagnosticsService from '../../../../../../services/ChartsDiagnosticsService';\nimport moment from 'moment';\n\nclass ChartDeviceDiagnostics extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n\n      if (Libs.isObjectEmpty(item) && name == 'statype_diagnosticsus') {\n        curItem.statype_diagnosticsus = '';\n      } else if (Libs.isObjectEmpty(item) && name == 'type_string_index') {\n        curItem.type_string_index = '';\n      } else {\n        var value = item.value;\n        curItem[name] = value;\n      }\n\n      self.setState({\n        curItem: curItem\n      });\n    };\n\n    this.handleClickOutside = event => {\n      const {\n        target\n      } = event;\n      var {\n        chartParams\n      } = this.state,\n          self = this;\n\n      if (!Libs.isBlank(this.wrapperRef.current) && !this.wrapperRef.current.contains(target)) {\n        if (chartParams.show_filter) {\n          chartParams.show_filter = false;\n          self.setState({\n            chartParams: chartParams\n          });\n        }\n      }\n    };\n\n    this.onClickShowFilter = () => {\n      var {\n        chartParams\n      } = this.state;\n      chartParams.show_filter = true;\n      this.setState({\n        chartParams: chartParams\n      });\n    };\n\n    this.onClickFilter = value => {\n      var {\n        chartParams,\n        dataFilter,\n        curItem\n      } = this.state;\n      var self = this;\n      if (!Libs.isArrayData(dataFilter)) return;\n      var item = Libs.find(dataFilter, 'id', value);\n      if (Libs.isObjectEmpty(item)) return;\n      chartParams.id_filter = item.id;\n      chartParams.text_filter = item.text;\n      chartParams.show_filter = false;\n      chartParams.showNextBtn = false;\n\n      switch (value) {\n        case 'today':\n          chartParams.start_date = Libs.getCurrentMMDDYYYYHI();\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          break;\n\n        case 'lifetime':\n          chartParams.start_date = moment(curItem.commissioning).format('MM/DD/YYYY HH:mm:ss');\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          break;\n\n        case 'this_month':\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          var t = new Date(chartParams.end_date);\n          var y = t.getFullYear(),\n              m = t.getMonth();\n          chartParams.start_date = moment(new Date(y, m, 1)).format('MM/DD/YYYY HH:mm');\n          break;\n\n        case 'last_month':\n          var tlast = new Date(Libs.getCurrentMMDDYYYYHI());\n          var ylast = tlast.getFullYear(),\n              mlast = tlast.getMonth();\n          chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n          chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).format('MM/DD/YYYY HH:mm');\n          break;\n\n        case '12_month':\n          chartParams.start_date = moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(), -12)).format('MM/DD/YYYY HH:mm:ss');\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          break;\n      }\n\n      this.setState({\n        chartParams: chartParams\n      }, () => {// self.getDataChart();\n      });\n    };\n\n    this.changeViewMinute = value => {\n      var chartParams = this.state.chartParams,\n          self = this;\n      if (Libs.isBlank(value)) return;\n      chartParams.data_send_time = value;\n      this.setState({\n        chartParams: chartParams\n      }, () => {// self.getDataChart();\n      });\n    };\n\n    this.onClickAdd = () => {\n      let curItem = this.state.curItem;\n      let data = [];\n      var allLanguage = this.state.allLanguage;\n      curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n      curItem.tabActive = '';\n      allLanguage.map((language, index) => {\n        if (language.is_default === 1) {\n          curItem.tabActive = language.is_default === 1 ? language.iso_code : '';\n        }\n\n        let item = {\n          is_default: language.is_default,\n          iso_code: language.iso_code,\n          id_language: language.id,\n          name: \"\",\n          description: \"\"\n        };\n        return data.push(item);\n      });\n      curItem.data = data;\n      this.setState({\n        curItem: curItem,\n        add: true\n      });\n    };\n\n    this.onClickCloseAdd = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        add: false\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      var params = this.state.curItem;\n      params.id_company = item.id_company;\n      params.id = item.id; // ChartDeviceDiagnosticsService.instance.getDetail(params, data => {\n      //     if (data) {\n      //         item.data = data.data;\n      //         item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      //         let curTransItem = Libs.find(data.data,'is_default', 1);\n      //         if(Libs.isObjectEmpty(curTransItem)){ return false; }\n      //         item[\"name_\"+curTransItem.iso_code] = curTransItem.name;\n      //         if(Libs.isArrayData(data.data)){\n      //             var dataLang = data.data;\n      //             dataLang.map((row, index) => {\n      //                 if(row.is_default === 1){\n      //                     item.tabActive = row.iso_code;\n      //                 }\n      //                 return 1;\n      //             });\n      //         }\n      //         self.setState({\n      //             curItem: item,\n      //             add: true\n      //         });\n      //     }\n      // }, false);\n    };\n\n    this.onStatusChange = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      item.id_company = this.employee.id_company;\n      item.id_language = this.employee.id_language;\n      var isActiveUpdate = item.status;\n\n      if (isActiveUpdate * 1 === 1) {\n        isActiveUpdate = 0;\n      } else {\n        isActiveUpdate = 1;\n      }\n\n      item.status = isActiveUpdate;\n      item.updated_by = this.employee.first_name + ' ' + this.employee.last_name; // ChartDeviceDiagnosticsService.instance.updateStatus(item, function (status, msg) {\n      //     if (status) {\n      //         self.setState({\n      //             dataList: self.state.dataList\n      //         });\n      //     }\n      // });\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.state = {\n      curItem: {\n        data_send_time: 1,\n        type: 2,\n        type_diagnostics: 2,\n        type_string_index: 1\n      },\n      dataDevice: [{\n        id: 1,\n        name: \"Satcon PVS-375 Inverter\",\n        is_active: 0\n      }, {\n        id: 2,\n        name: \"Shark 100\",\n        is_active: 0\n      }, {\n        id: 3,\n        name: \"Inverter 1\",\n        is_active: 0\n      }],\n      dataDiagnostics: [{\n        id: 1,\n        value: 1,\n        label: \"AC Output\"\n      }, {\n        id: 2,\n        value: 2,\n        label: \"DC Input\"\n      }, {\n        id: 3,\n        value: 3,\n        label: \"DC Input Channel\"\n      }],\n      dataStringIndex: [{\n        id: 1,\n        value: 1,\n        label: \"Power\"\n      }, {\n        id: 2,\n        value: 2,\n        label: \"Voltage\"\n      }, {\n        id: 3,\n        value: 3,\n        label: \"Current\"\n      }],\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages,\n      dataFilter: [{\n        id: \"today\",\n        text: \"Today\"\n      }, {\n        id: \"this_month\",\n        text: \"This month\"\n      }, {\n        id: \"last_month\",\n        text: \"Last month\"\n      }, {\n        id: \"12_month\",\n        text: \"Last 12 months\"\n      }, {\n        id: \"lifetime\",\n        text: \"Lifetime\"\n      }],\n      chartParams: {\n        id_site: null,\n        id_filter: 'today',\n        text_filter: 'Today',\n        show_filter: false,\n        showNextBtn: false,\n        current_time: Libs.getCurrentMMDDYYYYHI(),\n        end_date: Libs.getCurrentMMDDYYYYHI(),\n        start_date: Libs.getCurrentMMDDYYYYHI(),\n        data_send_time: 2\n      }\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.jsxTemplate = ChartDeviceDiagnosticsJsx;\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n    this.wrapperRef = /*#__PURE__*/React.createRef();\n    this.myRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    // this.getList();\n    document.addEventListener('click', this.handleClickOutside);\n    this.getDataChart(); // this.showHeaderMenuProject(true);\n    // if (typeof this.props.parent.reloadHeaderShops == 'function') {\n    //     // this.props.parent.showHeaderShops(false);\n    // }\n    // this.forceUpdate();\n  }\n\n  componentWillUnmount() {// document.removeEventListener('click', this.handleClickOutside)\n  }\n\n  // showFilterParameter = () => {\n  //     this.setState({\n  //         show_parameter: true\n  //     });\n  // }\n  // addFilterParameter = () => {\n  //     this.setState({\n  //         show_parameter: false\n  //     });\n  // }\n  // closeFilterParameter = () => {\n  //     this.setState({\n  //         show_parameter: false\n  //     });\n  // }\n  // clearFilterParameter = () => {\n  //     var { dataParameter } = this.state;\n  //     if (!Libs.isArrayData(dataParameter)) return;\n  //     dataParameter.map((item, index) => {\n  //         dataParameter[index].is_active = 0;\n  //     });\n  //     this.setState({\n  //         dataParameter: dataParameter\n  //     });\n  // }\n  // handleParameterInputChange = (e, index, k) => {\n  //     var { dataParameter } = this.state;\n  //     if (!Libs.isArrayData(dataParameter)) return;\n  //     var item = dataParameter[index];\n  //     if (Libs.isObjectEmpty(item)) return;\n  //     var childs = item.dataParameter;\n  //     if (!Libs.isArrayData(childs)) return;\n  //     // childs[k].is_active = childs[k].is_active ? 0 : 1;\n  //     dataParameter[index].dataParameter[k].is_active = dataParameter[index].dataParameter[k].is_active ? 0 : 1;\n  //     // dataParameter[index].dataParameter = childs;\n  //     this.setState({\n  //         dataParameter: dataParameter\n  //     });\n  // }\n  // handleDeviceInputChange = (e, index) => {\n  //     var { dataDevice, dataParameter } = this.state;\n  //     if (!Libs.isArrayData(dataDevice)) return;\n  //     var item = dataDevice[index];\n  //     if (Libs.isObjectEmpty(item)) return;\n  //     if (dataDevice[index].is_active) {\n  //         dataDevice[index].is_active = 0;\n  //         if (Libs.isArrayData(dataParameter)) {\n  //             for (var i = 0, len = dataParameter.length; i < len; i++) {\n  //                 if (dataParameter[i].id == item.id) {\n  //                     dataParameter.splice(i, 1);\n  //                 }\n  //             }\n  //         }\n  //     } else {\n  //         dataDevice[index].is_active = 1;\n  //         dataParameter.push(item);\n  //     }\n  //     this.setState({\n  //         dataDevice: dataDevice,\n  //         dataParameter: dataParameter,\n  //         show_parameter: true\n  //     });\n  // }\n\n  /**\n  * Get chart data\n  * @author long.pham 2020-12-03\n  * @param id_site, id_customer\n  * @return Object\n  */\n  getDataChart() {\n    var {\n      chartParams,\n      curItem\n    } = this.state,\n        self = this;\n    if (Libs.isObjectEmpty(chartParams)) return;\n    var params = {};\n    params.start_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.start_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 00:00:00\");\n\n    if (Libs.dateFormat(chartParams.current_time, \"MM/DD/YYYY\", \"MM/DD/YYYY\") == Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\")) {\n      params.end_date = Libs.convertAllFormatDate(chartParams.end_date); // '2020-11-01 23:59:59';\n    } else {\n      params.end_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 23:59:59\");\n    } // params.start_date = '2021-08-09 00:00:00';\n    // params.end_date = '2021-08-09 23:59:59';\n\n\n    params.id_site = curItem.id;\n    params.id_customer = curItem.id_customer;\n    params.customer_type = !Libs.isBlank(this.user) ? this.user.customer_type : null; // params.offset_timezone = Libs.getOffsetTimeZone(chartParams.end_date);\n    // params.offset_timezone = '-08:00';\n\n    params.filterBy = chartParams.id_filter; // params.format_sql_long = Constants.DATE_FORMAT.format_sql_long;\n\n    params.id_site_type = curItem.id_site_type;\n    params.setup_send_time = curItem.data_send_time; // Use only for lifetime\n\n    params.typeView = moment(curItem.commissioning).format('YYYY') - moment(chartParams.end_date).format('YYYY') > 3 ? null : 'month';\n    params.data_send_time = chartParams.data_send_time;\n    ChartsDiagnosticsService.instance.getDataChart(params, data => {\n      if (!Libs.isObjectEmpty(data)) {\n        var dataListEnergy = data.energy;\n        var dataIrradiance = [],\n            dataEnergy = [],\n            categories = [],\n            arrEnergy = [],\n            arrMeasure = [];\n        var generationTotal = 0,\n            series = [],\n            lastUpdated = moment().format('LLL');\n\n        if (params.filterBy == 'today') {\n          switch (chartParams.data_send_time) {\n            case 1:\n              curItem.tickInterval = 24;\n              categories = ['0AM', '0:05 AM', '0:10 AM', '0:15 AM', '0:20 AM', '0:25 AM', '0:30 AM', '0:35 AM', '0:40 AM', '0:45 AM', '0:50 AM', '0:55 AM', '1AM', '1:05 AM', '1:10 AM', '1:15 AM', '1:20 AM', '1:25 AM', '1:30 AM', '1:35 AM', '1:40 AM', '1:45 AM', '1:50 AM', '1:55 AM', '2AM', '2:05 AM', '2:10 AM', '2:15 AM', '2:20 AM', '2:25 AM', '2:30 AM', '2:35 AM', '2:40 AM', '2:45 AM', '2:50 AM', '2:55 AM', '3AM', '3:05 AM', '3:10 AM', '3:15 AM', '3:20 AM', '3:25 AM', '3:30 AM', '3:35 AM', '3:40 AM', '3:45 AM', '3:50 AM', '3:55 AM', '4AM', '4:05 AM', '4:10 AM', '4:15 AM', '4:20 AM', '4:25 AM', '4:30 AM', '4:35 AM', '4:40 AM', '4:45 AM', '4:50 AM', '4:55 AM', '5AM', '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM', '6AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM', '7AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM', '8AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM', '9AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM', '10AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM', '11AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM', '12PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM', '1PM', '1:05 PM', '1:10 PM', '1:15 PM', '1:20 PM', '1:25 PM', '1:30 PM', '1:35 PM', '1:40 PM', '1:45 PM', '1:50 PM', '1:55 PM', '2PM', '2:05 PM', '2:10 PM', '2:15 PM', '2:20 PM', '2:25 PM', '2:30 PM', '2:35 PM', '2:40 PM', '2:45 PM', '2:50 PM', '2:55 PM', '3PM', '3:05 PM', '3:10 PM', '3:15 PM', '3:20 PM', '3:25 PM', '3:30 PM', '3:35 PM', '3:40 PM', '3:45 PM', '3:50 PM', '3:55 PM', '4PM', '4:05 PM', '4:10 PM', '4:15 PM', '4:20 PM', '4:25 PM', '4:30 PM', '4:35 PM', '4:40 PM', '4:45 PM', '4:50 PM', '4:55 PM', '5PM', '5:05 PM', '5:10 PM', '5:15 PM', '5:20 PM', '5:25 PM', '5:30 PM', '5:35 PM', '5:40 PM', '5:45 PM', '5:50 PM', '5:55 PM', '6PM', '6:05 PM', '6:10 PM', '6:15 PM', '6:20 PM', '6:25 PM', '6:30 PM', '6:35 PM', '6:40 PM', '6:45 PM', '6:50 PM', '6:55 PM', '7PM', '7:05 PM', '7:10 PM', '7:15 PM', '7:20 PM', '7:25 PM', '7:30 PM', '7:35 PM', '7:40 PM', '7:45 PM', '7:50 PM', '7:55 PM', '8PM', '8:05 PM', '8:10 PM', '8:15 PM', '8:20 PM', '8:25 PM', '8:30 PM', '8:35 PM', '8:40 PM', '8:45 PM', '8:50 PM', '8:55 PM', '9PM', '9:05 PM', '9:10 PM', '9:15 PM', '9:20 PM', '9:25 PM', '9:30 PM', '9:35 PM', '9:40 PM', '9:45 PM', '9:50 PM', '9:55 PM', '10PM', '10:05 PM', '10:10 PM', '10:15 PM', '10:20 PM', '10:25 PM', '10:30 PM', '10:35 PM', '10:40 PM', '10:45 PM', '10:50 PM', '10:55 PM', '11PM', '11:05 PM', '11:10 PM', '11:15 PM', '11:20 PM', '11:25 PM', '11:30 PM', '11:35 PM', '11:40 PM', '11:45 PM', '11:50 PM', '11:55 PM'];\n\n              for (var i1 = 0; i1 < dataListEnergy.length; i1++) {\n                var seriesItem = {};\n                seriesItem.name = dataListEnergy[i1].devicename;\n                seriesItem.data = [];\n                seriesItem.zIndex = i1;\n\n                if (dataListEnergy[i1].type == 'energy') {\n                  seriesItem.type = 'spline';\n                  seriesItem.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                  seriesItem.lineWidth = 3;\n                  seriesItem.marker = {\n                    radius: 1.5\n                  };\n                } else if (dataListEnergy[i1].type == 'irradiance') {\n                  seriesItem.type = 'spline';\n                  seriesItem.xAxis = 1;\n                  seriesItem.yAxis = 1;\n                  seriesItem.lineWidth = 3;\n                  seriesItem.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                  seriesItem.id = 's1';\n                  seriesItem.marker = {\n                    radius: 1.5\n                  };\n                } // Put data energy\n\n\n                var dataModelEnergy = dataListEnergy[i1].data_energy;\n                var rowItem = [];\n\n                if (Libs.isArrayData(dataModelEnergy)) {\n                  for (var j1 = 0; j1 < dataModelEnergy.length; j1++) {\n                    if (dataListEnergy[i1].type == 'energy') {\n                      arrEnergy.push({\n                        \"ID\": i1 + 1 + \"_\" + j1 + 1,\n                        \"DateTime\": dataModelEnergy[j1].download_time,\n                        \"Device Name\": dataListEnergy[i1].export_devicename,\n                        \"Power (kW)\": dataModelEnergy[j1].chart_energy_kwh\n                      });\n                      generationTotal = generationTotal + dataModelEnergy[j1].chart_energy_kwh;\n                    } else {\n                      arrMeasure.push({\n                        \"ID\": i1 + 1 + \"_\" + j1 + 1,\n                        \"DateTime\": dataModelEnergy[j1].download_time,\n                        \"Device Name\": dataListEnergy[i1].export_devicename,\n                        \"Measured Irradiance (w/m2)\": dataModelEnergy[j1].chart_energy_kwh\n                      });\n                    }\n\n                    rowItem.push([dataModelEnergy[j1].full_time, dataModelEnergy[j1].chart_energy_kwh]);\n                  }\n\n                  if (dataModelEnergy.length < 288 && dataModelEnergy.length > 0) {\n                    var lastDate = '';\n\n                    for (var izero1 = dataModelEnergy.length; izero1 < 288; izero1++) {\n                      if (izero1 == dataModelEnergy.length) {\n                        lastDate = dataModelEnergy[dataModelEnergy.length - 1].full_time;\n                      }\n\n                      if (lastDate != null) {\n                        lastDate = Libs.addMinutes(lastDate, 5);\n                        rowItem.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), 0]);\n                      }\n                    }\n                  }\n                }\n\n                seriesItem.data = rowItem;\n                series.push(seriesItem);\n              }\n\n              break;\n\n            case 2:\n              curItem.tickInterval = 8;\n              categories = ['0AM', '0:15AM', '0:30AM', '0:45AM', '1AM', '1:15AM', '1:30AM', '1:45AM', '2AM', '2:15AM', '2:30AM', '2:45AM', '3AM', '3:15AM', '3:30AM', '3:45AM', '4AM', '4:15AM', '4:30AM', '4:45AM', '5AM', '5:15AM', '5:30AM', '5:45AM', '6AM', '6:15AM', '6:30AM', '6:45AM', '7AM', '7:15AM', '7:30AM', '7:45AM', '8AM', '8:15AM', '8:30AM', '8:45AM', '9AM', '9:15AM', '9:30AM', '9:45AM', '10AM', '10:15AM', '10:30AM', '10:45AM', '11AM', '11:15AM', '11:30AM', '11:45AM', '12PM', '12:15PM', '12:30PM', '12:45PM', '1PM', '1:15PM', '1:30PM', '1:45PM', '2PM', '2:15PM', '2:30PM', '2:45PM', '3PM', '3:15PM', '3:30PM', '3:45PM', '4PM', '4:15PM', '4:30PM', '4:45PM', '5PM', '5:15PM', '5:30PM', '5:45PM', '6PM', '6:15PM', '6:30PM', '6:45PM', '7PM', '7:15PM', '7:30PM', '7:45PM', '8PM', '8:15PM', '8:30PM', '8:45PM', '9PM', '9:15PM', '9:30PM', '9:45PM', '10PM', '10:15PM', '10:30PM', '10:45PM', '11PM', '11:15PM', '11:30PM', '11:45PM'];\n\n              for (var i2 = 0; i2 < dataListEnergy.length; i2++) {\n                var seriesItem2 = {};\n                seriesItem2.name = dataListEnergy[i2].devicename;\n                seriesItem2.data = [];\n                seriesItem2.zIndex = i2;\n\n                if (dataListEnergy[i2].type == 'energy') {\n                  seriesItem2.type = 'spline';\n                  seriesItem2.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                  seriesItem2.yAxis = 1;\n                  seriesItem2.lineWidth = 3;\n                } else if (dataListEnergy[i2].type == 'irradiance') {\n                  seriesItem2.type = 'spline'; // seriesItem2.xAxis = 1;\n                  // seriesItem2.yAxis = 1;\n\n                  seriesItem2.lineWidth = 3;\n                  seriesItem2.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                  seriesItem2.id = 's1';\n                  seriesItem2.marker = {\n                    radius: 1.5\n                  };\n                } // Put data energy\n\n\n                var dataModelEnergy2 = dataListEnergy[i2].data_energy;\n                var rowItem2 = [];\n\n                if (Libs.isArrayData(dataModelEnergy2)) {\n                  for (var j2 = 0; j2 < dataModelEnergy2.length; j2++) {\n                    if (dataListEnergy[i2].type == 'energy') {\n                      arrEnergy.push({\n                        \"ID\": i2 + 1 + \"_\" + j2 + 1,\n                        \"DateTime\": dataModelEnergy2[j2].download_time,\n                        \"Device Name\": dataListEnergy[i2].export_devicename,\n                        \"Power (kW)\": dataModelEnergy2[j2].chart_energy_kwh\n                      });\n                      generationTotal = generationTotal + dataModelEnergy2[j2].chart_energy_kwh;\n                    } else {\n                      arrMeasure.push({\n                        \"ID\": i2 + 1 + \"_\" + j2 + 1,\n                        \"DateTime\": dataModelEnergy2[j2].download_time,\n                        \"Device Name\": dataListEnergy[i2].export_devicename,\n                        \"Measured Irradiance (w/m2)\": dataModelEnergy2[j2].chart_energy_kwh\n                      });\n                    }\n\n                    rowItem2.push([dataModelEnergy2[j2].full_time, dataModelEnergy2[j2].chart_energy_kwh]);\n                  }\n\n                  if (dataModelEnergy2.length < 96 && dataModelEnergy2.length > 0) {\n                    var lastDate2 = '';\n\n                    for (var izero2 = dataModelEnergy2.length; izero2 < 96; izero2++) {\n                      if (izero2 == dataModelEnergy2.length) {\n                        lastDate2 = dataModelEnergy2[dataModelEnergy2.length - 1].full_time;\n                      }\n\n                      if (lastDate2 != null) {\n                        lastDate2 = Libs.addMinutes(lastDate2, 5);\n                        rowItem2.push([Libs.dateFormat(lastDate2, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), 0]);\n                      }\n                    }\n                  }\n                }\n\n                seriesItem2.data = rowItem2;\n                series.push(seriesItem2);\n              }\n\n              break;\n\n            default:\n              curItem.tickInterval = 2;\n              categories = [];\n\n              for (var i3 = 0; i3 < dataListEnergy.length; i3++) {\n                var seriesItem3 = {};\n                seriesItem3.name = dataListEnergy[i3].devicename;\n                seriesItem3.data = [];\n                seriesItem3.zIndex = i3;\n\n                if (dataListEnergy[i3].type == 'energy') {\n                  seriesItem3.type = 'spline';\n                  seriesItem3.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                } else if (dataListEnergy[i3].type == 'irradiance') {\n                  seriesItem3.type = 'spline';\n                  seriesItem3.xAxis = 1;\n                  seriesItem3.yAxis = 1;\n                  seriesItem3.lineWidth = 3;\n                  seriesItem3.tooltip = {\n                    valueSuffix: ' kW'\n                  };\n                  seriesItem3.id = 's1';\n                  seriesItem3.marker = {\n                    radius: 1.5\n                  };\n                } // Put data energy\n\n\n                var dataModelEnergy3 = dataListEnergy[i3].data_energy,\n                    rowItem3 = [];\n\n                if (Libs.isArrayData(dataModelEnergy3)) {\n                  for (var j3 = 0; j3 < dataModelEnergy3.length; j3++) {\n                    categories.push([dataModelEnergy3[j3].categories_time]);\n\n                    if (dataListEnergy[i3].type == 'energy') {\n                      arrEnergy.push({\n                        \"ID\": i3 + 1 + \"_\" + j3 + 1,\n                        \"DateTime\": dataModelEnergy3[j3].download_time,\n                        \"Device Name\": dataListEnergy[i3].export_devicename,\n                        \"Power (kW)\": dataModelEnergy3[j3].chart_energy_kwh\n                      });\n                      generationTotal = generationTotal + dataModelEnergy3[j3].chart_energy_kwh;\n                    } else {\n                      arrMeasure.push({\n                        \"ID\": i3 + 1 + \"_\" + j3 + 1,\n                        \"DateTime\": dataModelEnergy3[j3].download_time,\n                        \"Device Name\": dataListEnergy[i3].export_devicename,\n                        \"Measured Irradiance (w/m2)\": dataModelEnergy3[j3].chart_energy_kwh\n                      });\n                    }\n\n                    rowItem3.push([dataModelEnergy3[j3].full_time, dataModelEnergy3[j3].chart_energy_kwh]);\n                  }\n\n                  if (chartParams.id_filter == 'today' && dataModelEnergy3.length < 24) {\n                    for (var izero3 = dataModelEnergy3.length; izero3 < 24; izero3++) {\n                      if (izero3 <= 11) {\n                        categories.push([izero3 + \"AM\"]);\n                        rowItem3.push([izero3 + \"AM\", 0]);\n                      } else {\n                        var pm = null;\n\n                        if (izero3 < 12) {\n                          pm = izero3;\n                        } else if (izero3 == 12) {\n                          pm = izero3;\n                        } else {\n                          pm = izero3 - 12;\n                        }\n\n                        rowItem3.push([pm + \"PM\", 0]);\n                        categories.push([pm + \"PM\"]);\n                      }\n                    }\n                  }\n                }\n\n                seriesItem3.data = rowItem3;\n                series.push(seriesItem3);\n              }\n\n              break;\n          }\n        } else {\n          curItem.tickInterval = 1;\n          categories = [];\n\n          for (var i4 = 0; i4 < dataListEnergy.length; i4++) {\n            var seriesItem4 = {};\n            seriesItem4.name = dataListEnergy[i4].devicename;\n            seriesItem4.data = [];\n            seriesItem4.zIndex = i4;\n\n            if (dataListEnergy[i4].type == 'energy') {\n              seriesItem4.type = 'spline';\n              seriesItem4.tooltip = {\n                valueSuffix: ' kW'\n              };\n            } else if (dataListEnergy[i4].type == 'irradiance') {\n              seriesItem4.type = 'spline';\n              seriesItem4.xAxis = 1;\n              seriesItem4.yAxis = 1;\n              seriesItem4.lineWidth = 3;\n              seriesItem4.tooltip = {\n                valueSuffix: ' kW'\n              };\n              seriesItem4.id = 's1';\n              seriesItem4.marker = {\n                radius: 1.5\n              };\n            } // Put data energy\n\n\n            var dataModelEnergy4 = dataListEnergy[i4].data_energy;\n            var rowItem4 = [];\n\n            if (Libs.isArrayData(dataModelEnergy4)) {\n              for (var j4 = 0; j4 < dataModelEnergy4.length; j4++) {\n                categories.push([dataModelEnergy4[j4].categories_time]);\n\n                if (dataListEnergy[i4].type == 'energy') {\n                  arrEnergy.push({\n                    \"ID\": i4 + 1 + \"_\" + j4 + 1,\n                    \"DateTime\": dataModelEnergy4[j4].download_time,\n                    \"Device Name\": dataListEnergy[i4].export_devicename,\n                    \"Power (kW)\": dataModelEnergy4[j4].chart_energy_kwh\n                  });\n                  generationTotal = generationTotal + dataModelEnergy4[j4].chart_energy_kwh;\n                } else {\n                  arrMeasure.push({\n                    \"ID\": i4 + 1 + \"_\" + j4 + 1,\n                    \"DateTime\": dataModelEnergy4[j4].download_time,\n                    \"Device Name\": dataListEnergy[i4].export_devicename,\n                    \"Measured Irradiance (w/m2)\": dataModelEnergy4[j4].chart_energy_kwh\n                  });\n                }\n\n                rowItem4.push([dataModelEnergy4[j4].full_time, dataModelEnergy4[j4].chart_energy_kwh]);\n              }\n\n              if (chartParams.id_filter == 'today' && dataModelEnergy4.length < 24) {\n                for (var izero4 = dataModelEnergy4.length; izero4 < 24; izero4++) {\n                  if (izero4 <= 11) {\n                    categories.push([izero4 + \"AM\"]);\n                    rowItem4.push([izero4 + \"AM\", 0]);\n                  } else {\n                    var pm4 = null;\n\n                    if (izero3 < 12) {\n                      pm4 = izero4;\n                    } else if (izero4 == 12) {\n                      pm4 = izero4;\n                    } else {\n                      pm4 = izero4 - 12;\n                    }\n\n                    rowItem4.push([pm4 + \"PM\", 0]);\n                    categories.push([pm4 + \"PM\"]);\n                  }\n                }\n              }\n            }\n\n            seriesItem4.data = rowItem4;\n            series.push(seriesItem4);\n          }\n        }\n\n        curItem.generation_total = generationTotal;\n        curItem.lastUpdated = lastUpdated;\n        self.setState({\n          dataCategories: categories,\n          dataEnergy: dataEnergy,\n          dataIrradiance: dataIrradiance,\n          curItem: curItem,\n          dataEnergyExport: arrEnergy,\n          dataMeasureExport: arrMeasure,\n          series: series\n        }, () => {\n          self.loadChartOption();\n        });\n      }\n    });\n  }\n\n  loadChartOption() {\n    let {\n      clientHeight\n    } = this.myRef.current;\n    var chartOption = {\n      credits: {\n        enabled: false\n      },\n      exporting: {\n        enabled: true\n      },\n      title: {\n        text: null\n      },\n      chart: {\n        type: 'column',\n        // height: window.innerWidth <= 1024 ? 300 : null\n        height: clientHeight ? clientHeight - 15 : null\n      },\n      legend: {\n        layout: 'horizontal',\n        align: 'center',\n        verticalAlign: 'bottom',\n        borderWidth: 0,\n        showInLegend: false\n      },\n      colors: ['#82cdff', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n      xAxis: [{\n        title: {\n          text: \"Power\",\n          enabled: false\n        },\n        alignTicks: true,\n        gridLineWidth: 1,\n        tickInterval: this.state.curItem.tickInterval,\n        visible: true,\n        categories: this.state.dataCategories\n      }, {\n        title: {\n          text: 'Data',\n          enabled: false\n        },\n        tickInterval: 1,\n        opposite: true,\n        visible: false\n      }],\n      yAxis: [{\n        min: 0,\n        title: {\n          text: 'kW',\n          enabled: true\n        },\n        lineWidth: 1,\n        gridLineWidth: 1,\n        labels: {\n          enabled: true\n        }\n      }, {\n        title: {\n          text: 'Watts/meter²',\n          enabled: false\n        },\n        lineWidth: 1,\n        opposite: true,\n        gridLineWidth: 1,\n        labels: {\n          enabled: false\n        }\n      }],\n      plotOptions: {\n        column: {\n          stacking: 'normal'\n        }\n      },\n      tooltip: {\n        shared: false,\n        crosshairs: true\n      },\n      series: this.state.series\n    };\n    this.setState({\n      chartOption: chartOption\n    });\n  }\n\n  onClickNext() {\n    var {\n      chartParams\n    } = this.state,\n        self = this;\n    var showNextBtn = chartParams.showNextBtn;\n    var compareDate = Libs.compareDate(Libs.addDays(chartParams.end_date, 1), 'MM/DD/YYYY', chartParams.current_time);\n\n    switch (chartParams.id_filter) {\n      case 'today':\n        if (compareDate >= 0) {\n          showNextBtn = false;\n          chartParams.end_date = Libs.addDays(chartParams.end_date, 1);\n          chartParams.start_date = chartParams.end_date;\n        } else {\n          chartParams.end_date = Libs.addDays(chartParams.end_date, 1);\n          chartParams.start_date = chartParams.end_date;\n          showNextBtn = true;\n        }\n\n        break;\n\n      case 'this_month':\n        var tcurrent = new Date(chartParams.end_date);\n        var ycurrent = tcurrent.getFullYear(),\n            mcurrent = tcurrent.getMonth();\n\n        if (compareDate > 0) {\n          showNextBtn = false;\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          chartParams.start_date = moment(new Date(ycurrent, mcurrent, 1)).format('MM/DD/YYYY HH:mm');\n        } else {\n          chartParams.end_date = moment(Libs.addMonths(new Date(ycurrent, mcurrent, 1), 1)).endOf('month').format('MM/DD/YYYY HH:mm');\n          chartParams.start_date = moment(Libs.addMonths(new Date(ycurrent, mcurrent, 1), 1)).format('MM/DD/YYYY HH:mm');\n          showNextBtn = true;\n        }\n\n        break;\n\n      case 'last_month':\n        var tc = new Date(Libs.getCurrentMMDDYYYYHI());\n        var yc = tc.getFullYear(),\n            mc = tc.getMonth();\n\n        if (moment(chartParams.current_time).format('MM/YYYY') == moment(chartParams.end_date).format('MM/YYYY')) {\n          showNextBtn = false;\n          chartParams.end_date = moment(Libs.addMonths(new Date(yc, mc, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n          chartParams.start_date = moment(Libs.addMonths(new Date(yc, mc, 1), -1)).format('MM/DD/YYYY HH:mm');\n        } else {\n          var tlast = new Date(chartParams.end_date);\n          var ylast = tlast.getFullYear(),\n              mlast = tlast.getMonth();\n          chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), 1)).endOf('month').format('MM/DD/YYYY HH:mm');\n          chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), 1)).format('MM/DD/YYYY HH:mm');\n          showNextBtn = true;\n        }\n\n        break;\n\n      case '12_month':\n        var tstart = new Date(chartParams.end_date);\n        var ystart = tstart.getFullYear(),\n            mstart = tstart.getMonth();\n        var compareEndDate = moment(Libs.addMonths(new Date(ystart, mstart, 1), 12)).format('YYYY');\n\n        if (moment(chartParams.current_time).format('YYYY') <= compareEndDate) {\n          chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n          var tn = new Date(chartParams.end_date);\n          var yn = tn.getFullYear(),\n              mn = tn.getMonth();\n          chartParams.start_date = moment(Libs.addMonths(new Date(yn, mn, 1), -12)).format('MM/DD/YYYY HH:mm');\n          showNextBtn = false;\n        } else {\n          var te = new Date(chartParams.end_date);\n          var ye = te.getFullYear(),\n              me = te.getMonth();\n          chartParams.end_date = moment(Libs.addMonths(new Date(ye, me, 1), 12)).endOf('month').format('MM/DD/YYYY HH:mm');\n          var ts = new Date(chartParams.start_date);\n          var ys = ts.getFullYear(),\n              ms = ts.getMonth();\n          chartParams.start_date = moment(Libs.addMonths(new Date(ys, ms, 1), 12)).format('MM/DD/YYYY HH:mm');\n          showNextBtn = true;\n        }\n\n        break;\n    }\n\n    chartParams.showNextBtn = showNextBtn;\n    this.setState({\n      chartParams: chartParams\n    }, () => {//   self.getDataChart();\n    });\n  }\n\n  onClickPrev() {\n    let self = this;\n    var {\n      chartParams\n    } = this.state;\n    chartParams.showNextBtn = true;\n    var t = new Date(chartParams.end_date);\n    var y = t.getFullYear(),\n        m = t.getMonth();\n\n    switch (chartParams.id_filter) {\n      case 'today':\n        chartParams.end_date = moment(Libs.addDays(chartParams.end_date, -1)).format('MM/DD/YYYY HH:mm:ss');\n        chartParams.start_date = chartParams.end_date;\n        break;\n\n      case 'last_month':\n      case 'this_month':\n        chartParams.end_date = moment(Libs.addMonths(new Date(y, m, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n        chartParams.start_date = moment(Libs.addMonths(new Date(y, m, 1), -1)).format('MM/DD/YYYY HH:mm');\n        break;\n\n      case '12_month':\n        chartParams.end_date = moment(Libs.addMonths(new Date(y, m, 1), -12)).endOf('month').format('MM/DD/YYYY HH:mm');\n        var tstart = new Date(chartParams.start_date);\n        var ystart = tstart.getFullYear(),\n            mstart = tstart.getMonth();\n        chartParams.start_date = moment(Libs.addMonths(new Date(ystart, mstart, 1), -12)).format('MM/DD/YYYY HH:mm');\n        break;\n    }\n\n    this.setState({\n      chartParams: chartParams\n    }, () => {//   self.getDataChart();\n    });\n  }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  getList() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_company = this.employee.id_company; // AnalyticsService.instance.getList(params, (data, total_row) => {\n    //     if (Libs.isArrayData(data)) {\n    //         self.setState({\n    //             dataList: data\n    //         });\n    //         var total = parseInt(total_row / self.state.searchParam.limit);\n    //         if (total_row % self.state.searchParam.limit > 0) {\n    //             total = total + 1;\n    //         }\n    //         self.paging.total = total;\n    //         self.paging.current = self.state.searchParam.index;\n    //         self.paging.currentInput = self.state.searchParam.index;\n    //         self.state.total_row = total_row;\n    //     } else {\n    //         self.setState({\n    //             dataList: [],\n    //             total_row: 0\n    //         });\n    //         self.paging.total = 0;\n    //         self.paging.current = 1;\n    //         self.paging.currentInput = 1;\n    //     }\n    //     self.forceUpdate();\n    // });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.name = null;\n    searchParam.id = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ChartDeviceDiagnostics);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleProject/Analytics/ChartDeviceDiagnostics/ChartDeviceDiagnostics.js"],"names":["React","ChartDeviceDiagnosticsJsx","BaseComponent","Libs","withTranslation","Constants","ChartsDiagnosticsService","moment","ChartDeviceDiagnostics","constructor","props","context","handleDropdownChange","item","name","self","curItem","state","isObjectEmpty","statype_diagnosticsus","type_string_index","value","setState","handleClickOutside","event","target","chartParams","isBlank","wrapperRef","current","contains","show_filter","onClickShowFilter","onClickFilter","dataFilter","isArrayData","find","id_filter","id","text_filter","text","showNextBtn","start_date","getCurrentMMDDYYYYHI","end_date","commissioning","format","t","Date","y","getFullYear","m","getMonth","tlast","ylast","mlast","addMonths","endOf","changeViewMinute","data_send_time","onClickAdd","data","allLanguage","screen_mode","SCREEN_MODE","ADD","tabActive","map","language","index","is_default","iso_code","id_language","description","push","add","onClickCloseAdd","status","getList","onClickCloseDelete","delete","onItemClick","dataList","params","id_company","onStatusChange","EDIT","employee","isActiveUpdate","updated_by","first_name","last_name","onItemClickDelete","type","type_diagnostics","dataDevice","is_active","dataDiagnostics","label","dataStringIndex","searchParam","limit","COMMON","LIMIT","offset","languages","id_site","current_time","paging","total","currentInput","jsxTemplate","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","createRef","myRef","componentDidMount","document","addEventListener","getDataChart","componentWillUnmount","convertAllFormatDate","dateFormat","id_customer","customer_type","user","filterBy","id_site_type","setup_send_time","typeView","instance","dataListEnergy","energy","dataIrradiance","dataEnergy","categories","arrEnergy","arrMeasure","generationTotal","series","lastUpdated","tickInterval","i1","length","seriesItem","devicename","zIndex","tooltip","valueSuffix","lineWidth","marker","radius","xAxis","yAxis","dataModelEnergy","data_energy","rowItem","j1","download_time","export_devicename","chart_energy_kwh","full_time","lastDate","izero1","addMinutes","i2","seriesItem2","dataModelEnergy2","rowItem2","j2","lastDate2","izero2","i3","seriesItem3","dataModelEnergy3","rowItem3","j3","categories_time","izero3","pm","i4","seriesItem4","dataModelEnergy4","rowItem4","j4","izero4","pm4","generation_total","dataCategories","dataEnergyExport","dataMeasureExport","loadChartOption","clientHeight","chartOption","credits","enabled","exporting","title","chart","height","legend","layout","align","verticalAlign","borderWidth","showInLegend","colors","alignTicks","gridLineWidth","visible","opposite","min","labels","plotOptions","column","stacking","shared","crosshairs","onClickNext","compareDate","addDays","tcurrent","ycurrent","mcurrent","tc","yc","mc","tstart","ystart","mstart","compareEndDate","tn","yn","mn","te","ye","me","ts","ys","ms","onClickPrev","isNumber","toast","forceUpdate","key","parseInt","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","formSearch","onResetSearch","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ChartDeviceDiagnosticsJsx from './ChartDeviceDiagnostics.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport ChartsDiagnosticsService from '../../../../../../services/ChartsDiagnosticsService';\n\nimport moment from 'moment';\nclass ChartDeviceDiagnostics extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            curItem: {\n                data_send_time: 1,\n                type: 2,\n                type_diagnostics: 2,\n                type_string_index: 1\n            },\n\n            dataDevice: [\n                {\n                    id: 1,\n                    name: \"Satcon PVS-375 Inverter\",\n                    is_active: 0,\n                },\n                {\n                    id: 2,\n                    name: \"Shark 100\",\n                    is_active: 0\n                },\n                {\n                    id: 3,\n                    name: \"Inverter 1\",\n                    is_active: 0,\n                }\n            ],\n\n            dataDiagnostics: [\n                {\n                    id: 1,\n                    value: 1,\n                    label: \"AC Output\"\n                },\n                {\n                    id: 2,\n                    value: 2,\n                    label: \"DC Input\"\n                },\n                {\n                    id: 3,\n                    value: 3,\n                    label: \"DC Input Channel\"\n                }\n            ],\n\n            dataStringIndex: [\n                {\n                    id: 1,\n                    value: 1,\n                    label: \"Power\"\n                },\n                {\n                    id: 2,\n                    value: 2,\n                    label: \"Voltage\"\n                },\n                {\n                    id: 3,\n                    value: 3,\n                    label: \"Current\"\n                }\n            ],\n\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages,\n\n            dataFilter: [\n                { id: \"today\", text: \"Today\" },\n                { id: \"this_month\", text: \"This month\" },\n                { id: \"last_month\", text: \"Last month\" },\n                { id: \"12_month\", text: \"Last 12 months\" },\n                { id: \"lifetime\", text: \"Lifetime\" }\n            ],\n\n            chartParams: {\n                id_site: null,\n                id_filter: 'today',\n                text_filter: 'Today',\n                show_filter: false,\n                showNextBtn: false,\n                current_time: Libs.getCurrentMMDDYYYYHI(),\n                end_date: Libs.getCurrentMMDDYYYYHI(),\n                start_date: Libs.getCurrentMMDDYYYYHI(),\n                data_send_time: 2\n            },\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n\n        this.jsxTemplate = ChartDeviceDiagnosticsJsx;\n\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n        this.wrapperRef = React.createRef();\n        this.myRef = React.createRef();\n\n    }\n\n    componentDidMount() {\n        \n        // this.getList();\n        document.addEventListener('click', this.handleClickOutside);\n        this.getDataChart();\n        // this.showHeaderMenuProject(true);\n\n        // if (typeof this.props.parent.reloadHeaderShops == 'function') {\n        //     // this.props.parent.showHeaderShops(false);\n        // }\n        // this.forceUpdate();\n    }\n    componentWillUnmount() {\n        // document.removeEventListener('click', this.handleClickOutside)\n    }\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item) && name == 'statype_diagnosticsus') {\n            curItem.statype_diagnosticsus = '';\n        } else if(Libs.isObjectEmpty(item) && name == 'type_string_index'){\n            curItem.type_string_index = '';\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n    // showFilterParameter = () => {\n    //     this.setState({\n    //         show_parameter: true\n    //     });\n    // }\n\n\n    // addFilterParameter = () => {\n    //     this.setState({\n    //         show_parameter: false\n    //     });\n    // }\n\n    // closeFilterParameter = () => {\n    //     this.setState({\n    //         show_parameter: false\n    //     });\n    // }\n\n    // clearFilterParameter = () => {\n    //     var { dataParameter } = this.state;\n    //     if (!Libs.isArrayData(dataParameter)) return;\n\n    //     dataParameter.map((item, index) => {\n    //         dataParameter[index].is_active = 0;\n    //     });\n\n    //     this.setState({\n    //         dataParameter: dataParameter\n    //     });\n    // }\n\n    // handleParameterInputChange = (e, index, k) => {\n    //     var { dataParameter } = this.state;\n\n\n    //     if (!Libs.isArrayData(dataParameter)) return;\n    //     var item = dataParameter[index];\n    //     if (Libs.isObjectEmpty(item)) return;\n    //     var childs = item.dataParameter;\n    //     if (!Libs.isArrayData(childs)) return;\n\n        \n\n    //     // childs[k].is_active = childs[k].is_active ? 0 : 1;\n\n    //     dataParameter[index].dataParameter[k].is_active = dataParameter[index].dataParameter[k].is_active ? 0 : 1;\n    //     // dataParameter[index].dataParameter = childs;\n    //     this.setState({\n    //         dataParameter: dataParameter\n    //     });\n    // }\n\n    // handleDeviceInputChange = (e, index) => {\n    //     var { dataDevice, dataParameter } = this.state;\n    //     if (!Libs.isArrayData(dataDevice)) return;\n    //     var item = dataDevice[index];\n    //     if (Libs.isObjectEmpty(item)) return;\n    //     if (dataDevice[index].is_active) {\n    //         dataDevice[index].is_active = 0;\n    //         if (Libs.isArrayData(dataParameter)) {\n    //             for (var i = 0, len = dataParameter.length; i < len; i++) {\n    //                 if (dataParameter[i].id == item.id) {\n    //                     dataParameter.splice(i, 1);\n    //                 }\n    //             }\n    //         }\n    //     } else {\n    //         dataDevice[index].is_active = 1;\n    //         dataParameter.push(item);\n    //     }\n\n\n    //     this.setState({\n    //         dataDevice: dataDevice,\n    //         dataParameter: dataParameter,\n    //         show_parameter: true\n    //     });\n    // }\n\n    /**\n   * Get chart data\n   * @author long.pham 2020-12-03\n   * @param id_site, id_customer\n   * @return Object\n   */\n    getDataChart() {\n        var { chartParams, curItem } = this.state, self = this;\n\n        if (Libs.isObjectEmpty(chartParams)) return;\n\n        var params = {};\n        params.start_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.start_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 00:00:00\");\n        if (Libs.dateFormat(chartParams.current_time, \"MM/DD/YYYY\", \"MM/DD/YYYY\") == Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\")) {\n            params.end_date = Libs.convertAllFormatDate(chartParams.end_date); // '2020-11-01 23:59:59';\n        } else {\n            params.end_date = Libs.convertAllFormatDate(Libs.dateFormat(chartParams.end_date, \"MM/DD/YYYY\", \"MM/DD/YYYY\") + \" 23:59:59\");\n        }\n\n\n        // params.start_date = '2021-08-09 00:00:00';\n        // params.end_date = '2021-08-09 23:59:59';\n        params.id_site = curItem.id;\n        params.id_customer = curItem.id_customer;\n        params.customer_type = !Libs.isBlank(this.user) ? this.user.customer_type : null;\n        // params.offset_timezone = Libs.getOffsetTimeZone(chartParams.end_date);\n        // params.offset_timezone = '-08:00';\n        params.filterBy = chartParams.id_filter;\n        // params.format_sql_long = Constants.DATE_FORMAT.format_sql_long;\n        params.id_site_type = curItem.id_site_type;\n        params.setup_send_time = curItem.data_send_time;\n        // Use only for lifetime\n        params.typeView = (moment(curItem.commissioning).format('YYYY') - moment(chartParams.end_date).format('YYYY')) > 3 ? null : 'month';\n        params.data_send_time = chartParams.data_send_time;\n        ChartsDiagnosticsService.instance.getDataChart(params, (data) => {\n            if (!Libs.isObjectEmpty(data)) {\n                var dataListEnergy = data.energy;\n                var dataIrradiance = [], dataEnergy = [], categories = [], arrEnergy = [], arrMeasure = [];\n                var generationTotal = 0, series = [], lastUpdated = moment().format('LLL');\n                if (params.filterBy == 'today') {\n                    switch (chartParams.data_send_time) {\n                        case 1:\n                            curItem.tickInterval = 24;\n                            categories = [\n                                '0AM', '0:05 AM', '0:10 AM', '0:15 AM', '0:20 AM', '0:25 AM', '0:30 AM', '0:35 AM', '0:40 AM', '0:45 AM', '0:50 AM', '0:55 AM',\n                                '1AM', '1:05 AM', '1:10 AM', '1:15 AM', '1:20 AM', '1:25 AM', '1:30 AM', '1:35 AM', '1:40 AM', '1:45 AM', '1:50 AM', '1:55 AM',\n                                '2AM', '2:05 AM', '2:10 AM', '2:15 AM', '2:20 AM', '2:25 AM', '2:30 AM', '2:35 AM', '2:40 AM', '2:45 AM', '2:50 AM', '2:55 AM',\n                                '3AM', '3:05 AM', '3:10 AM', '3:15 AM', '3:20 AM', '3:25 AM', '3:30 AM', '3:35 AM', '3:40 AM', '3:45 AM', '3:50 AM', '3:55 AM',\n                                '4AM', '4:05 AM', '4:10 AM', '4:15 AM', '4:20 AM', '4:25 AM', '4:30 AM', '4:35 AM', '4:40 AM', '4:45 AM', '4:50 AM', '4:55 AM',\n                                '5AM', '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                                '6AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                                '7AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                                '8AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                                '9AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                                '10AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                                '11AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                                '12PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                                '1PM', '1:05 PM', '1:10 PM', '1:15 PM', '1:20 PM', '1:25 PM', '1:30 PM', '1:35 PM', '1:40 PM', '1:45 PM', '1:50 PM', '1:55 PM',\n                                '2PM', '2:05 PM', '2:10 PM', '2:15 PM', '2:20 PM', '2:25 PM', '2:30 PM', '2:35 PM', '2:40 PM', '2:45 PM', '2:50 PM', '2:55 PM',\n                                '3PM', '3:05 PM', '3:10 PM', '3:15 PM', '3:20 PM', '3:25 PM', '3:30 PM', '3:35 PM', '3:40 PM', '3:45 PM', '3:50 PM', '3:55 PM',\n                                '4PM', '4:05 PM', '4:10 PM', '4:15 PM', '4:20 PM', '4:25 PM', '4:30 PM', '4:35 PM', '4:40 PM', '4:45 PM', '4:50 PM', '4:55 PM',\n                                '5PM', '5:05 PM', '5:10 PM', '5:15 PM', '5:20 PM', '5:25 PM', '5:30 PM', '5:35 PM', '5:40 PM', '5:45 PM', '5:50 PM', '5:55 PM',\n                                '6PM', '6:05 PM', '6:10 PM', '6:15 PM', '6:20 PM', '6:25 PM', '6:30 PM', '6:35 PM', '6:40 PM', '6:45 PM', '6:50 PM', '6:55 PM',\n                                '7PM', '7:05 PM', '7:10 PM', '7:15 PM', '7:20 PM', '7:25 PM', '7:30 PM', '7:35 PM', '7:40 PM', '7:45 PM', '7:50 PM', '7:55 PM',\n                                '8PM', '8:05 PM', '8:10 PM', '8:15 PM', '8:20 PM', '8:25 PM', '8:30 PM', '8:35 PM', '8:40 PM', '8:45 PM', '8:50 PM', '8:55 PM',\n                                '9PM', '9:05 PM', '9:10 PM', '9:15 PM', '9:20 PM', '9:25 PM', '9:30 PM', '9:35 PM', '9:40 PM', '9:45 PM', '9:50 PM', '9:55 PM',\n                                '10PM', '10:05 PM', '10:10 PM', '10:15 PM', '10:20 PM', '10:25 PM', '10:30 PM', '10:35 PM', '10:40 PM', '10:45 PM', '10:50 PM', '10:55 PM',\n                                '11PM', '11:05 PM', '11:10 PM', '11:15 PM', '11:20 PM', '11:25 PM', '11:30 PM', '11:35 PM', '11:40 PM', '11:45 PM', '11:50 PM', '11:55 PM'\n                            ];\n\n                            for (var i1 = 0; i1 < dataListEnergy.length; i1++) {\n                                var seriesItem = {};\n                                seriesItem.name = dataListEnergy[i1].devicename;\n                                seriesItem.data = [];\n                                seriesItem.zIndex = i1;\n                                if (dataListEnergy[i1].type == 'energy') {\n                                    seriesItem.type = 'spline';\n                                    seriesItem.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                    seriesItem.lineWidth = 3;\n                                    seriesItem.marker = {\n                                        radius: 1.5\n                                    };\n                                } else if (dataListEnergy[i1].type == 'irradiance') {\n                                    seriesItem.type = 'spline';\n                                    seriesItem.xAxis = 1;\n                                    seriesItem.yAxis = 1;\n                                    seriesItem.lineWidth = 3;\n                                    seriesItem.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                    seriesItem.id = 's1';\n                                    seriesItem.marker = {\n                                        radius: 1.5\n                                    };\n\n                                }\n\n                                // Put data energy\n                                var dataModelEnergy = dataListEnergy[i1].data_energy;\n                                var rowItem = [];\n                                if (Libs.isArrayData(dataModelEnergy)) {\n                                    for (var j1 = 0; j1 < dataModelEnergy.length; j1++) {\n\n                                        if (dataListEnergy[i1].type == 'energy') {\n                                            arrEnergy.push({\n                                                \"ID\": i1 + 1 + \"_\" + j1 + 1,\n                                                \"DateTime\": dataModelEnergy[j1].download_time,\n                                                \"Device Name\": dataListEnergy[i1].export_devicename,\n                                                \"Power (kW)\": dataModelEnergy[j1].chart_energy_kwh\n                                            });\n                                            generationTotal = generationTotal + dataModelEnergy[j1].chart_energy_kwh;\n                                        } else {\n                                            arrMeasure.push({\n                                                \"ID\": i1 + 1 + \"_\" + j1 + 1,\n                                                \"DateTime\": dataModelEnergy[j1].download_time,\n                                                \"Device Name\": dataListEnergy[i1].export_devicename,\n                                                \"Measured Irradiance (w/m2)\": dataModelEnergy[j1].chart_energy_kwh\n                                            });\n                                        }\n\n                                        rowItem.push([dataModelEnergy[j1].full_time, dataModelEnergy[j1].chart_energy_kwh]);\n                                    }\n                                    if (dataModelEnergy.length < 288 && dataModelEnergy.length > 0) {\n                                        var lastDate = '';\n                                        for (var izero1 = dataModelEnergy.length; izero1 < 288; izero1++) {\n                                            if (izero1 == dataModelEnergy.length) { lastDate = dataModelEnergy[dataModelEnergy.length - 1].full_time; }\n                                            if (lastDate != null) {\n                                                lastDate = Libs.addMinutes(lastDate, 5);\n                                                rowItem.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), 0]);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                seriesItem.data = rowItem;\n                                series.push(seriesItem);\n                            }\n\n                            break;\n                        case 2:\n                            curItem.tickInterval = 8;\n                            categories = [\n                                '0AM', '0:15AM', '0:30AM', '0:45AM',\n                                '1AM', '1:15AM', '1:30AM', '1:45AM',\n                                '2AM', '2:15AM', '2:30AM', '2:45AM',\n                                '3AM', '3:15AM', '3:30AM', '3:45AM',\n                                '4AM', '4:15AM', '4:30AM', '4:45AM',\n                                '5AM', '5:15AM', '5:30AM', '5:45AM',\n                                '6AM', '6:15AM', '6:30AM', '6:45AM',\n                                '7AM', '7:15AM', '7:30AM', '7:45AM',\n                                '8AM', '8:15AM', '8:30AM', '8:45AM',\n                                '9AM', '9:15AM', '9:30AM', '9:45AM',\n                                '10AM', '10:15AM', '10:30AM', '10:45AM',\n                                '11AM', '11:15AM', '11:30AM', '11:45AM',\n                                '12PM', '12:15PM', '12:30PM', '12:45PM',\n                                '1PM', '1:15PM', '1:30PM', '1:45PM',\n                                '2PM', '2:15PM', '2:30PM', '2:45PM',\n                                '3PM', '3:15PM', '3:30PM', '3:45PM',\n                                '4PM', '4:15PM', '4:30PM', '4:45PM',\n                                '5PM', '5:15PM', '5:30PM', '5:45PM',\n                                '6PM', '6:15PM', '6:30PM', '6:45PM',\n                                '7PM', '7:15PM', '7:30PM', '7:45PM',\n                                '8PM', '8:15PM', '8:30PM', '8:45PM',\n                                '9PM', '9:15PM', '9:30PM', '9:45PM',\n                                '10PM', '10:15PM', '10:30PM', '10:45PM',\n                                '11PM', '11:15PM', '11:30PM', '11:45PM',\n                            ];\n\n                            for (var i2 = 0; i2 < dataListEnergy.length; i2++) {\n                                var seriesItem2 = {};\n                                seriesItem2.name = dataListEnergy[i2].devicename;\n                                seriesItem2.data = [];\n                                seriesItem2.zIndex = i2;\n                                if (dataListEnergy[i2].type == 'energy') {\n                                    seriesItem2.type = 'spline';\n                                    seriesItem2.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                    seriesItem2.yAxis = 1;\n                                    seriesItem2.lineWidth = 3;\n\n                                } else if (dataListEnergy[i2].type == 'irradiance') {\n                                    seriesItem2.type = 'spline';\n                                    // seriesItem2.xAxis = 1;\n                                    // seriesItem2.yAxis = 1;\n                                    seriesItem2.lineWidth = 3;\n                                    seriesItem2.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                    seriesItem2.id = 's1';\n                                    seriesItem2.marker = {\n                                        radius: 1.5\n                                    };\n\n                                }\n\n                                // Put data energy\n                                var dataModelEnergy2 = dataListEnergy[i2].data_energy;\n\n                                var rowItem2 = [];\n                                if (Libs.isArrayData(dataModelEnergy2)) {\n                                    for (var j2 = 0; j2 < dataModelEnergy2.length; j2++) {\n\n                                        if (dataListEnergy[i2].type == 'energy') {\n                                            arrEnergy.push({\n                                                \"ID\": i2 + 1 + \"_\" + j2 + 1,\n                                                \"DateTime\": dataModelEnergy2[j2].download_time,\n                                                \"Device Name\": dataListEnergy[i2].export_devicename,\n                                                \"Power (kW)\": dataModelEnergy2[j2].chart_energy_kwh\n                                            });\n\n                                            generationTotal = generationTotal + dataModelEnergy2[j2].chart_energy_kwh;\n                                        } else {\n                                            arrMeasure.push({\n                                                \"ID\": i2 + 1 + \"_\" + j2 + 1,\n                                                \"DateTime\": dataModelEnergy2[j2].download_time,\n                                                \"Device Name\": dataListEnergy[i2].export_devicename,\n                                                \"Measured Irradiance (w/m2)\": dataModelEnergy2[j2].chart_energy_kwh\n                                            });\n                                        }\n\n                                        rowItem2.push([dataModelEnergy2[j2].full_time, dataModelEnergy2[j2].chart_energy_kwh]);\n                                    }\n\n                                    if (dataModelEnergy2.length < 96 && dataModelEnergy2.length > 0) {\n                                        var lastDate2 = '';\n                                        for (var izero2 = dataModelEnergy2.length; izero2 < 96; izero2++) {\n                                            if (izero2 == dataModelEnergy2.length) { lastDate2 = dataModelEnergy2[dataModelEnergy2.length - 1].full_time; }\n                                            if (lastDate2 != null) {\n                                                lastDate2 = Libs.addMinutes(lastDate2, 5);\n                                                rowItem2.push([Libs.dateFormat(lastDate2, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), 0]);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                seriesItem2.data = rowItem2;\n                                series.push(seriesItem2);\n                            }\n\n                            break;\n                        default:\n                            curItem.tickInterval = 2;\n                            categories = [];\n                            for (var i3 = 0; i3 < dataListEnergy.length; i3++) {\n                                var seriesItem3 = {};\n                                seriesItem3.name = dataListEnergy[i3].devicename;\n                                seriesItem3.data = [];\n                                seriesItem3.zIndex = i3;\n                                if (dataListEnergy[i3].type == 'energy') {\n                                    seriesItem3.type = 'spline';\n                                    seriesItem3.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                } else if (dataListEnergy[i3].type == 'irradiance') {\n                                    seriesItem3.type = 'spline';\n                                    seriesItem3.xAxis = 1;\n                                    seriesItem3.yAxis = 1;\n                                    seriesItem3.lineWidth = 3;\n                                    seriesItem3.tooltip = {\n                                        valueSuffix: ' kW'\n                                    };\n                                    seriesItem3.id = 's1';\n                                    seriesItem3.marker = {\n                                        radius: 1.5\n                                    };\n\n                                }\n\n                                // Put data energy\n                                var dataModelEnergy3 = dataListEnergy[i3].data_energy, rowItem3 = [];\n                                if (Libs.isArrayData(dataModelEnergy3)) {\n                                    for (var j3 = 0; j3 < dataModelEnergy3.length; j3++) {\n\n                                        categories.push([dataModelEnergy3[j3].categories_time]);\n                                        if (dataListEnergy[i3].type == 'energy') {\n                                            arrEnergy.push({\n                                                \"ID\": i3 + 1 + \"_\" + j3 + 1,\n                                                \"DateTime\": dataModelEnergy3[j3].download_time,\n                                                \"Device Name\": dataListEnergy[i3].export_devicename,\n                                                \"Power (kW)\": dataModelEnergy3[j3].chart_energy_kwh\n                                            });\n                                            generationTotal = generationTotal + dataModelEnergy3[j3].chart_energy_kwh;\n                                        } else {\n                                            arrMeasure.push({\n                                                \"ID\": i3 + 1 + \"_\" + j3 + 1,\n                                                \"DateTime\": dataModelEnergy3[j3].download_time,\n                                                \"Device Name\": dataListEnergy[i3].export_devicename,\n                                                \"Measured Irradiance (w/m2)\": dataModelEnergy3[j3].chart_energy_kwh\n                                            });\n                                        }\n\n                                        rowItem3.push([dataModelEnergy3[j3].full_time, dataModelEnergy3[j3].chart_energy_kwh]);\n                                    }\n                                    if (chartParams.id_filter == 'today' && dataModelEnergy3.length < 24) {\n                                        for (var izero3 = dataModelEnergy3.length; izero3 < 24; izero3++) {\n                                            if (izero3 <= 11) {\n                                                categories.push([izero3 + \"AM\"]);\n                                                rowItem3.push([izero3 + \"AM\", 0]);\n                                            } else {\n                                                var pm = null;\n                                                if (izero3 < 12) {\n                                                    pm = izero3;\n                                                } else if (izero3 == 12) {\n                                                    pm = (izero3);\n                                                } else {\n                                                    pm = izero3 - 12;\n                                                }\n                                                rowItem3.push([pm + \"PM\", 0]);\n                                                categories.push([pm + \"PM\"]);\n                                            }\n                                        }\n                                    }\n                                }\n\n                                seriesItem3.data = rowItem3;\n                                series.push(seriesItem3);\n                            }\n                            break;\n                    }\n                } else {\n                    curItem.tickInterval = 1;\n                    categories = [];\n\n                    for (var i4 = 0; i4 < dataListEnergy.length; i4++) {\n                        var seriesItem4 = {};\n                        seriesItem4.name = dataListEnergy[i4].devicename;\n                        seriesItem4.data = [];\n                        seriesItem4.zIndex = i4;\n                        if (dataListEnergy[i4].type == 'energy') {\n                            seriesItem4.type = 'spline';\n                            seriesItem4.tooltip = {\n                                valueSuffix: ' kW'\n                            };\n                        } else if (dataListEnergy[i4].type == 'irradiance') {\n                            seriesItem4.type = 'spline';\n                            seriesItem4.xAxis = 1;\n                            seriesItem4.yAxis = 1;\n                            seriesItem4.lineWidth = 3;\n                            seriesItem4.tooltip = {\n                                valueSuffix: ' kW'\n                            };\n                            seriesItem4.id = 's1';\n                            seriesItem4.marker = {\n                                radius: 1.5\n                            };\n\n                        }\n\n                        // Put data energy\n                        var dataModelEnergy4 = dataListEnergy[i4].data_energy;\n                        var rowItem4 = [];\n                        if (Libs.isArrayData(dataModelEnergy4)) {\n                            for (var j4 = 0; j4 < dataModelEnergy4.length; j4++) {\n                                categories.push([dataModelEnergy4[j4].categories_time]);\n                                if (dataListEnergy[i4].type == 'energy') {\n                                    arrEnergy.push({\n                                        \"ID\": i4 + 1 + \"_\" + j4 + 1,\n                                        \"DateTime\": dataModelEnergy4[j4].download_time,\n                                        \"Device Name\": dataListEnergy[i4].export_devicename,\n                                        \"Power (kW)\": dataModelEnergy4[j4].chart_energy_kwh\n                                    });\n\n                                    generationTotal = generationTotal + dataModelEnergy4[j4].chart_energy_kwh;\n                                } else {\n                                    arrMeasure.push({\n                                        \"ID\": i4 + 1 + \"_\" + j4 + 1,\n                                        \"DateTime\": dataModelEnergy4[j4].download_time,\n                                        \"Device Name\": dataListEnergy[i4].export_devicename,\n                                        \"Measured Irradiance (w/m2)\": dataModelEnergy4[j4].chart_energy_kwh\n                                    });\n                                }\n\n                                rowItem4.push([dataModelEnergy4[j4].full_time, dataModelEnergy4[j4].chart_energy_kwh]);\n                            }\n                            if (chartParams.id_filter == 'today' && dataModelEnergy4.length < 24) {\n                                for (var izero4 = dataModelEnergy4.length; izero4 < 24; izero4++) {\n                                    if (izero4 <= 11) {\n                                        categories.push([izero4 + \"AM\"]);\n                                        rowItem4.push([izero4 + \"AM\", 0]);\n                                    } else {\n                                        var pm4 = null;\n                                        if (izero3 < 12) {\n                                            pm4 = izero4;\n                                        } else if (izero4 == 12) {\n                                            pm4 = (izero4);\n                                        } else {\n                                            pm4 = izero4 - 12;\n                                        }\n                                        rowItem4.push([pm4 + \"PM\", 0]);\n                                        categories.push([pm4 + \"PM\"]);\n                                    }\n                                }\n                            }\n                        }\n\n                        seriesItem4.data = rowItem4;\n                        series.push(seriesItem4);\n                    }\n                }\n\n                curItem.generation_total = generationTotal;\n                curItem.lastUpdated = lastUpdated;\n                self.setState({\n                    dataCategories: categories,\n                    dataEnergy: dataEnergy,\n                    dataIrradiance: dataIrradiance,\n                    curItem: curItem,\n                    dataEnergyExport: arrEnergy,\n                    dataMeasureExport: arrMeasure,\n                    series: series\n                }, () => {\n                    self.loadChartOption();\n                });\n            }\n        });\n\n    }\n\n\n    loadChartOption() {\n        let { clientHeight } = this.myRef.current;\n        var chartOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            title: { text: null },\n\n            chart: {\n                type: 'column',\n                // height: window.innerWidth <= 1024 ? 300 : null\n                height: clientHeight ? clientHeight - 15 : null\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n                borderWidth: 0,\n                showInLegend: false\n            },\n            colors: ['#82cdff', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n            xAxis: [\n                {\n                    title: { text: \"Power\", enabled: false },\n                    alignTicks: true,\n                    gridLineWidth: 1,\n                    tickInterval: this.state.curItem.tickInterval,\n                    visible: true,\n                    categories: this.state.dataCategories\n                },\n\n                {\n                    title: { text: 'Data', enabled: false },\n                    tickInterval: 1,\n                    opposite: true,\n                    visible: false,\n                },\n\n            ],\n\n            yAxis: [{\n                min: 0,\n                title: {\n                    text: 'kW',\n                    enabled: true\n                },\n                lineWidth: 1,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }, {\n                title: { text: 'Watts/meter²', enabled: false },\n                lineWidth: 1,\n                opposite: true,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: false\n                },\n            }\n            ],\n\n            plotOptions: {\n                column: {\n                    stacking: 'normal'\n                },\n            },\n\n            tooltip: {\n                shared: false,\n                crosshairs: true\n            },\n            series: this.state.series\n        };\n\n        this.setState({ chartOption: chartOption });\n    }\n\n\n\n    onClickNext() {\n        var { chartParams } = this.state, self = this;\n        var showNextBtn = chartParams.showNextBtn;\n        var compareDate = Libs.compareDate(Libs.addDays(chartParams.end_date, 1), 'MM/DD/YYYY', chartParams.current_time);\n        switch (chartParams.id_filter) {\n            case 'today':\n                if (compareDate >= 0) {\n                    showNextBtn = false;\n                    chartParams.end_date = Libs.addDays(chartParams.end_date, 1);\n                    chartParams.start_date = chartParams.end_date;\n                } else {\n                    chartParams.end_date = Libs.addDays(chartParams.end_date, 1);\n                    chartParams.start_date = chartParams.end_date;\n                    showNextBtn = true;\n                }\n                break;\n\n            case 'this_month':\n                var tcurrent = new Date(chartParams.end_date);\n                var ycurrent = tcurrent.getFullYear(), mcurrent = tcurrent.getMonth();\n                if (compareDate > 0) {\n                    showNextBtn = false;\n                    chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                    chartParams.start_date = moment(new Date(ycurrent, mcurrent, 1)).format('MM/DD/YYYY HH:mm');\n                } else {\n                    chartParams.end_date = moment(Libs.addMonths(new Date(ycurrent, mcurrent, 1), 1)).endOf('month').format('MM/DD/YYYY HH:mm');\n                    chartParams.start_date = moment(Libs.addMonths(new Date(ycurrent, mcurrent, 1), 1)).format('MM/DD/YYYY HH:mm');\n                    showNextBtn = true;\n                }\n\n                break;\n\n            case 'last_month':\n                var tc = new Date(Libs.getCurrentMMDDYYYYHI());\n                var yc = tc.getFullYear(), mc = tc.getMonth();\n\n                if (moment(chartParams.current_time).format('MM/YYYY') == moment(chartParams.end_date).format('MM/YYYY')) {\n                    showNextBtn = false;\n                    chartParams.end_date = moment(Libs.addMonths(new Date(yc, mc, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n                    chartParams.start_date = moment(Libs.addMonths(new Date(yc, mc, 1), -1)).format('MM/DD/YYYY HH:mm');\n\n                } else {\n                    var tlast = new Date(chartParams.end_date);\n                    var ylast = tlast.getFullYear(), mlast = tlast.getMonth();\n                    chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), 1)).endOf('month').format('MM/DD/YYYY HH:mm');\n                    chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), 1)).format('MM/DD/YYYY HH:mm');\n                    showNextBtn = true;\n                }\n\n                break;\n\n\n            case '12_month':\n                var tstart = new Date(chartParams.end_date);\n                var ystart = tstart.getFullYear(), mstart = tstart.getMonth();\n                var compareEndDate = moment(Libs.addMonths(new Date(ystart, mstart, 1), 12)).format('YYYY');\n                if (moment(chartParams.current_time).format('YYYY') <= compareEndDate) {\n                    chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n\n                    var tn = new Date(chartParams.end_date);\n                    var yn = tn.getFullYear(), mn = tn.getMonth();\n                    chartParams.start_date = moment(Libs.addMonths(new Date(yn, mn, 1), -12)).format('MM/DD/YYYY HH:mm');\n                    showNextBtn = false;\n                } else {\n                    var te = new Date(chartParams.end_date);\n                    var ye = te.getFullYear(), me = te.getMonth();\n                    chartParams.end_date = moment(Libs.addMonths(new Date(ye, me, 1), 12)).endOf('month').format('MM/DD/YYYY HH:mm');\n                    var ts = new Date(chartParams.start_date);\n                    var ys = ts.getFullYear(), ms = ts.getMonth();\n                    chartParams.start_date = moment(Libs.addMonths(new Date(ys, ms, 1), 12)).format('MM/DD/YYYY HH:mm');\n                    showNextBtn = true;\n                }\n\n                break;\n        }\n        chartParams.showNextBtn = showNextBtn;\n        this.setState({\n            chartParams: chartParams\n        }, () => {\n            //   self.getDataChart();\n        })\n    }\n\n\n    onClickPrev() {\n        let self = this;\n        var { chartParams } = this.state;\n        chartParams.showNextBtn = true;\n        var t = new Date(chartParams.end_date);\n        var y = t.getFullYear(), m = t.getMonth();\n        switch (chartParams.id_filter) {\n            case 'today':\n                chartParams.end_date = moment(Libs.addDays(chartParams.end_date, -1)).format('MM/DD/YYYY HH:mm:ss');\n                chartParams.start_date = chartParams.end_date;\n                break;\n            case 'last_month':\n            case 'this_month':\n                chartParams.end_date = moment(Libs.addMonths(new Date(y, m, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n                chartParams.start_date = moment(Libs.addMonths(new Date(y, m, 1), -1)).format('MM/DD/YYYY HH:mm');\n                break;\n            case '12_month':\n                chartParams.end_date = moment(Libs.addMonths(new Date(y, m, 1), -12)).endOf('month').format('MM/DD/YYYY HH:mm');\n                var tstart = new Date(chartParams.start_date);\n                var ystart = tstart.getFullYear(), mstart = tstart.getMonth();\n                chartParams.start_date = moment(Libs.addMonths(new Date(ystart, mstart, 1), -12)).format('MM/DD/YYYY HH:mm');\n                break;\n        }\n        this.setState({\n            chartParams: chartParams\n        }, () => {\n            //   self.getDataChart();\n        })\n    }\n\n    handleClickOutside = (event) => {\n        const { target } = event;\n        var { chartParams } = this.state, self = this;\n        if (!Libs.isBlank(this.wrapperRef.current) && !this.wrapperRef.current.contains(target)) {\n            if (chartParams.show_filter) {\n                chartParams.show_filter = false;\n                self.setState({\n                    chartParams: chartParams\n                })\n            }\n\n        }\n    }\n\n    onClickShowFilter = () => {\n        var { chartParams } = this.state;\n        chartParams.show_filter = true;\n        this.setState({\n            chartParams: chartParams\n        });\n    }\n\n    onClickFilter = (value) => {\n        var { chartParams, dataFilter, curItem } = this.state;\n        var self = this;\n        if (!Libs.isArrayData(dataFilter)) return;\n        var item = Libs.find(dataFilter, 'id', value);\n        if (Libs.isObjectEmpty(item)) return;\n\n        chartParams.id_filter = item.id;\n        chartParams.text_filter = item.text;\n        chartParams.show_filter = false;\n        chartParams.showNextBtn = false;\n\n        switch (value) {\n            case 'today':\n                chartParams.start_date = Libs.getCurrentMMDDYYYYHI();\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                break;\n            case 'lifetime':\n                chartParams.start_date = moment(curItem.commissioning).format('MM/DD/YYYY HH:mm:ss');\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                break;\n            case 'this_month':\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                var t = new Date(chartParams.end_date);\n                var y = t.getFullYear(), m = t.getMonth();\n                chartParams.start_date = moment(new Date(y, m, 1)).format('MM/DD/YYYY HH:mm');\n                break;\n            case 'last_month':\n                var tlast = new Date(Libs.getCurrentMMDDYYYYHI());\n                var ylast = tlast.getFullYear(), mlast = tlast.getMonth();\n                chartParams.end_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).endOf('month').format('MM/DD/YYYY HH:mm');\n                chartParams.start_date = moment(Libs.addMonths(new Date(ylast, mlast, 1), -1)).format('MM/DD/YYYY HH:mm');\n                break;\n\n            case '12_month':\n                chartParams.start_date = moment(Libs.addMonths(Libs.getCurrentMMDDYYYYHI(), -12)).format('MM/DD/YYYY HH:mm:ss');\n                chartParams.end_date = Libs.getCurrentMMDDYYYYHI();\n                break;\n        }\n\n        this.setState({\n            chartParams: chartParams\n        }, () => {\n            // self.getDataChart();\n        });\n    }\n\n    changeViewMinute = (value) => {\n        var chartParams = this.state.chartParams, self = this;\n        if (Libs.isBlank(value)) return;\n        chartParams.data_send_time = value;\n        this.setState({ chartParams: chartParams }, () => {\n            // self.getDataChart();\n        });\n    }\n\n\n\n\n\n\n\n\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_company = this.employee.id_company;\n        // AnalyticsService.instance.getList(params, (data, total_row) => {\n        //     if (Libs.isArrayData(data)) {\n        //         self.setState({\n        //             dataList: data\n        //         });\n\n        //         var total = parseInt(total_row / self.state.searchParam.limit);\n        //         if (total_row % self.state.searchParam.limit > 0) {\n        //             total = total + 1;\n        //         }\n        //         self.paging.total = total;\n        //         self.paging.current = self.state.searchParam.index;\n        //         self.paging.currentInput = self.state.searchParam.index;\n        //         self.state.total_row = total_row;\n\n        //     } else {\n        //         self.setState({\n        //             dataList: [],\n        //             total_row: 0\n        //         });\n        //         self.paging.total = 0;\n        //         self.paging.current = 1;\n        //         self.paging.currentInput = 1;\n        //     }\n        //     self.forceUpdate();\n        // });\n    }\n\n\n    onClickAdd = () => {\n        let curItem = this.state.curItem;\n        let data = [];\n        var allLanguage = this.state.allLanguage;\n        curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n        curItem.tabActive = '';\n        allLanguage.map((language, index) => {\n            if (language.is_default === 1) { curItem.tabActive = language.is_default === 1 ? language.iso_code : ''; }\n            let item = {\n                is_default: language.is_default,\n                iso_code: language.iso_code,\n                id_language: language.id,\n                name: \"\",\n                description: \"\"\n            };\n            return data.push(item);\n        });\n\n        curItem.data = data;\n        this.setState({\n            curItem: curItem,\n            add: true\n        });\n\n    };\n\n    onClickCloseAdd = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            add: false\n        })\n    }\n\n    onClickCloseDelete = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n\n        var params = this.state.curItem;\n        params.id_company = item.id_company;\n        params.id = item.id;\n\n        // ChartDeviceDiagnosticsService.instance.getDetail(params, data => {\n        //     if (data) {\n        //         item.data = data.data;\n        //         item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        //         let curTransItem = Libs.find(data.data,'is_default', 1);\n        //         if(Libs.isObjectEmpty(curTransItem)){ return false; }\n        //         item[\"name_\"+curTransItem.iso_code] = curTransItem.name;\n\n        //         if(Libs.isArrayData(data.data)){\n        //             var dataLang = data.data;\n        //             dataLang.map((row, index) => {\n        //                 if(row.is_default === 1){\n        //                     item.tabActive = row.iso_code;\n        //                 }\n        //                 return 1;\n        //             });\n        //         }\n\n        //         self.setState({\n        //             curItem: item,\n        //             add: true\n        //         });\n        //     }\n        // }, false);\n    }\n\n\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onStatusChange = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        item.id_company = this.employee.id_company;\n        item.id_language = this.employee.id_language;\n\n        var isActiveUpdate = item.status;\n        if (isActiveUpdate * 1 === 1) {\n            isActiveUpdate = 0;\n        }\n        else {\n            isActiveUpdate = 1;\n        }\n\n        item.status = isActiveUpdate;\n        item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n\n        // ChartDeviceDiagnosticsService.instance.updateStatus(item, function (status, msg) {\n        //     if (status) {\n        //         self.setState({\n        //             dataList: self.state.dataList\n        //         });\n        //     }\n        // });\n    }\n\n    /**\n   * @description Item click event delete\n   * @author Long.Pham 12-05-2021\n   * @param index Order element in the list\n   */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n    /**\n      * @description Call form search\n      * @author Long.Pham 12/05/2021\n      */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.name = null;\n        searchParam.id = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ChartDeviceDiagnostics)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}