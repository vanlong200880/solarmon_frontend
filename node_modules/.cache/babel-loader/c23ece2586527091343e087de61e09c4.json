{"ast":null,"code":"/**\n * 判断数据类型\n * @author ydr.me\n * @create 2014-11-15 12:54\n * @update 2014年11月19日10:20:51\n */\nvar udf = 'undefined';\nvar REG_URL = /^https?:\\/\\/([a-z\\d-]+\\.)+[a-z]{2,5}(:[1-9]\\d{0,4})?(\\/|\\/[\\w#!:.?+=&%@!\\-\\/]+)?$/i;\nvar REG_EMAIL = /^\\w+[-+.\\w]*@([a-z\\d-]+\\.)+[a-z]{2,5}$/i;\nvar REG_MOMGODB_ID = /^[\\da-z]{24}$/;\nvar REG_INVALID = /invalid/i;\nvar REG_DATE_DMY = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\nvar REG_DATE_YMD = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\nvar REG_DATE_DMYHm = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4} ([012]{0,1}[0-9]:[0-6][0-9])$/;\nvar REG_DATE_YMDHm = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01]) ([012]{0,1}[0-9]:[0-6][0-9])$/; // var fs = require('fs');\n\n/**\n * 判断数据类型，结果全部为小写<br>\n * 原始数据类型：boolean、number、string、undefined、symbol\n * @param {*} object 任何对象\n * @returns {string}\n *\n * @example\n * typeis();\n * // => \"undefined\"\n *\n * typeis(null);\n * // => \"null\"\n *\n * typeis(1);\n * // => \"number\"\n *\n * typeis(\"1\");\n * // => \"string\"\n *\n * typeis(!1);\n * // => \"boolean\"\n *\n * typeis({});\n * // => \"object\"\n *\n * typeis([]);\n * // => \"array\"\n *\n * typeis(/./);\n * // => \"regexp\"\n *\n * typeis(window);\n * // => \"window\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(NaN);\n * // => \"nan\"\n *\n * typeis(Infinity);\n * // => \"number\"\n *\n * typeis(function(){});\n * // => \"function\"\n *\n * typeis(new Image);\n * // => \"element\"\n *\n * typeis(new Date);\n * // => \"date\"\n *\n * typeis(document.links);\n * // => \"htmlcollection\"\n *\n * typeis(document.body.dataset);\n * // => \"domstringmap\"\n *\n * typeis(document.body.classList);\n * // => \"domtokenlist\"\n *\n * typeis(document.body.childNodes);\n * // => \"nodelist\"\n *\n * typeis(document.createAttribute('abc'));\n * // => \"attr\"\n *\n * typeis(document.createComment('abc'));\n * // => \"comment\"\n *\n * typeis(new Event('abc'));\n * // => \"event\"\n *\n * typeis(document.createExpression());\n * // => \"xpathexpression\"\n *\n * typeis(document.createRange());\n * // => \"range\"\n *\n * typeis(document.createTextNode(''));\n * // => \"text\"\n */\n\nvar typeis = function (object) {\n  if (object !== object) {\n    return 'nan';\n  } else if (typeof object === udf) {\n    return udf;\n  } else if (typeof window !== udf && object === window) {\n    return 'window';\n  } else if (typeof global !== udf && object === global) {\n    return 'global';\n  } else if (typeof document !== udf && object === document) {\n    return 'document';\n  } else if (object === null) {\n    return 'null';\n  }\n\n  var ret = Object.prototype.toString.call(object).slice(8, -1).toLowerCase();\n\n  if (/element/.test(ret)) {\n    return 'element';\n  }\n\n  return ret;\n};\n\nvar i = 0;\nvar jud = 'string number function object undefined null nan element regexp boolean array window document global'.split(' ');\n\nvar makeStatic = function (tp) {\n  var tp2 = tp.replace(/^\\w/, function (w) {\n    return w.toUpperCase();\n  });\n  /**\n   * 快捷判断\n   * @name typeis\n   * @property string {Function}\n   * @property String {Function}\n   * @property number {Function}\n   * @property Number {Function}\n   * @property function {Function}\n   * @property Function {Function}\n   * @property object {Function}\n   * @property Object {Function}\n   * @property undefined {Function}\n   * @property Undefined {Function}\n   * @property null {Function}\n   * @property Null {Function}\n   * @property nan {Function}\n   * @property Nan {Function}\n   * @property element {Function}\n   * @property Element {Function}\n   * @property regexp {Function}\n   * @property Regexp {Function}\n   * @property boolean {Function}\n   * @property Boolean {Function}\n   * @property array {Function}\n   * @property Array {Function}\n   * @property window {Function}\n   * @property Window {Function}\n   * @property document {Function}\n   * @property Document {Function}\n   * @property global {Function}\n   * @property Global {Function}\n   * @returns {boolean}\n   */\n\n  typeis[tp] = typeis[tp2] = function (obj) {\n    return typeis(obj) === tp;\n  };\n};\n/**\n * 复制静态方法\n */\n\n\nfor (; i < jud.length; i++) {\n  makeStatic(jud[i]);\n}\n/**\n * 判断是否为纯对象\n * @param obj {*}\n * @returns {Boolean}\n *\n * @example\n * type.isPlainObject({a:1});\n * // => true\n */\n\n\ntypeis.plainObject = function (obj) {\n  return typeis(obj) === 'object' && Object.getPrototypeOf(obj) === Object.prototype;\n};\n/**\n * 判断是否为空对象\n * @param obj {*}\n */\n\n\ntypeis.emptyObject = function (obj) {\n  return typeis.plainObject(obj) && Object.keys(obj).length === 0;\n};\n/**\n * 判断是否为 undefine 或 null\n * @param obj\n * @returns {Boolean}\n */\n\n\ntypeis.empty = function (obj) {\n  return typeof obj === udf || typeis.null(obj);\n};\n/**\n * 判断是否为 URL 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.url('http://123.com/123/456/?a=3#00');\n * // => true\n */\n\n\ntypeis.url = function (string) {\n  return typeis(string) === 'string' && REG_URL.test(string);\n};\n/**\n * 判断是否为 email 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.email('abc@def.com');\n * // => true\n */\n\n\ntypeis.email = function (string) {\n  return typeis(string) === 'string' && REG_EMAIL.test(string);\n};\n/**\n * 判断能否转换为合法Date\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月2日21:07:33\n */\n\n\ntypeis.validDate = function (anything) {\n  return !REG_INVALID.test(new Date(anything).toString());\n};\n/**\n * 判断对象是否为 Error 实例\n * @param anything\n * @returns {boolean}\n *\n * @example\n * typeis.error(new TypeError());\n * // => true\n */\n\n\ntypeis.error = function (anything) {\n  return anything && anything instanceof Error;\n}; /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\n/**\n * 判断是否为合法的mongodbID\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月3日23:11:37\n */\n\n\ntypeis.mongoId = function (anything) {\n  return typeof (anything !== udf && typeof anything._bsontype !== udf && anything._bsontype === 'ObjectId') || REG_MOMGODB_ID.test(anything.toString());\n};\n/**\n * 判断对象是否为空,null/undefined/\"\"\n * @param  any {*} 任何对象\n * @return {Boolean}\n * @version 1.0\n * 2014年5月27日21:33:04\n */\n\n\ntypeis.emptyData = function (any) {\n  return typeis.empty(any) || any === '';\n};\n/**\n * 判断路径是否为目录\n * @param _path\n * @returns {Boolean}\n */\n// typeis.directory = function (_path) {\n//     var stat;\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n//     return stat.isDirectory();\n// };\n\n/**\n * 判断路径是否为文件\n * @param _path\n * @returns {Boolean}\n */\n// typeis.file = function (_path) {\n//     var stat;\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n//     return stat.isFile();\n// };\n// @link: https://www.zhihu.com/question/19813460/answer/13042143\n// A类地址：10.0.0.0--10.255.255.255\n// B类地址：172.16.0.0--172.31.255.255\n// C类地址：192.168.0.0--192.168.255.255\n\n/**\n * 判断是否为局域网 IP\n * @param ip\n * @returns {boolean}\n */\n\n\ntypeis.localIP = function (ip) {\n  ip = String(ip).toUpperCase().trim();\n\n  if (ip.indexOf('::') > -1 || ip === 'localhost' || ip.indexOf('127.0.0.1') > -1) {\n    return true;\n  }\n\n  var ipList = ip.split('.');\n  var part0 = Number(ipList[0]);\n  var part1 = Number(ipList[1]); //var part2 = Number(ipList[2]);\n  //var part3 = Number(ipList[3]);\n  // A 类\n\n  if (part0 === 10) {\n    return true;\n  } // B 类\n\n\n  if (part0 === 172 && part1 > 15 && part1 < 32) {\n    return true;\n  }\n\n  return part0 === 192 && part1 === 168;\n};\n/**\n * Check valid date\n * @param {String} date \n * @param {Boolean} format \n */\n\n\ntypeis.date = function (date, format) {\n  var dateformat = REG_DATE_DMY;\n\n  if (typeof format !== 'undefined' && format === true) {\n    dateformat = REG_DATE_YMD;\n  } // Match the date format through regular expression\n\n\n  if (date.match(dateformat)) {\n    //Test which seperator is used '/' or '-'\n    var opera1 = date.split('/');\n    var opera2 = date.split('-');\n    var lopera1 = opera1.length;\n    var lopera2 = opera2.length; // Extract the string into month, date and year\n\n    var pdate = '';\n\n    if (lopera1 > 1) {\n      pdate = date.split('/');\n    } else if (lopera2 > 1) {\n      pdate = date.split('-');\n    }\n\n    var dd = parseInt(pdate[0]);\n    var mm = parseInt(pdate[1]);\n    var yy = parseInt(pdate[2]);\n\n    if (format) {\n      dd = parseInt(pdate[2]);\n      mm = parseInt(pdate[1]);\n      yy = parseInt(pdate[0]);\n    } // Create list of days of a month [assume there is no leap year by default]\n\n\n    var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    if (mm === 1 || mm > 2) {\n      if (dd > ListofDays[mm - 1]) {\n        return false;\n      }\n\n      return true;\n    }\n\n    if (mm === 2) {\n      var lyear = false;\n\n      if (!(yy % 4) && yy % 100 || !(yy % 400)) {\n        lyear = true;\n      }\n\n      if (lyear === false && dd >= 29) {\n        return false;\n      }\n\n      if (lyear === true && dd > 29) {\n        return false;\n      }\n\n      return true;\n    }\n  } else {\n    return false;\n  }\n};\n\ntypeis.dateTimeToMinute = function (date, format) {\n  var dateformat = REG_DATE_DMYHm;\n\n  if (typeof format !== 'undefined' && format === true) {\n    dateformat = REG_DATE_YMDHm;\n  } // Match the date format through regular expression\n\n\n  if (date.match(dateformat)) {\n    //Test which seperator is used '/' or '-'\n    var opera1 = date.split('/'),\n        opera2 = date.split('-'),\n        lopera1 = opera1.length,\n        lopera2 = opera2.length,\n        time = \"\"; // Extract the string into month, date and year\n\n    var pdate = '';\n\n    if (lopera1 > 1) {\n      pdate = date.split('/');\n    } else if (lopera2 > 1) {\n      pdate = date.split('-');\n    }\n\n    var split = pdate[2].split(\" \");\n    time = split[1];\n    var dd = parseInt(pdate[0]),\n        mm = parseInt(pdate[1]),\n        yy = parseInt(split[0]),\n        hh = parseInt(time[1].split(\":\")[0]),\n        m = parseInt(time[1].split(\":\")[1]);\n\n    if (format) {\n      dd = parseInt(split[0]);\n      mm = parseInt(pdate[1]);\n      yy = parseInt(pdate[0]);\n    }\n\n    var isValid = checkValidDate(dd, mm, yy);\n\n    if (!isValid) {\n      return false;\n    }\n\n    if (hh > 24) {\n      return false;\n    }\n\n    if (m > 60) {\n      return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar checkValidDate = function (dd, mm, yy) {\n  // Create list of days of a month [assume there is no leap year by default]\n  var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  if (mm === 1 || mm > 2) {\n    if (dd > ListofDays[mm - 1]) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (mm === 2) {\n    var lyear = false;\n\n    if (!(yy % 4) && yy % 100 || !(yy % 400)) {\n      lyear = true;\n    }\n\n    if (lyear === false && dd >= 29) {\n      return false;\n    }\n\n    if (lyear === true && dd > 29) {\n      return false;\n    }\n\n    return true;\n  }\n};\n/**\n * @name string\n * @name number\n * @name function\n * @name object\n * @name undefined\n * @name null\n * @name nan\n * @name element\n * @name regexp\n * @name boolean\n * @name array\n * @name window\n * @name document\n * @name global\n * @type {Function}\n */\n\n\nmodule.exports = typeis;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/validator/libs/typeis.js"],"names":["udf","REG_URL","REG_EMAIL","REG_MOMGODB_ID","REG_INVALID","REG_DATE_DMY","REG_DATE_YMD","REG_DATE_DMYHm","REG_DATE_YMDHm","typeis","object","window","global","document","ret","Object","prototype","toString","call","slice","toLowerCase","test","i","jud","split","makeStatic","tp","tp2","replace","w","toUpperCase","obj","length","plainObject","getPrototypeOf","emptyObject","keys","empty","null","url","string","email","validDate","anything","Date","error","Error","mongoId","_bsontype","emptyData","any","localIP","ip","String","trim","indexOf","ipList","part0","Number","part1","date","format","dateformat","match","opera1","opera2","lopera1","lopera2","pdate","dd","parseInt","mm","yy","ListofDays","lyear","dateTimeToMinute","time","hh","m","isValid","checkValidDate","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,GAAG,GAAG,WAAV;AACA,IAAIC,OAAO,GAAG,oFAAd;AACA,IAAIC,SAAS,GAAG,yCAAhB;AACA,IAAIC,cAAc,GAAG,eAArB;AACA,IAAIC,WAAW,GAAG,UAAlB;AACA,IAAIC,YAAY,GAAG,8DAAnB;AACA,IAAIC,YAAY,GAAG,gEAAnB;AACA,IAAIC,cAAc,GAAG,2FAArB;AACA,IAAIC,cAAc,GAAG,6FAArB,C,CACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,UAAUC,MAAV,EAAkB;AAC3B,MAAIA,MAAM,KAAKA,MAAf,EAAuB;AACnB,WAAO,KAAP;AACH,GAFD,MAEO,IAAI,OAAOA,MAAP,KAAkBV,GAAtB,EAA2B;AAC9B,WAAOA,GAAP;AACH,GAFM,MAEA,IAAI,OAAOW,MAAP,KAAkBX,GAAlB,IAAyBU,MAAM,KAAKC,MAAxC,EAAgD;AACnD,WAAO,QAAP;AACH,GAFM,MAEA,IAAI,OAAOC,MAAP,KAAkBZ,GAAlB,IAAyBU,MAAM,KAAKE,MAAxC,EAAgD;AACnD,WAAO,QAAP;AACH,GAFM,MAEA,IAAI,OAAOC,QAAP,KAAoBb,GAApB,IAA2BU,MAAM,KAAKG,QAA1C,EAAoD;AACvD,WAAO,UAAP;AACH,GAFM,MAEA,IAAIH,MAAM,KAAK,IAAf,EAAqB;AACxB,WAAO,MAAP;AACH;;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","sourcesContent":["/**\n * 判断数据类型\n * @author ydr.me\n * @create 2014-11-15 12:54\n * @update 2014年11月19日10:20:51\n */\n\n\nvar udf = 'undefined';\nvar REG_URL = /^https?:\\/\\/([a-z\\d-]+\\.)+[a-z]{2,5}(:[1-9]\\d{0,4})?(\\/|\\/[\\w#!:.?+=&%@!\\-\\/]+)?$/i;\nvar REG_EMAIL = /^\\w+[-+.\\w]*@([a-z\\d-]+\\.)+[a-z]{2,5}$/i;\nvar REG_MOMGODB_ID = /^[\\da-z]{24}$/;\nvar REG_INVALID = /invalid/i;\nvar REG_DATE_DMY = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\nvar REG_DATE_YMD = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\nvar REG_DATE_DMYHm = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4} ([012]{0,1}[0-9]:[0-6][0-9])$/;\nvar REG_DATE_YMDHm = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01]) ([012]{0,1}[0-9]:[0-6][0-9])$/;\n// var fs = require('fs');\n\n\n/**\n * 判断数据类型，结果全部为小写<br>\n * 原始数据类型：boolean、number、string、undefined、symbol\n * @param {*} object 任何对象\n * @returns {string}\n *\n * @example\n * typeis();\n * // => \"undefined\"\n *\n * typeis(null);\n * // => \"null\"\n *\n * typeis(1);\n * // => \"number\"\n *\n * typeis(\"1\");\n * // => \"string\"\n *\n * typeis(!1);\n * // => \"boolean\"\n *\n * typeis({});\n * // => \"object\"\n *\n * typeis([]);\n * // => \"array\"\n *\n * typeis(/./);\n * // => \"regexp\"\n *\n * typeis(window);\n * // => \"window\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(NaN);\n * // => \"nan\"\n *\n * typeis(Infinity);\n * // => \"number\"\n *\n * typeis(function(){});\n * // => \"function\"\n *\n * typeis(new Image);\n * // => \"element\"\n *\n * typeis(new Date);\n * // => \"date\"\n *\n * typeis(document.links);\n * // => \"htmlcollection\"\n *\n * typeis(document.body.dataset);\n * // => \"domstringmap\"\n *\n * typeis(document.body.classList);\n * // => \"domtokenlist\"\n *\n * typeis(document.body.childNodes);\n * // => \"nodelist\"\n *\n * typeis(document.createAttribute('abc'));\n * // => \"attr\"\n *\n * typeis(document.createComment('abc'));\n * // => \"comment\"\n *\n * typeis(new Event('abc'));\n * // => \"event\"\n *\n * typeis(document.createExpression());\n * // => \"xpathexpression\"\n *\n * typeis(document.createRange());\n * // => \"range\"\n *\n * typeis(document.createTextNode(''));\n * // => \"text\"\n */\nvar typeis = function (object) {\n    if (object !== object) {\n        return 'nan';\n    } else if (typeof object === udf) {\n        return udf;\n    } else if (typeof window !== udf && object === window) {\n        return 'window';\n    } else if (typeof global !== udf && object === global) {\n        return 'global';\n    } else if (typeof document !== udf && object === document) {\n        return 'document';\n    } else if (object === null) {\n        return 'null';\n    }\n\n    var ret = Object.prototype.toString.call(object).slice(8, -1).toLowerCase();\n\n    if (/element/.test(ret)) {\n        return 'element';\n    }\n    return ret;\n};\nvar i = 0;\nvar jud = 'string number function object undefined null nan element regexp boolean array window document global'.split(' ');\nvar makeStatic = function (tp) {\n    var tp2 = tp.replace(/^\\w/, function (w) {\n        return w.toUpperCase();\n    });\n    /**\n     * 快捷判断\n     * @name typeis\n     * @property string {Function}\n     * @property String {Function}\n     * @property number {Function}\n     * @property Number {Function}\n     * @property function {Function}\n     * @property Function {Function}\n     * @property object {Function}\n     * @property Object {Function}\n     * @property undefined {Function}\n     * @property Undefined {Function}\n     * @property null {Function}\n     * @property Null {Function}\n     * @property nan {Function}\n     * @property Nan {Function}\n     * @property element {Function}\n     * @property Element {Function}\n     * @property regexp {Function}\n     * @property Regexp {Function}\n     * @property boolean {Function}\n     * @property Boolean {Function}\n     * @property array {Function}\n     * @property Array {Function}\n     * @property window {Function}\n     * @property Window {Function}\n     * @property document {Function}\n     * @property Document {Function}\n     * @property global {Function}\n     * @property Global {Function}\n     * @returns {boolean}\n     */\n    typeis[tp] = typeis[tp2] = function (obj) {\n        return typeis(obj) === tp;\n    };\n};\n\n\n/**\n * 复制静态方法\n */\nfor (; i < jud.length; i++) {\n    makeStatic(jud[i]);\n}\n\n\n/**\n * 判断是否为纯对象\n * @param obj {*}\n * @returns {Boolean}\n *\n * @example\n * type.isPlainObject({a:1});\n * // => true\n */\ntypeis.plainObject = function (obj) {\n    return typeis(obj) === 'object' && Object.getPrototypeOf(obj) === Object.prototype;\n};\n\n\n/**\n * 判断是否为空对象\n * @param obj {*}\n */\ntypeis.emptyObject = function (obj) {\n    return typeis.plainObject(obj) && Object.keys(obj).length === 0;\n};\n\n\n/**\n * 判断是否为 undefine 或 null\n * @param obj\n * @returns {Boolean}\n */\ntypeis.empty = function (obj) {\n    return typeof obj === udf || typeis.null(obj);\n};\n\n\n/**\n * 判断是否为 URL 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.url('http://123.com/123/456/?a=3#00');\n * // => true\n */\ntypeis.url = function (string) {\n    return typeis(string) === 'string' && REG_URL.test(string);\n};\n\n\n/**\n * 判断是否为 email 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.email('abc@def.com');\n * // => true\n */\ntypeis.email = function (string) {\n    return typeis(string) === 'string' && REG_EMAIL.test(string);\n};\n\n\n/**\n * 判断能否转换为合法Date\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月2日21:07:33\n */\ntypeis.validDate = function (anything) {\n    return !REG_INVALID.test(new Date(anything).toString());\n};\n\n\n/**\n * 判断对象是否为 Error 实例\n * @param anything\n * @returns {boolean}\n *\n * @example\n * typeis.error(new TypeError());\n * // => true\n */\ntypeis.error = function (anything) {\n    return anything && (anything instanceof Error);\n};\n\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * 判断是否为合法的mongodbID\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月3日23:11:37\n */\ntypeis.mongoId = function (anything) {\n    return typeof (anything !== udf && typeof anything._bsontype !== udf &&\n        anything._bsontype === 'ObjectId') || REG_MOMGODB_ID.test(anything.toString());\n};\n\n\n/**\n * 判断对象是否为空,null/undefined/\"\"\n * @param  any {*} 任何对象\n * @return {Boolean}\n * @version 1.0\n * 2014年5月27日21:33:04\n */\ntypeis.emptyData = function (any) {\n    return typeis.empty(any) || any === '';\n};\n\n\n/**\n * 判断路径是否为目录\n * @param _path\n * @returns {Boolean}\n */\n// typeis.directory = function (_path) {\n//     var stat;\n\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n\n//     return stat.isDirectory();\n// };\n\n\n/**\n * 判断路径是否为文件\n * @param _path\n * @returns {Boolean}\n */\n// typeis.file = function (_path) {\n//     var stat;\n\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n\n//     return stat.isFile();\n// };\n\n\n// @link: https://www.zhihu.com/question/19813460/answer/13042143\n// A类地址：10.0.0.0--10.255.255.255\n// B类地址：172.16.0.0--172.31.255.255\n// C类地址：192.168.0.0--192.168.255.255\n/**\n * 判断是否为局域网 IP\n * @param ip\n * @returns {boolean}\n */\ntypeis.localIP = function (ip) {\n    ip = String(ip).toUpperCase().trim();\n\n    if (ip.indexOf('::') > -1 || ip === 'localhost' || ip.indexOf('127.0.0.1') > -1) {\n        return true;\n    }\n\n    var ipList = ip.split('.');\n    var part0 = Number(ipList[0]);\n    var part1 = Number(ipList[1]);\n    //var part2 = Number(ipList[2]);\n    //var part3 = Number(ipList[3]);\n\n    // A 类\n    if (part0 === 10) {\n        return true;\n    }\n\n    // B 类\n    if (part0 === 172 && part1 > 15 && part1 < 32) {\n        return true;\n    }\n\n    return part0 === 192 && part1 === 168;\n};\n\n/**\n * Check valid date\n * @param {String} date \n * @param {Boolean} format \n */\ntypeis.date = function (date, format) {\n    var dateformat = REG_DATE_DMY;\n    if (typeof format !== 'undefined' && format === true) {\n        dateformat = REG_DATE_YMD;\n    }\n\n    // Match the date format through regular expression\n    if (date.match(dateformat)) {\n        //Test which seperator is used '/' or '-'\n        var opera1 = date.split('/');\n        var opera2 = date.split('-');\n        var lopera1 = opera1.length;\n        var lopera2 = opera2.length;\n        // Extract the string into month, date and year\n        var pdate= '';\n        if (lopera1 > 1) {\n            pdate = date.split('/');\n        }\n        else if (lopera2 > 1) {\n            pdate = date.split('-');\n        }\n        var dd = parseInt(pdate[0]);\n        var mm = parseInt(pdate[1]);\n        var yy = parseInt(pdate[2]);\n\n        if (format) {\n            dd = parseInt(pdate[2]);\n            mm = parseInt(pdate[1]);\n            yy = parseInt(pdate[0]);\n        }\n\n        // Create list of days of a month [assume there is no leap year by default]\n        var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        if (mm === 1 || mm > 2) {\n            if (dd > ListofDays[mm - 1]) {\n                return false;\n            }\n            return true;\n        }\n        if (mm === 2) {\n            var lyear = false;\n            if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n                lyear = true;\n            }\n            if ((lyear === false) && (dd >= 29)) {\n                return false;\n            }\n            if ((lyear === true) && (dd > 29)) {\n                return false;\n            }\n            return true;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\ntypeis.dateTimeToMinute = function (date, format) {\n    var dateformat = REG_DATE_DMYHm;\n    if (typeof format !== 'undefined' && format === true) {\n        dateformat = REG_DATE_YMDHm;\n    }\n\n    // Match the date format through regular expression\n    if (date.match(dateformat)) {\n        //Test which seperator is used '/' or '-'\n        var opera1 = date.split('/'),\n            opera2 = date.split('-'),\n            lopera1 = opera1.length,\n            lopera2 = opera2.length,\n            time = \"\";\n        // Extract the string into month, date and year\n        var pdate = '';\n        if (lopera1 > 1) {\n            pdate = date.split('/');\n            \n        }\n        else if (lopera2 > 1) {\n            pdate = date.split('-');\n        }\n        var split = (pdate[2]).split(\" \");\n        time = split[1];\n        var dd = parseInt(pdate[0]),\n            mm = parseInt(pdate[1]),\n            yy = parseInt(split[0]),\n            hh = parseInt(time[1].split(\":\")[0]),\n            m = parseInt(time[1].split(\":\")[1]);\n\n        if (format) {\n            dd = parseInt(split[0]);\n            mm = parseInt(pdate[1]);\n            yy = parseInt(pdate[0]);\n        }\n\n        var isValid = checkValidDate(dd, mm, yy);\n        if (!isValid) {\n            return false;\n        }\n        if (hh > 24) {\n            return false;\n        }\n        if (m > 60) {\n            return false;\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nvar checkValidDate = function (dd, mm, yy) {\n    // Create list of days of a month [assume there is no leap year by default]\n    var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (mm === 1 || mm > 2) {\n        if (dd > ListofDays[mm - 1]) {\n            return false;\n        }\n        return true;\n    }\n    if (mm === 2) {\n        var lyear = false;\n        if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n            lyear = true;\n        }\n        if ((lyear === false) && (dd >= 29)) {\n            return false;\n        }\n        if ((lyear === true) && (dd > 29)) {\n            return false;\n        }\n        return true;\n    }\n}\n\n\n/**\n * @name string\n * @name number\n * @name function\n * @name object\n * @name undefined\n * @name null\n * @name nan\n * @name element\n * @name regexp\n * @name boolean\n * @name array\n * @name window\n * @name document\n * @name global\n * @type {Function}\n */\nmodule.exports = typeis;\n"]},"metadata":{},"sourceType":"module"}