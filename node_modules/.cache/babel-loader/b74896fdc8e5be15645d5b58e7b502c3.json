{"ast":null,"code":"import _toConsumableArray from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import ChartDeviceProfileJsx from'./ChartDeviceProfile.jsx';import BaseComponent from'../../../../../BaseComponent';import Libs from'../../../../../../utils/Libs';import{withTranslation}from'react-i18next';import MainAnalyticsService from'../../../../../../services/MainAnalyticsService';import*as FileSaver from'file-saver';import*as XLSX from'xlsx';import moment from'moment';var ChartDeviceProfile=/*#__PURE__*/function(_BaseComponent){_inherits(ChartDeviceProfile,_BaseComponent);var _super=_createSuper(ChartDeviceProfile);function ChartDeviceProfile(props,context){var _this;_classCallCheck(this,ChartDeviceProfile);_this=_super.call(this,props,context);_this.downloadDataPerformanceToday=function(){var _this$state=_this.state,dataPerformanceToday=_this$state.dataPerformanceToday,curItem=_this$state.curItem;if(!Libs.isArrayData(dataPerformanceToday))return;var dataExport=[];for(var i=0,len=dataPerformanceToday.length;i<len;i++){dataExport.push({'Time':dataPerformanceToday[i].time_full,'Project name':curItem.name,'Energy now (kWh)':dataPerformanceToday[i].activeEnergy,\"Power now (kW)\":dataPerformanceToday[i].activePower});}var fileType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';var fileExtension='.xlsx';var ws=XLSX.utils.json_to_sheet(dataExport,{skipHeader:false});var wb={SheetNames:['Performance - Today'],Sheets:{'Performance - Today':ws}};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,\"Export-performance-today-\"+moment().format('YYYY-MM-DD_hh:mm:ss')+fileExtension);};_this.downloadDataP12Month=function(){var _this$state2=_this.state,dataP12Months=_this$state2.dataP12Months,curItem=_this$state2.curItem;if(!Libs.isArrayData(dataP12Months))return;var dataExport=[];for(var i=0,len=dataP12Months.length;i<len;i++){dataExport.push({'Time':dataP12Months[i].time_full,'Project name':curItem.name,'Energy now (kWh)':dataP12Months[i].activeEnergy,\"Power now (kW)\":dataP12Months[i].activePower});}var fileType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';var fileExtension='.xlsx';var ws=XLSX.utils.json_to_sheet(dataExport,{skipHeader:false});var wb={SheetNames:['Performance - Last 12 months'],Sheets:{'Performance - Last 12 months':ws}};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,\"Export-performance-12-month-\"+moment().format('YYYY-MM-DD_hh:mm:ss')+fileExtension);};_this.downloadDataP30Days=function(){var _this$state3=_this.state,dataP30Days=_this$state3.dataP30Days,curItem=_this$state3.curItem;if(!Libs.isArrayData(dataP30Days))return;var dataExport=[];for(var i=0,len=dataP30Days.length;i<len;i++){dataExport.push({'Time':dataP30Days[i].time_full,'Project name':curItem.name,'Energy now (kWh)':dataP30Days[i].activeEnergy,\"Power now (kW)\":dataP30Days[i].activePower});}var fileType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';var fileExtension='.xlsx';var ws=XLSX.utils.json_to_sheet(dataExport,{skipHeader:false});var wb={SheetNames:['Performance - Last 30 days'],Sheets:{'Performance - Last 30 days':ws}};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,\"Export-performance-30-days-\"+moment().format('YYYY-MM-DD_hh:mm:ss')+fileExtension);};_this.downloadDataMaxPower=function(){var _this$state4=_this.state,maxPower12Months=_this$state4.maxPower12Months,curItem=_this$state4.curItem;if(!Libs.isArrayData(maxPower12Months))return;var dataExport=[];for(var i=0,len=maxPower12Months.length;i<len;i++){dataExport.push({'Time':maxPower12Months[i].time_full,'Project name':curItem.name,\"Max power (kW)\":maxPower12Months[i].activePower});}var fileType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';var fileExtension='.xlsx';var ws=XLSX.utils.json_to_sheet(dataExport,{skipHeader:false});var wb={SheetNames:['Daily Max Power'],Sheets:{'Daily Max Power':ws}};var excelBuffer=XLSX.write(wb,{bookType:'xlsx',type:'array'});var data=new Blob([excelBuffer],{type:fileType});FileSaver.saveAs(data,\"Export-max-power-12-months-\"+moment().format('YYYY-MM-DD_hh:mm:ss')+fileExtension);};_this.state={hash_id:_this.props.hash_id,curItem:{},dataPerformanceToday:[],dataP12Months:[],dataP30Days:[],maxPower12Months:[]};_this.jsxTemplate=ChartDeviceProfileJsx;return _this;}_createClass(ChartDeviceProfile,[{key:\"componentDidMount\",value:function componentDidMount(){this.getDataChartProfile();}},{key:\"getDataChartProfile\",value:function getDataChartProfile(){var _this$state5=this.state,hash_id=_this$state5.hash_id,curItem=_this$state5.curItem,self=this;if(Libs.isBlank(hash_id))return;var params={hash_id:hash_id,id_language:this.employee.id_language,id_employee:this.employee.id_employee,type:'private'};MainAnalyticsService.instance.getDataChartProfile(params,function(data){if(data){curItem.name=data.name;curItem.current_day=data.current_day;// Performance - Today\nvar dataListEnergy=data.dataChartProfile;var series=[],categories=[];var seriesItemEnergy={data:[],name:'Energy yield',zIndex:1,type:'column',tooltip:{valueSuffix:' kWh'}};var seriesItemPower={data:[],name:'Power',zIndex:1,type:'spline',xAxis:1,yAxis:1,id:'s1',lineWidth:1,tooltip:{valueSuffix:' kW'},marker:{radius:1.5}};var rowItemEnergy=[],rowItemPower=[];if(Libs.isArrayData(dataListEnergy)){categories=['5AM','5:05 AM','5:10 AM','5:15 AM','5:20 AM','5:25 AM','5:30 AM','5:35 AM','5:40 AM','5:45 AM','5:50 AM','5:55 AM','6AM','6:05 AM','6:10 AM','6:15 AM','6:20 AM','6:25 AM','6:30 AM','6:35 AM','6:40 AM','6:45 AM','6:50 AM','6:55 AM','7AM','7:05 AM','7:10 AM','7:15 AM','7:20 AM','7:25 AM','7:30 AM','7:35 AM','7:40 AM','7:45 AM','7:50 AM','7:55 AM','8AM','8:05 AM','8:10 AM','8:15 AM','8:20 AM','8:25 AM','8:30 AM','8:35 AM','8:40 AM','8:45 AM','8:50 AM','8:55 AM','9AM','9:05 AM','9:10 AM','9:15 AM','9:20 AM','9:25 AM','9:30 AM','9:35 AM','9:40 AM','9:45 AM','9:50 AM','9:55 AM','10AM','10:05 AM','10:10 AM','10:15 AM','10:20 AM','10:25 AM','10:30 AM','10:35 AM','10:40 AM','10:45 AM','10:50 AM','10:55 AM','11AM','11:05 AM','11:10 AM','11:15 AM','11:20 AM','11:25 AM','11:30 AM','11:35 AM','11:40 AM','11:45 AM','11:50 AM','11:55 AM','12PM','12:05 PM','12:10 PM','12:15 PM','12:20 PM','12:25 PM','12:30 PM','12:35 PM','12:40 PM','12:45 PM','12:50 PM','12:55 PM','13PM','13:05 PM','13:10 PM','13:15 PM','13:20 PM','13:25 PM','13:30 PM','13:35 PM','13:40 PM','13:45 PM','13:50 PM','13:55 PM','14PM','14:05 PM','14:10 PM','14:15 PM','14:20 PM','14:25 PM','14:30 PM','14:35 PM','14:40 PM','14:45 PM','14:50 PM','14:55 PM','15PM','15:05 PM','15:10 PM','15:15 PM','15:20 PM','15:25 PM','15:30 PM','15:35 PM','15:40 PM','15:45 PM','15:50 PM','15:55 PM','16PM','16:05 PM','16:10 PM','16:15 PM','16:20 PM','16:25 PM','16:30 PM','16:35 PM','16:40 PM','16:45 PM','16:50 PM','16:55 PM','17PM','17:05 PM','17:10 PM','17:15 PM','17:20 PM','17:25 PM','17:30 PM','17:35 PM','17:40 PM','17:45 PM','17:50 PM','17:55 PM','18PM','18:05 PM','18:10 PM','18:15 PM','18:20 PM','18:25 PM','18:30 PM','18:35 PM','18:40 PM','18:45 PM','18:50 PM','18:55 PM','19PM'];var range5Minute=0;for(var i=0;i<dataListEnergy.length;i++){if(i==0){var hour=Libs.dateFormat(dataListEnergy[i].time_format,'HH','YYYY-MM-DD HH:mm:ss');var minutes=Libs.dateFormat(dataListEnergy[i].time_format,'mm','YYYY-MM-DD HH:mm:ss');range5Minute=(parseInt(hour)-5)*12+Math.round(minutes/5);if(range5Minute>0){for(var j=0;j<range5Minute;j++){var dateF=Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[i].time_format,'YYYY-MM-DD 05:00','YYYY-MM-DD HH:mm:ss'),j*5),'DD/MM/YYYY HH:mm','YYYY-MM-DD HH:mm:ss');rowItemEnergy.push([dateF,null]);rowItemPower.push([dateF,null]);}}}rowItemEnergy.push([dataListEnergy[i].time_full,dataListEnergy[i].activeEnergy]);rowItemPower.push([dataListEnergy[i].time_full,dataListEnergy[i].activePower]);}// set chart line end\nvar range5MinuteLine=range5Minute+dataListEnergy.length;if(range5MinuteLine<168&&range5MinuteLine>0){var _lastDate='';for(var izero1=range5MinuteLine;izero1<168;izero1++){if(izero1==range5MinuteLine){_lastDate=dataListEnergy[dataListEnergy.length-1].time_format;}if(_lastDate!=null){_lastDate=Libs.addMinutes(_lastDate,5);rowItemEnergy.push([Libs.dateFormat(_lastDate,'YYYY-MM-DD HH:mm','YYYY-MM-DD HH:mm:ss'),null]);rowItemPower.push([Libs.dateFormat(_lastDate,'YYYY-MM-DD HH:mm','YYYY-MM-DD HH:mm:ss'),null]);}}}seriesItemEnergy.data=rowItemEnergy;series.push(seriesItemEnergy);seriesItemPower.data=rowItemPower;series.push(seriesItemPower);}// Performance - Last 12 months\nvar rowItemEnergyP12Month=[],rowItemPowerP12Month=[];var performanceLast12Months=data.performanceLast12Months;var seriesP12Month=[],categoriesP12Month=[];var seriesItemEnergyP12Month={data:[],name:'Energy yield',zIndex:1,type:'column',tooltip:{valueSuffix:' kWh'}};var seriesItemPowerP12Month={data:[],name:'Power',zIndex:1,type:'spline',xAxis:1,yAxis:1,id:'s1',lineWidth:1,tooltip:{valueSuffix:' kW'},marker:{radius:1.5}};// Performance - Last 12 months\nif(Libs.isArrayData(performanceLast12Months)){categoriesP12Month=[];var lastDate='',minMonth='',maxMonth='';for(var _i=0;_i<performanceLast12Months.length;_i++){categoriesP12Month.push([performanceLast12Months[_i].category_time_format]);lastDate=performanceLast12Months[_i].time_format;if(_i===0){var date=new Date(performanceLast12Months[_i].time_format);minMonth=date.getMonth()+1;}if(_i===performanceLast12Months.length-1){var _date=new Date(performanceLast12Months[_i].time_format);maxMonth=_date.getMonth()+1;}rowItemEnergyP12Month.push([performanceLast12Months[_i].time_full,performanceLast12Months[_i].activeEnergy]);rowItemPowerP12Month.push([performanceLast12Months[_i].time_full,performanceLast12Months[_i].activePower]);}if(!Libs.isBlank(minMonth)&&!Libs.isBlank(maxMonth)){var firstArrEnergyP12Month=[],firstArrayPowerP12Month=[],firstArrCategoryP12Month=[];var _date2=new Date(lastDate);for(var _i2=1;_i2<minMonth;_i2++){firstArrEnergyP12Month.push([(_i2<10?'0'+_i2:_i2)+\"/\"+_date2.getFullYear(),null]);firstArrayPowerP12Month.push([(_i2<10?'0'+_i2:_i2)+\"/\"+_date2.getFullYear(),null]);firstArrCategoryP12Month.push([Libs.getStringMonthNumber(_i2)]);}firstArrCategoryP12Month.push.apply(firstArrCategoryP12Month,_toConsumableArray(categoriesP12Month));firstArrEnergyP12Month.push.apply(firstArrEnergyP12Month,_toConsumableArray(rowItemEnergyP12Month));firstArrayPowerP12Month.push.apply(firstArrayPowerP12Month,_toConsumableArray(rowItemPowerP12Month));for(var _i3=maxMonth+1;_i3<=12;_i3++){firstArrEnergyP12Month.push([(_i3<10?'0'+_i3:_i3)+\"/\"+_date2.getFullYear(),null]);firstArrayPowerP12Month.push([(_i3<10?'0'+_i3:_i3)+\"/\"+_date2.getFullYear(),null]);firstArrCategoryP12Month.push([Libs.getStringMonthNumber(_i3)]);}categoriesP12Month=firstArrCategoryP12Month;rowItemEnergyP12Month=firstArrEnergyP12Month;rowItemPowerP12Month=firstArrayPowerP12Month;}seriesItemEnergyP12Month.data=rowItemEnergyP12Month;seriesP12Month.push(seriesItemEnergyP12Month);seriesItemPowerP12Month.data=rowItemPowerP12Month;seriesP12Month.push(seriesItemPowerP12Month);}// Performance - Last 31 days\nvar dataP30Days=data.performanceLast30Days;var rowItemEnergyP30Days=[],rowItemPowerP30Days=[];var seriesP30Days=[],categoriesP30Days=[];var seriesItemEnergyP30Days={data:[],name:'Energy yield',zIndex:1,type:'column',tooltip:{valueSuffix:' kWh'}};var seriesItemPowerP30Days={data:[],name:'Power',zIndex:1,type:'spline',xAxis:1,yAxis:1,id:'s1',lineWidth:1,tooltip:{valueSuffix:' kW'},marker:{radius:1.5}};if(Libs.isArrayData(dataP30Days)){categoriesP30Days=[];for(var _i4=0;_i4<dataP30Days.length;_i4++){categoriesP30Days.push([dataP30Days[_i4].category_time_format]);rowItemEnergyP30Days.push([dataP30Days[_i4].time_full,dataP30Days[_i4].activeEnergy]);rowItemPowerP30Days.push([dataP30Days[_i4].time_full,dataP30Days[_i4].activePower]);}seriesItemEnergyP30Days.data=rowItemEnergyP30Days;seriesP30Days.push(seriesItemEnergyP30Days);seriesItemPowerP30Days.data=rowItemPowerP30Days;seriesP30Days.push(seriesItemPowerP30Days);}// Daily Max Power - Last 12 Months\nvar maxPower12Months=data.maxPower12Months;var rowItemPowerMaxPower=[];var seriesMaxPower=[];var seriesItemPowerMax={data:[],name:'Measured AC Power (max)',tooltip:{valueSuffix:' kW'}};if(Libs.isArrayData(maxPower12Months)){for(var _i5=0;_i5<maxPower12Months.length;_i5++){rowItemPowerMaxPower.push([Date.UTC(maxPower12Months[_i5].year,maxPower12Months[_i5].month,maxPower12Months[_i5].day),maxPower12Months[_i5].activePower]);}seriesItemPowerMax.data=rowItemPowerMaxPower;seriesMaxPower.push(seriesItemPowerMax);}self.setState({curItem:curItem,dataCategories:categories,dataPerformanceToday:dataListEnergy,series:series,dataP12Months:performanceLast12Months,dataCategoriesP12Month:categoriesP12Month,seriesP12Month:seriesP12Month,dataP30Days:dataP30Days,categoriesP30Days:categoriesP30Days,seriesP30Days:seriesP30Days,maxPower12Months:maxPower12Months,seriesMaxPower:seriesMaxPower},function(){self.performanceTodayOption();});}},false);}},{key:\"performanceTodayOption\",value:function performanceTodayOption(){// Performance - Today\nvar performanceTodayOption={credits:{enabled:false},exporting:{enabled:true},title:{text:null},chart:{type:'column'},legend:{layout:'horizontal',align:'center',verticalAlign:'bottom',borderWidth:0,showInLegend:false},colors:['#82cdff','#f5893b','#f2ae1b','#1e477f','#e68600','#00b767','#ffc300'],xAxis:[{title:{text:\"Power\",enabled:false},alignTicks:true,gridLineWidth:1,tickInterval:24,visible:true,categories:this.state.dataCategories},{title:{text:'Data',enabled:false},tickInterval:1,opposite:true,visible:false}],yAxis:[{min:0,title:{text:'kWh',enabled:true},lineWidth:1,gridLineWidth:1,labels:{enabled:true}},{title:{text:'kW',enabled:true},lineWidth:1,opposite:true,gridLineWidth:1,labels:{enabled:true}}],plotOptions:{column:{stacking:'normal'}},tooltip:{shared:false,crosshairs:true},series:this.state.series};// Performance - Last 12 months\nvar performance12MonthOption={credits:{enabled:false},exporting:{enabled:true},title:{text:null},chart:{type:'column'},legend:{layout:'horizontal',align:'center',verticalAlign:'bottom',borderWidth:0,showInLegend:false},colors:['#82cdff','#f5893b','#f2ae1b','#1e477f','#e68600','#00b767','#ffc300'],xAxis:[{title:{text:\"Power\",enabled:false},alignTicks:true,gridLineWidth:1,tickInterval:1,visible:true,categories:this.state.dataCategoriesP12Month},{title:{text:'Data',enabled:false},tickInterval:1,opposite:true,visible:false}],yAxis:[{min:0,title:{text:'kWh',enabled:true},lineWidth:1,gridLineWidth:1,labels:{enabled:true}},{title:{text:'kW',enabled:true},lineWidth:1,opposite:true,gridLineWidth:1,labels:{enabled:true}}],plotOptions:{column:{stacking:'normal'}},tooltip:{shared:false,crosshairs:true},series:this.state.seriesP12Month};// Performance - Last 12 months\nvar performance30DaysOption={credits:{enabled:false},exporting:{enabled:true},title:{text:null},chart:{type:'xy'},legend:{layout:'horizontal',align:'center',verticalAlign:'bottom',borderWidth:0,showInLegend:false},colors:['#82cdff','#f5893b','#f2ae1b','#1e477f','#e68600','#00b767','#ffc300'],xAxis:[{title:{text:\"Power\",enabled:false},alignTicks:true,gridLineWidth:1,tickInterval:3,visible:true,categories:this.state.categoriesP30Days,crosshair:true},{title:{text:'Data',enabled:false},tickInterval:1,opposite:true,visible:false}],yAxis:[{min:0,title:{text:'kWh',enabled:true},lineWidth:1,gridLineWidth:1,labels:{enabled:true}},{title:{text:'kW',enabled:true},lineWidth:1,opposite:true,gridLineWidth:1,labels:{enabled:true}}],tooltip:{shared:false,crosshairs:true},series:this.state.seriesP30Days};// Daily Max Power - Last 12 Months\nvar maxPowerOption={credits:{enabled:false},exporting:{enabled:true},chart:{zoomType:'xy'},title:{text:null},colors:['#f5893b','#66bc51','#004ec3'],xAxis:{type:'datetime',dateTimeLabelFormats:{month:'%e. %b',year:'%Y'},title:{text:null,enabled:false}},yAxis:{title:{text:'kW'},min:0,lineWidth:1,gridLineWidth:1},plotOptions:{series:{marker:{enabled:true}}},series:this.state.seriesMaxPower};this.setState({performanceTodayOption:performanceTodayOption,performance12MonthOption:performance12MonthOption,performance30DaysOption:performance30DaysOption,maxPowerOption:maxPowerOption});}},{key:\"render\",value:function render(){return this.jsxTemplate.call(this);}}]);return ChartDeviceProfile;}(BaseComponent);var HighOrderComponentTranslated=withTranslation('common')(ChartDeviceProfile);export default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModulePrivate/Analytics/ChartDeviceProfile/ChartDeviceProfile.js"],"names":["ChartDeviceProfileJsx","BaseComponent","Libs","withTranslation","MainAnalyticsService","FileSaver","XLSX","moment","ChartDeviceProfile","props","context","downloadDataPerformanceToday","state","dataPerformanceToday","curItem","isArrayData","dataExport","i","len","length","push","time_full","name","activeEnergy","activePower","fileType","fileExtension","ws","utils","json_to_sheet","skipHeader","wb","SheetNames","Sheets","excelBuffer","write","bookType","type","data","Blob","saveAs","format","downloadDataP12Month","dataP12Months","downloadDataP30Days","dataP30Days","downloadDataMaxPower","maxPower12Months","hash_id","jsxTemplate","getDataChartProfile","self","isBlank","params","id_language","employee","id_employee","instance","current_day","dataListEnergy","dataChartProfile","series","categories","seriesItemEnergy","zIndex","tooltip","valueSuffix","seriesItemPower","xAxis","yAxis","id","lineWidth","marker","radius","rowItemEnergy","rowItemPower","range5Minute","hour","dateFormat","time_format","minutes","parseInt","Math","round","j","dateF","addMinutes","range5MinuteLine","lastDate","izero1","rowItemEnergyP12Month","rowItemPowerP12Month","performanceLast12Months","seriesP12Month","categoriesP12Month","seriesItemEnergyP12Month","seriesItemPowerP12Month","minMonth","maxMonth","category_time_format","date","Date","getMonth","firstArrEnergyP12Month","firstArrayPowerP12Month","firstArrCategoryP12Month","getFullYear","getStringMonthNumber","performanceLast30Days","rowItemEnergyP30Days","rowItemPowerP30Days","seriesP30Days","categoriesP30Days","seriesItemEnergyP30Days","seriesItemPowerP30Days","rowItemPowerMaxPower","seriesMaxPower","seriesItemPowerMax","UTC","year","month","day","setState","dataCategories","dataCategoriesP12Month","performanceTodayOption","credits","enabled","exporting","title","text","chart","legend","layout","align","verticalAlign","borderWidth","showInLegend","colors","alignTicks","gridLineWidth","tickInterval","visible","opposite","min","labels","plotOptions","column","stacking","shared","crosshairs","performance12MonthOption","performance30DaysOption","crosshair","maxPowerOption","zoomType","dateTimeLabelFormats","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ChartDeviceProfileJsx from './ChartDeviceProfile.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport MainAnalyticsService from '../../../../../../services/MainAnalyticsService';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport moment from 'moment';\nclass ChartDeviceProfile extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            hash_id: this.props.hash_id,\n            curItem: {},\n            dataPerformanceToday: [],\n            dataP12Months: [],\n            dataP30Days: [],\n            maxPower12Months: []\n        };\n\n        this.jsxTemplate = ChartDeviceProfileJsx;\n    }\n\n    componentDidMount() {\n        this.getDataChartProfile();\n    }\n\n    getDataChartProfile() {\n        var { hash_id, curItem } = this.state, self = this;\n        if (Libs.isBlank(hash_id)) return;\n        var params = {\n            hash_id: hash_id,\n            id_language: this.employee.id_language,\n            id_employee: this.employee.id_employee,\n            type: 'private'\n        };\n\n        MainAnalyticsService.instance.getDataChartProfile(params, data => {\n            if (data) {\n                curItem.name = data.name;\n                curItem.current_day = data.current_day;\n                // Performance - Today\n                var dataListEnergy = data.dataChartProfile;\n                var series = [], categories = [];\n                let seriesItemEnergy = {\n                    data: [],\n                    name: 'Energy yield',\n                    zIndex: 1,\n                    type: 'column',\n                    tooltip: {\n                        valueSuffix: ' kWh'\n                    }\n                };\n\n                let seriesItemPower = {\n                    data: [],\n                    name: 'Power',\n                    zIndex: 1,\n                    type: 'spline',\n                    xAxis: 1,\n                    yAxis: 1,\n                    id: 's1',\n                    lineWidth: 1,\n                    tooltip: {\n                        valueSuffix: ' kW'\n                    },\n                    marker: {\n                        radius: 1.5\n                    }\n                };\n                var rowItemEnergy = [], rowItemPower = [];\n\n                if (Libs.isArrayData(dataListEnergy)) {\n                    categories = [\n                        '5AM', '5:05 AM', '5:10 AM', '5:15 AM', '5:20 AM', '5:25 AM', '5:30 AM', '5:35 AM', '5:40 AM', '5:45 AM', '5:50 AM', '5:55 AM',\n                        '6AM', '6:05 AM', '6:10 AM', '6:15 AM', '6:20 AM', '6:25 AM', '6:30 AM', '6:35 AM', '6:40 AM', '6:45 AM', '6:50 AM', '6:55 AM',\n                        '7AM', '7:05 AM', '7:10 AM', '7:15 AM', '7:20 AM', '7:25 AM', '7:30 AM', '7:35 AM', '7:40 AM', '7:45 AM', '7:50 AM', '7:55 AM',\n                        '8AM', '8:05 AM', '8:10 AM', '8:15 AM', '8:20 AM', '8:25 AM', '8:30 AM', '8:35 AM', '8:40 AM', '8:45 AM', '8:50 AM', '8:55 AM',\n                        '9AM', '9:05 AM', '9:10 AM', '9:15 AM', '9:20 AM', '9:25 AM', '9:30 AM', '9:35 AM', '9:40 AM', '9:45 AM', '9:50 AM', '9:55 AM',\n                        '10AM', '10:05 AM', '10:10 AM', '10:15 AM', '10:20 AM', '10:25 AM', '10:30 AM', '10:35 AM', '10:40 AM', '10:45 AM', '10:50 AM', '10:55 AM',\n                        '11AM', '11:05 AM', '11:10 AM', '11:15 AM', '11:20 AM', '11:25 AM', '11:30 AM', '11:35 AM', '11:40 AM', '11:45 AM', '11:50 AM', '11:55 AM',\n                        '12PM', '12:05 PM', '12:10 PM', '12:15 PM', '12:20 PM', '12:25 PM', '12:30 PM', '12:35 PM', '12:40 PM', '12:45 PM', '12:50 PM', '12:55 PM',\n                        '13PM', '13:05 PM', '13:10 PM', '13:15 PM', '13:20 PM', '13:25 PM', '13:30 PM', '13:35 PM', '13:40 PM', '13:45 PM', '13:50 PM', '13:55 PM',\n                        '14PM', '14:05 PM', '14:10 PM', '14:15 PM', '14:20 PM', '14:25 PM', '14:30 PM', '14:35 PM', '14:40 PM', '14:45 PM', '14:50 PM', '14:55 PM',\n                        '15PM', '15:05 PM', '15:10 PM', '15:15 PM', '15:20 PM', '15:25 PM', '15:30 PM', '15:35 PM', '15:40 PM', '15:45 PM', '15:50 PM', '15:55 PM',\n                        '16PM', '16:05 PM', '16:10 PM', '16:15 PM', '16:20 PM', '16:25 PM', '16:30 PM', '16:35 PM', '16:40 PM', '16:45 PM', '16:50 PM', '16:55 PM',\n                        '17PM', '17:05 PM', '17:10 PM', '17:15 PM', '17:20 PM', '17:25 PM', '17:30 PM', '17:35 PM', '17:40 PM', '17:45 PM', '17:50 PM', '17:55 PM',\n                        '18PM', '18:05 PM', '18:10 PM', '18:15 PM', '18:20 PM', '18:25 PM', '18:30 PM', '18:35 PM', '18:40 PM', '18:45 PM', '18:50 PM', '18:55 PM',\n                        '19PM'\n                    ];\n                    var range5Minute = 0;\n                    for (let i = 0; i < dataListEnergy.length; i++) {\n                        if (i == 0) {\n                            var hour = Libs.dateFormat(dataListEnergy[i].time_format, 'HH', 'YYYY-MM-DD HH:mm:ss');\n                            var minutes = Libs.dateFormat(dataListEnergy[i].time_format, 'mm', 'YYYY-MM-DD HH:mm:ss');\n                            range5Minute = ((parseInt(hour) - 5) * 12) + (Math.round(minutes / 5));\n                            if (range5Minute > 0) {\n                                for (var j = 0; j < range5Minute; j++) {\n                                    var dateF = Libs.dateFormat(Libs.addMinutes(Libs.dateFormat(dataListEnergy[i].time_format, 'YYYY-MM-DD 05:00', 'YYYY-MM-DD HH:mm:ss'), j * 5), 'DD/MM/YYYY HH:mm', 'YYYY-MM-DD HH:mm:ss');\n                                    rowItemEnergy.push([dateF, null]);\n                                    rowItemPower.push([dateF, null]);\n                                }\n                            }\n                        }\n                        rowItemEnergy.push([dataListEnergy[i].time_full, dataListEnergy[i].activeEnergy]);\n                        rowItemPower.push([dataListEnergy[i].time_full, dataListEnergy[i].activePower]);\n                    }\n\n\n                    // set chart line end\n                    let range5MinuteLine = range5Minute + dataListEnergy.length;\n\n                    if (range5MinuteLine < 168 && range5MinuteLine > 0) {\n                        let lastDate = '';\n                        for (let izero1 = range5MinuteLine; izero1 < 168; izero1++) {\n                            if (izero1 == range5MinuteLine) {\n                                lastDate = dataListEnergy[dataListEnergy.length - 1].time_format;\n                            }\n                            if (lastDate != null) {\n                                lastDate = Libs.addMinutes(lastDate, 5);\n                                rowItemEnergy.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                                rowItemPower.push([Libs.dateFormat(lastDate, 'YYYY-MM-DD HH:mm', 'YYYY-MM-DD HH:mm:ss'), null]);\n                            }\n                        }\n                    }\n                    seriesItemEnergy.data = rowItemEnergy;\n                    series.push(seriesItemEnergy);\n                    seriesItemPower.data = rowItemPower;\n                    series.push(seriesItemPower);\n\n                }\n\n                // Performance - Last 12 months\n                var rowItemEnergyP12Month = [], rowItemPowerP12Month = [];\n                var performanceLast12Months = data.performanceLast12Months;\n                var seriesP12Month = [], categoriesP12Month = [];\n                let seriesItemEnergyP12Month = {\n                    data: [],\n                    name: 'Energy yield',\n                    zIndex: 1,\n                    type: 'column',\n                    tooltip: {\n                        valueSuffix: ' kWh'\n                    }\n                };\n\n                let seriesItemPowerP12Month = {\n                    data: [],\n                    name: 'Power',\n                    zIndex: 1,\n                    type: 'spline',\n                    xAxis: 1,\n                    yAxis: 1,\n                    id: 's1',\n                    lineWidth: 1,\n                    tooltip: {\n                        valueSuffix: ' kW'\n                    },\n                    marker: {\n                        radius: 1.5\n                    }\n                };\n\n                // Performance - Last 12 months\n                if (Libs.isArrayData(performanceLast12Months)) {\n                    categoriesP12Month = [];\n                    var lastDate = '', minMonth = '', maxMonth = '';\n                    for (let i = 0; i < performanceLast12Months.length; i++) {\n                        categoriesP12Month.push([performanceLast12Months[i].category_time_format]);\n                        lastDate = performanceLast12Months[i].time_format;\n                        if (i === 0) {\n                            let date = new Date(performanceLast12Months[i].time_format);\n                            minMonth = date.getMonth() + 1;\n                        }\n\n                        if (i === performanceLast12Months.length - 1) {\n                            let date = new Date(performanceLast12Months[i].time_format);\n                            maxMonth = date.getMonth() + 1;\n                        }\n                        rowItemEnergyP12Month.push([performanceLast12Months[i].time_full, performanceLast12Months[i].activeEnergy]);\n                        rowItemPowerP12Month.push([performanceLast12Months[i].time_full, performanceLast12Months[i].activePower]);\n\n                    }\n\n                    if (!Libs.isBlank(minMonth) && !Libs.isBlank(maxMonth)) {\n                        let firstArrEnergyP12Month = [], firstArrayPowerP12Month = [], firstArrCategoryP12Month = [];\n                        let date = new Date(lastDate);\n\n                        for (let i = 1; i < minMonth; i++) {\n                            firstArrEnergyP12Month.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                            firstArrayPowerP12Month.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                            firstArrCategoryP12Month.push([Libs.getStringMonthNumber(i)]);\n                        }\n\n                        firstArrCategoryP12Month.push(...categoriesP12Month);\n                        firstArrEnergyP12Month.push(...rowItemEnergyP12Month);\n                        firstArrayPowerP12Month.push(...rowItemPowerP12Month);\n\n                        for (let i = maxMonth + 1; i <= 12; i++) {\n                            firstArrEnergyP12Month.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                            firstArrayPowerP12Month.push([(i < 10 ? ('0' + i) : i) + \"/\" + date.getFullYear(), null]);\n                            firstArrCategoryP12Month.push([Libs.getStringMonthNumber(i)]);\n                        }\n\n                        categoriesP12Month = firstArrCategoryP12Month;\n                        rowItemEnergyP12Month = firstArrEnergyP12Month;\n                        rowItemPowerP12Month = firstArrayPowerP12Month;\n                    }\n\n\n                    seriesItemEnergyP12Month.data = rowItemEnergyP12Month;\n                    seriesP12Month.push(seriesItemEnergyP12Month);\n                    seriesItemPowerP12Month.data = rowItemPowerP12Month;\n                    seriesP12Month.push(seriesItemPowerP12Month);\n\n\n                }\n\n                // Performance - Last 31 days\n                var dataP30Days = data.performanceLast30Days;\n                var rowItemEnergyP30Days = [], rowItemPowerP30Days = [];\n                var seriesP30Days = [], categoriesP30Days = [];\n                let seriesItemEnergyP30Days = {\n                    data: [],\n                    name: 'Energy yield',\n                    zIndex: 1,\n                    type: 'column',\n                    tooltip: {\n                        valueSuffix: ' kWh'\n                    }\n                };\n\n                let seriesItemPowerP30Days = {\n                    data: [],\n                    name: 'Power',\n                    zIndex: 1,\n                    type: 'spline',\n                    xAxis: 1,\n                    yAxis: 1,\n                    id: 's1',\n                    lineWidth: 1,\n                    tooltip: {\n                        valueSuffix: ' kW'\n                    },\n                    marker: {\n                        radius: 1.5\n                    }\n                };\n\n                if (Libs.isArrayData(dataP30Days)) {\n                    categoriesP30Days = [];\n                    for (let i = 0; i < dataP30Days.length; i++) {\n                        categoriesP30Days.push([dataP30Days[i].category_time_format]);\n                        rowItemEnergyP30Days.push([dataP30Days[i].time_full, dataP30Days[i].activeEnergy]);\n                        rowItemPowerP30Days.push([dataP30Days[i].time_full, dataP30Days[i].activePower]);\n\n                    }\n\n                    seriesItemEnergyP30Days.data = rowItemEnergyP30Days;\n                    seriesP30Days.push(seriesItemEnergyP30Days);\n                    seriesItemPowerP30Days.data = rowItemPowerP30Days;\n                    seriesP30Days.push(seriesItemPowerP30Days);\n\n                }\n\n                // Daily Max Power - Last 12 Months\n                var maxPower12Months = data.maxPower12Months;\n                var rowItemPowerMaxPower = [];\n                var seriesMaxPower = [];\n                let seriesItemPowerMax = {\n                    data: [],\n                    name: 'Measured AC Power (max)',\n                    tooltip: {\n                        valueSuffix: ' kW'\n                    }\n                };\n\n                if (Libs.isArrayData(maxPower12Months)) {\n                    for (let i = 0; i < maxPower12Months.length; i++) {\n                        rowItemPowerMaxPower.push([Date.UTC(maxPower12Months[i].year, maxPower12Months[i].month, maxPower12Months[i].day), maxPower12Months[i].activePower]);\n                    }\n                    seriesItemPowerMax.data = rowItemPowerMaxPower;\n                    seriesMaxPower.push(seriesItemPowerMax);\n                }\n\n                self.setState({\n                    curItem: curItem,\n                    dataCategories: categories,\n                    dataPerformanceToday: dataListEnergy,\n                    series: series,\n\n                    dataP12Months: performanceLast12Months,\n                    dataCategoriesP12Month: categoriesP12Month,\n                    seriesP12Month: seriesP12Month,\n\n                    dataP30Days: dataP30Days,\n                    categoriesP30Days: categoriesP30Days,\n                    seriesP30Days: seriesP30Days,\n\n                    maxPower12Months: maxPower12Months,\n                    seriesMaxPower: seriesMaxPower,\n\n                }, () => {\n                    self.performanceTodayOption();\n                });\n            }\n        }, false);\n    }\n\n\n\n\n    performanceTodayOption() {\n        // Performance - Today\n        var performanceTodayOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            title: { text: null },\n\n            chart: {\n                type: 'column'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n                borderWidth: 0,\n                showInLegend: false\n            },\n            colors: ['#82cdff', '#f5893b', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n            xAxis: [\n                {\n                    title: { text: \"Power\", enabled: false },\n                    alignTicks: true,\n                    gridLineWidth: 1,\n                    tickInterval: 24,\n                    visible: true,\n                    categories: this.state.dataCategories\n                },\n\n                {\n                    title: { text: 'Data', enabled: false },\n                    tickInterval: 1,\n                    opposite: true,\n                    visible: false,\n                },\n\n            ],\n\n            yAxis: [{\n                min: 0,\n                title: {\n                    text: 'kWh',\n                    enabled: true\n                },\n                lineWidth: 1,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }, {\n                title: { text: 'kW', enabled: true },\n                lineWidth: 1,\n                opposite: true,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }\n            ],\n\n            plotOptions: {\n                column: {\n                    stacking: 'normal'\n                },\n            },\n\n            tooltip: {\n                shared: false,\n                crosshairs: true\n            },\n            series: this.state.series\n        };\n\n        // Performance - Last 12 months\n        var performance12MonthOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            title: { text: null },\n\n            chart: {\n                type: 'column'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n                borderWidth: 0,\n                showInLegend: false\n            },\n            colors: ['#82cdff', '#f5893b', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n            xAxis: [\n                {\n                    title: { text: \"Power\", enabled: false },\n                    alignTicks: true,\n                    gridLineWidth: 1,\n                    tickInterval: 1,\n                    visible: true,\n                    categories: this.state.dataCategoriesP12Month\n                },\n\n                {\n                    title: { text: 'Data', enabled: false },\n                    tickInterval: 1,\n                    opposite: true,\n                    visible: false,\n                },\n\n            ],\n\n            yAxis: [{\n                min: 0,\n                title: {\n                    text: 'kWh',\n                    enabled: true\n                },\n                lineWidth: 1,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }, {\n                title: { text: 'kW', enabled: true },\n                lineWidth: 1,\n                opposite: true,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }\n            ],\n\n            plotOptions: {\n                column: {\n                    stacking: 'normal'\n                },\n            },\n\n            tooltip: {\n                shared: false,\n                crosshairs: true\n            },\n            series: this.state.seriesP12Month\n        };\n\n\n        // Performance - Last 12 months\n        var performance30DaysOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            title: { text: null },\n\n            chart: {\n                type: 'xy'\n            },\n            legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom',\n                borderWidth: 0,\n                showInLegend: false\n            },\n            colors: ['#82cdff', '#f5893b', '#f2ae1b', '#1e477f', '#e68600', '#00b767', '#ffc300'],\n            xAxis: [\n                {\n                    title: { text: \"Power\", enabled: false },\n                    alignTicks: true,\n                    gridLineWidth: 1,\n                    tickInterval: 3,\n                    visible: true,\n                    categories: this.state.categoriesP30Days,\n                    crosshair: true\n                },\n\n                {\n                    title: { text: 'Data', enabled: false },\n                    tickInterval: 1,\n                    opposite: true,\n                    visible: false,\n                },\n\n            ],\n\n            yAxis: [{\n                min: 0,\n                title: {\n                    text: 'kWh',\n                    enabled: true\n                },\n                lineWidth: 1,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }, {\n                title: { text: 'kW', enabled: true },\n                lineWidth: 1,\n                opposite: true,\n                gridLineWidth: 1,\n                labels: {\n                    enabled: true\n                },\n            }\n            ],\n\n            tooltip: {\n                shared: false,\n                crosshairs: true\n            },\n            series: this.state.seriesP30Days\n        };\n\n\n        // Daily Max Power - Last 12 Months\n        var maxPowerOption = {\n            credits: { enabled: false },\n            exporting: { enabled: true },\n            chart: {\n                zoomType: 'xy'\n            },\n            title: {\n                text: null\n            },\n            colors: ['#f5893b', '#66bc51', '#004ec3'],\n\n            xAxis: {\n                type: 'datetime',\n                dateTimeLabelFormats: {\n                    month: '%e. %b',\n                    year: '%Y'\n                },\n                title: {\n                    text: null,\n                    enabled: false \n                }\n            },\n            yAxis: {\n                title: {\n                    text: 'kW'\n                },\n                min: 0,\n                lineWidth: 1,\n                gridLineWidth: 1,\n            },\n\n            plotOptions: {\n                series: {\n                    marker: {\n                        enabled: true\n                    }\n                }\n            },\n            series: this.state.seriesMaxPower\n        };\n\n\n        this.setState({\n            performanceTodayOption: performanceTodayOption,\n            performance12MonthOption: performance12MonthOption,\n            performance30DaysOption: performance30DaysOption,\n            maxPowerOption: maxPowerOption\n        });\n    }\n\n\n\n    downloadDataPerformanceToday = () => {\n        var { dataPerformanceToday, curItem } = this.state;\n        if (!Libs.isArrayData(dataPerformanceToday)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = dataPerformanceToday.length; i < len; i++) {\n            dataExport.push({\n                'Time': dataPerformanceToday[i].time_full,\n                'Project name': curItem.name,\n                'Energy now (kWh)': dataPerformanceToday[i].activeEnergy,\n                \"Power now (kW)\": dataPerformanceToday[i].activePower\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Performance - Today'],\n            Sheets: { 'Performance - Today': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-performance-today-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n\n\n    downloadDataP12Month = () => {\n        var { dataP12Months, curItem } = this.state;\n        if (!Libs.isArrayData(dataP12Months)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = dataP12Months.length; i < len; i++) {\n            dataExport.push({\n                'Time': dataP12Months[i].time_full,\n                'Project name': curItem.name,\n                'Energy now (kWh)': dataP12Months[i].activeEnergy,\n                \"Power now (kW)\": dataP12Months[i].activePower\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Performance - Last 12 months'],\n            Sheets: { 'Performance - Last 12 months': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-performance-12-month-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n\n    downloadDataP30Days = () => {\n        var { dataP30Days, curItem } = this.state;\n        if (!Libs.isArrayData(dataP30Days)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = dataP30Days.length; i < len; i++) {\n            dataExport.push({\n                'Time': dataP30Days[i].time_full,\n                'Project name': curItem.name,\n                'Energy now (kWh)': dataP30Days[i].activeEnergy,\n                \"Power now (kW)\": dataP30Days[i].activePower\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Performance - Last 30 days'],\n            Sheets: { 'Performance - Last 30 days': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-performance-30-days-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n\n    downloadDataMaxPower = () => {\n        var { maxPower12Months, curItem } = this.state;\n        if (!Libs.isArrayData(maxPower12Months)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = maxPower12Months.length; i < len; i++) {\n            dataExport.push({\n                'Time': maxPower12Months[i].time_full,\n                'Project name': curItem.name,\n                \"Max power (kW)\": maxPower12Months[i].activePower\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Daily Max Power'],\n            Sheets: { 'Daily Max Power': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-max-power-12-months-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ChartDeviceProfile)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}