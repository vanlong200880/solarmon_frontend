{"ast":null,"code":"import PermissionsJsx from './Permissions.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport './Permissions.scss';\nimport RoleService from '../../../../../services/RoleService';\n\nclass Permissions extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleInputChange = (event, item, dataKey, vAuth, index) => {\n      let self = this;\n      let checked = event.target.checked;\n      let mask = 0;\n      let dataList = this.state.dataList;\n\n      if (checked) {\n        for (let k = 0; k < vAuth + 1; k++) {\n          mask = 1 << k;\n        } // add view permission if other permission has been checked\n\n\n        if (!Libs.isBlank(vAuth) && vAuth != Constants.AUTH_MODE.VIEW) {\n          item[Constants.AUTH_DATA_KEY.VIEW] = 1;\n        }\n      } else {\n        if (!Libs.isBlank(vAuth) && vAuth == Constants.AUTH_MODE.VIEW) {\n          item[Constants.AUTH_DATA_KEY.NEW] = 0;\n          item[Constants.AUTH_DATA_KEY.EDIT] = 0;\n          item[Constants.AUTH_DATA_KEY.DEL] = 0;\n          item[Constants.AUTH_DATA_KEY.PRINT] = 0;\n          item[Constants.AUTH_DATA_KEY.PDF] = 0;\n          item[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n          item[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n          item[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n          item[Constants.AUTH_DATA_KEY.FULL] = 0;\n        }\n      }\n\n      item[dataKey] = mask;\n\n      if (parseInt(item.has_child) === 1) {\n        dataList.map((value, key) => {\n          if (item.id === value.parent) {\n            let maskTemp = 0;\n\n            if (checked) {\n              for (let k = 0; k < vAuth + 1; k++) {\n                maskTemp = 1 << k;\n              } // add view permission if other permission has been checked\n\n\n              if (!Libs.isBlank(vAuth) && vAuth !== Constants.AUTH_MODE.VIEW) {\n                value[Constants.AUTH_DATA_KEY.VIEW] = 1;\n              }\n            } else {\n              if (!Libs.isBlank(vAuth) && vAuth === Constants.AUTH_MODE.VIEW) {\n                value[Constants.AUTH_DATA_KEY.NEW] = 0;\n                value[Constants.AUTH_DATA_KEY.EDIT] = 0;\n                value[Constants.AUTH_DATA_KEY.DEL] = 0;\n                value[Constants.AUTH_DATA_KEY.PRINT] = 0;\n                value[Constants.AUTH_DATA_KEY.PDF] = 0;\n                value[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n                value[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n                value[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n                value[Constants.AUTH_DATA_KEY.FULL] = 0;\n              }\n            }\n\n            value[dataKey] = maskTemp;\n            value = this._setAuths(value);\n            dataList[key] = value;\n          }\n        });\n      }\n\n      dataList[index] = item; // if (parseInt(item.has_child) === 1) {\n      // dataList.map((value, key) => {\n      //     if (item.id === value.parent) {\n      //         let action = 0;\n      //         let maskTemp = 0;\n      //         if (checked) {\n      //             // for (let k = 0; k < vAuth + 1; k++) {\n      //             //     maskTemp = 1 << k;\n      //             // }\n      //             // add view permission if other permission has been checked\n      //             if (!Libs.isBlank(vAuth) && vAuth !== Constants.AUTH_MODE.VIEW) {\n      //                 value[Constants.AUTH_DATA_KEY.VIEW] = 1;\n      //             }\n      //         } else {\n      //             if (!Libs.isBlank(vAuth) && vAuth === Constants.AUTH_MODE.VIEW) {\n      //                 value[Constants.AUTH_DATA_KEY.NEW] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.EDIT] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.DEL] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.PRINT] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.PDF] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n      //                 value[Constants.AUTH_DATA_KEY.FULL] = 0;\n      //             }\n      //         }\n      //         // value[dataKey] = maskTemp;\n      //         value = this._setAuths(value);\n      //     }\n      // });\n      // } else {\n      // dataList.map((v, k) => {\n      //     if (v.id == item.parent) {\n      //         var dataLevel = dataList.filter((k) => k.parent === item.parent);\n      //         if (Libs.isArrayData(dataLevel)) {\n      //             var countNew = 0, countEdit = 0, countView = 0, countDelete = 0, countPrint = 0, countApproval = 0, countPdf = 0, countExcel = 0, countTranslate = 0;\n      //             dataLevel.map((val, key) => {\n      //                 if (val.id === item.id) {\n      //                     v[key] = item;\n      //                     if (item.new > 0) { countNew++; }\n      //                     if (item.edit > 0) { countEdit++; }\n      //                     if (item.view > 0) { countView++; }\n      //                     if (item.delete > 0) { countDelete++; }\n      //                     if (item.print > 0) { countPrint++; }\n      //                     if (item.pdf > 0) { countPdf++; }\n      //                     if (item.excel > 0) { countExcel++; }\n      //                     if (item.translate > 0) { countTranslate++; }\n      //                     if (item.approval > 0) { countApproval++; }\n      //                 } else {\n      //                     if (val.new > 0) { countNew++; }\n      //                     if (val.edit > 0) { countEdit++; }\n      //                     if (val.view > 0) { countView++; }\n      //                     if (val.delete > 0) { countDelete++; }\n      //                     if (val.print > 0) { countPrint++; }\n      //                     if (val.pdf > 0) { countPdf++; }\n      //                     if (val.excel > 0) { countExcel++; }\n      //                     if (val.translate > 0) { countTranslate++; }\n      //                     if (val.approval > 0) { countApproval++; }\n      //                 }\n      //             });\n      //             if (countNew > 0) { v[Constants.AUTH_DATA_KEY.NEW] = 2; } else { v[Constants.AUTH_DATA_KEY.NEW] = 0; }\n      //             if (countEdit > 0) { v[Constants.AUTH_DATA_KEY.EDIT] = 8; } else { v[Constants.AUTH_DATA_KEY.EDIT] = 0; }\n      //             if (countView > 0) { v[Constants.AUTH_DATA_KEY.VIEW] = 1; } else { v[Constants.AUTH_DATA_KEY.VIEW] = 0; }\n      //             if (countDelete > 0) { v[Constants.AUTH_DATA_KEY.DEL] = 4; } else { v[Constants.AUTH_DATA_KEY.DEL] = 0; }\n      //             if (countPrint > 0) { v[Constants.AUTH_DATA_KEY.PRINT] = 64; } else { v[Constants.AUTH_DATA_KEY.PRINT] = 0; }\n      //             if (countPdf > 0) { v[Constants.AUTH_DATA_KEY.PDF] = 32; } else { v[Constants.AUTH_DATA_KEY.PDF] = 0; }\n      //             if (countExcel > 0) { v[Constants.AUTH_DATA_KEY.EXCEL] = 16; } else { v[Constants.AUTH_DATA_KEY.EXCEL] = 0; }\n      //             if (countApproval > 0) { v[Constants.AUTH_DATA_KEY.APPROVAL] = 256; } else { v[Constants.AUTH_DATA_KEY.APPROVAL] = 0; }\n      //             if (countTranslate > 0) { v[Constants.AUTH_DATA_KEY.TRANSLATE] = 128; } else { v[Constants.AUTH_DATA_KEY.TRANSLATE] = 0; }\n      //             v = this._setAuths(v);\n      //             dataList[k] = v;\n      //         }\n      //     }\n      // });\n      // }\n\n      item = this._setAuths(item);\n      self.setState({\n        dataList: dataList\n      });\n\n      this._updateData(item);\n    };\n\n    this._selectFullCheckedChange = (event, item, index) => {\n      let self = this;\n      let checked = event.target.checked;\n      let mask = 0;\n      let dataList = this.state.dataList;\n\n      if (checked) {\n        mask = 511;\n        dataList[index].auths = mask;\n\n        if (parseInt(item.has_child) === 1) {\n          dataList.map((v, k) => {\n            if (parseInt(item.id) === parseInt(v.parent)) {\n              dataList[k].auths = mask;\n            }\n          });\n        } else {\n          var findParent = Libs.find(dataList, 'id', item.parent);\n\n          if (!Libs.isObjectEmpty(findParent)) {\n            dataList.map((m, n) => {\n              if (parseInt(findParent.id) === parseInt(m.id)) {\n                dataList[n].auths = mask;\n              }\n            });\n          }\n        }\n      } else {\n        dataList[index].auths = mask;\n\n        if (parseInt(item.has_child) === 1) {\n          dataList.map((v, k) => {\n            if (parseInt(item.id) === parseInt(v.parent)) {\n              dataList[k].auths = 0;\n            }\n          });\n        }\n      }\n\n      self.setState({\n        dataList: dataList\n      });\n\n      this._updateData(item);\n    };\n\n    this.handleDropdownChange = obj => {\n      if (Libs.isObjectEmpty(obj)) return;\n      let curItem = this.state.curItem;\n      curItem = obj;\n      var self = this;\n      self.setState({\n        curItem: curItem\n      }, () => {\n        self.getListScreenPermissions();\n      });\n    };\n\n    this.jsxTemplate = PermissionsJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      dataRoles: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      }\n    };\n    this._selectFullCheckedChange = this._selectFullCheckedChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getDataRole();\n  }\n\n  _setPermissions(data) {\n    data.view = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.VIEW));\n    data.new = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.NEW));\n    data.edit = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.EDIT));\n    data.excel = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.EXCEL));\n    data.pdf = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.PDF));\n    data.translate = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.TRANSLATE));\n    data.print = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.PRINT));\n    data.delete = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.DEL));\n    data.approval = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.APPROVAL));\n    return data;\n  }\n\n  _setAuths(data) {\n    data.auths = data.view + data.new + data.edit + data.excel + data.pdf + data.translate + data.print + data.delete + data.approval;\n    return data;\n  }\n\n  /**\n   * Update quyền đã chọn\n   * @author Long.Pham 2019-09-20\n   * @param {Array} data\n   */\n  async _updateData(data) {\n    var {\n      t\n    } = this.props;\n    let self = this,\n        screens = [];\n    let curItem = self.state.curItem;\n\n    if (Libs.isObjectEmpty(data)) {\n      this.toast(t(\"message.msg_err_unknown\"), \"error\");\n      return;\n    }\n\n    let dataList = self.state.dataList;\n\n    if (!Libs.isBlank(data.has_child)) {\n      screens.push({\n        id_role: curItem.id_role,\n        id_screen: data.id_screen,\n        id_package_screen: data.id_package_screen,\n        auths: data.auths\n      });\n\n      if (Libs.isArrayData(dataList)) {\n        dataList.map((v, k) => {\n          if (v.parent === data.id) {\n            screens.push({\n              id_role: curItem.id_role,\n              id_screen: v.id_screen,\n              id_package_screen: v.id_package_screen,\n              auths: v.auths\n            });\n          }\n        });\n      }\n    } else {\n      if (!Libs.isArrayData(dataList)) return;\n      let item = Libs.find(dataList, 'id', data.id);\n      if (Libs.isObjectEmpty(item)) return;\n      screens.push({\n        id_role: curItem.id_role,\n        id_screen: data.id_screen,\n        id_package_screen: data.id_package_screen,\n        auths: data.auths\n      });\n      var dataParent = Libs.find(dataList, 'id', data.parent);\n\n      if (!Libs.isObjectEmpty(dataParent)) {\n        screens.push({\n          id_role: curItem.id_role,\n          id_screen: dataParent.id_screen,\n          id_package_screen: dataParent.id_package_screen,\n          auths: dataParent.auths\n        });\n      }\n    }\n\n    if (!Libs.isArrayData(screens)) {\n      this.toast(t(\"message.msg_err_unknown\"), \"error\");\n      return;\n    }\n\n    curItem.screens = screens;\n    RoleService.instance.updateRolePermissions(curItem, function (status, msg) {\n      if (status) {\n        self.getListScreenPermissions();\n      } else {\n        self.toast(msg, \"error\");\n      }\n    });\n    this.setState({\n      dataList: dataList\n    });\n  }\n\n  /**\n       * ge list roles\n       * @author Long.Pham 2019-06-03\n       */\n  getDataRole() {\n    let self = this,\n        curItem = this.state.curItem;\n    let params = self.state.searchParam;\n    params.id_company = this.employee.id_company;\n    params.id_language = this.employee.id_language;\n    RoleService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        curItem = data[0];\n        self.setState({\n          dataRoles: data,\n          curItem: curItem\n        }, () => {\n          self.getListScreenPermissions();\n        });\n      }\n    });\n  }\n  /**\n   * get list screen\n   * @author long.pham 27/07/2019\n   */\n\n\n  getListScreenPermissions() {\n    let self = this,\n        curItem = this.state.curItem;\n    curItem.id_language = this.employee.id_language;\n    curItem.id_role = curItem.id;\n    RoleService.instance.getListScreenPermissions(curItem, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n      } else {\n        self.setState({\n          dataList: []\n        });\n      }\n    });\n  }\n\n  onClickUpdateRole() {\n    var curItem = this.state.curItem,\n        self = this;\n    RoleService.instance.updateRoleMapScreen(curItem, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.getListScreenPermissions();\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Permissions);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Permissions/Permissions.js"],"names":["PermissionsJsx","BaseComponent","Libs","withTranslation","Constants","RoleService","Permissions","constructor","props","context","handleInputChange","event","item","dataKey","vAuth","index","self","checked","target","mask","dataList","state","k","isBlank","AUTH_MODE","VIEW","AUTH_DATA_KEY","NEW","EDIT","DEL","PRINT","PDF","EXCEL","TRANSLATE","APPROVAL","FULL","parseInt","has_child","map","value","key","id","parent","maskTemp","_setAuths","setState","_updateData","_selectFullCheckedChange","auths","v","findParent","find","isObjectEmpty","m","n","handleDropdownChange","obj","curItem","getListScreenPermissions","jsxTemplate","dataRoles","searchParam","limit","COMMON","LIMIT","offset","bind","componentDidMount","getDataRole","_setPermissions","data","view","Math","pow","new","edit","excel","pdf","translate","print","delete","approval","t","screens","toast","push","id_role","id_screen","id_package_screen","isArrayData","dataParent","instance","updateRolePermissions","status","msg","params","id_company","employee","id_language","getDropdownList","total_row","onClickUpdateRole","updateRoleMapScreen","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import PermissionsJsx from './Permissions.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport './Permissions.scss';\nimport RoleService from '../../../../../services/RoleService';\n\nclass Permissions extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = PermissionsJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            dataRoles: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            }\n        };\n\n        this._selectFullCheckedChange = this._selectFullCheckedChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getDataRole();\n    }\n\n    _setPermissions(data) {\n        data.view = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.VIEW));\n        data.new = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.NEW));\n        data.edit = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.EDIT));\n        data.excel = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.EXCEL));\n        data.pdf = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.PDF));\n        data.translate = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.TRANSLATE));\n        data.print = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.PRINT));\n        data.delete = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.DEL));\n        data.approval = data.auths & parseInt(Math.pow(2, Constants.AUTH_MODE.APPROVAL));\n        return data;\n    }\n    _setAuths(data) {\n        data.auths = data.view + data.new + data.edit + data.excel + data.pdf + data.translate + data.print + data.delete + data.approval;\n        return data;\n    }\n\n\n    handleInputChange = (event, item, dataKey, vAuth, index) => {\n        let self = this;\n        let checked = event.target.checked;\n        let mask = 0;\n        let dataList = this.state.dataList;\n\n        if (checked) {\n            for (let k = 0; k < vAuth + 1; k++) {\n                mask = 1 << k;\n            }\n\n            // add view permission if other permission has been checked\n            if (!Libs.isBlank(vAuth) && vAuth != Constants.AUTH_MODE.VIEW) {\n                item[Constants.AUTH_DATA_KEY.VIEW] = 1;\n            }\n\n        } else {\n            if (!Libs.isBlank(vAuth) && vAuth == Constants.AUTH_MODE.VIEW) {\n                item[Constants.AUTH_DATA_KEY.NEW] = 0;\n                item[Constants.AUTH_DATA_KEY.EDIT] = 0;\n                item[Constants.AUTH_DATA_KEY.DEL] = 0;\n                item[Constants.AUTH_DATA_KEY.PRINT] = 0;\n                item[Constants.AUTH_DATA_KEY.PDF] = 0;\n                item[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n                item[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n                item[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n                item[Constants.AUTH_DATA_KEY.FULL] = 0;\n            }\n        }\n\n        item[dataKey] = mask;\n\n        if (parseInt(item.has_child) === 1) {\n            dataList.map((value, key) => {\n                if (item.id === value.parent) {\n                    let maskTemp = 0;\n                    if (checked) {\n                        for (let k = 0; k < vAuth + 1; k++) {\n                            maskTemp = 1 << k;\n                        }\n                        // add view permission if other permission has been checked\n                        if (!Libs.isBlank(vAuth) && vAuth !== Constants.AUTH_MODE.VIEW) {\n                            value[Constants.AUTH_DATA_KEY.VIEW] = 1;\n                        }\n                    } else {\n                        if (!Libs.isBlank(vAuth) && vAuth === Constants.AUTH_MODE.VIEW) {\n                            value[Constants.AUTH_DATA_KEY.NEW] = 0;\n                            value[Constants.AUTH_DATA_KEY.EDIT] = 0;\n                            value[Constants.AUTH_DATA_KEY.DEL] = 0;\n                            value[Constants.AUTH_DATA_KEY.PRINT] = 0;\n                            value[Constants.AUTH_DATA_KEY.PDF] = 0;\n                            value[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n                            value[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n                            value[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n                            value[Constants.AUTH_DATA_KEY.FULL] = 0;\n                        }\n                    }\n\n                    value[dataKey] = maskTemp;\n                    value = this._setAuths(value);\n\n                    dataList[key] = value;\n\n                }\n            });\n        }\n        \n        dataList[index] = item;\n\n        // if (parseInt(item.has_child) === 1) {\n        // dataList.map((value, key) => {\n        //     if (item.id === value.parent) {\n        //         let action = 0;\n        //         let maskTemp = 0;\n        //         if (checked) {\n        //             // for (let k = 0; k < vAuth + 1; k++) {\n        //             //     maskTemp = 1 << k;\n        //             // }\n        //             // add view permission if other permission has been checked\n        //             if (!Libs.isBlank(vAuth) && vAuth !== Constants.AUTH_MODE.VIEW) {\n        //                 value[Constants.AUTH_DATA_KEY.VIEW] = 1;\n        //             }\n        //         } else {\n        //             if (!Libs.isBlank(vAuth) && vAuth === Constants.AUTH_MODE.VIEW) {\n        //                 value[Constants.AUTH_DATA_KEY.NEW] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.EDIT] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.DEL] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.PRINT] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.PDF] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.EXCEL] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.TRANSLATE] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.APPROVAL] = 0;\n        //                 value[Constants.AUTH_DATA_KEY.FULL] = 0;\n        //             }\n        //         }\n        //         // value[dataKey] = maskTemp;\n        //         value = this._setAuths(value);\n\n        //     }\n        // });\n        // } else {\n        // dataList.map((v, k) => {\n        //     if (v.id == item.parent) {\n        //         var dataLevel = dataList.filter((k) => k.parent === item.parent);\n\n        //         if (Libs.isArrayData(dataLevel)) {\n        //             var countNew = 0, countEdit = 0, countView = 0, countDelete = 0, countPrint = 0, countApproval = 0, countPdf = 0, countExcel = 0, countTranslate = 0;\n        //             dataLevel.map((val, key) => {\n        //                 if (val.id === item.id) {\n        //                     v[key] = item;\n        //                     if (item.new > 0) { countNew++; }\n        //                     if (item.edit > 0) { countEdit++; }\n        //                     if (item.view > 0) { countView++; }\n        //                     if (item.delete > 0) { countDelete++; }\n        //                     if (item.print > 0) { countPrint++; }\n        //                     if (item.pdf > 0) { countPdf++; }\n        //                     if (item.excel > 0) { countExcel++; }\n        //                     if (item.translate > 0) { countTranslate++; }\n        //                     if (item.approval > 0) { countApproval++; }\n        //                 } else {\n        //                     if (val.new > 0) { countNew++; }\n        //                     if (val.edit > 0) { countEdit++; }\n        //                     if (val.view > 0) { countView++; }\n        //                     if (val.delete > 0) { countDelete++; }\n        //                     if (val.print > 0) { countPrint++; }\n        //                     if (val.pdf > 0) { countPdf++; }\n        //                     if (val.excel > 0) { countExcel++; }\n        //                     if (val.translate > 0) { countTranslate++; }\n        //                     if (val.approval > 0) { countApproval++; }\n        //                 }\n        //             });\n\n        //             if (countNew > 0) { v[Constants.AUTH_DATA_KEY.NEW] = 2; } else { v[Constants.AUTH_DATA_KEY.NEW] = 0; }\n        //             if (countEdit > 0) { v[Constants.AUTH_DATA_KEY.EDIT] = 8; } else { v[Constants.AUTH_DATA_KEY.EDIT] = 0; }\n        //             if (countView > 0) { v[Constants.AUTH_DATA_KEY.VIEW] = 1; } else { v[Constants.AUTH_DATA_KEY.VIEW] = 0; }\n        //             if (countDelete > 0) { v[Constants.AUTH_DATA_KEY.DEL] = 4; } else { v[Constants.AUTH_DATA_KEY.DEL] = 0; }\n        //             if (countPrint > 0) { v[Constants.AUTH_DATA_KEY.PRINT] = 64; } else { v[Constants.AUTH_DATA_KEY.PRINT] = 0; }\n        //             if (countPdf > 0) { v[Constants.AUTH_DATA_KEY.PDF] = 32; } else { v[Constants.AUTH_DATA_KEY.PDF] = 0; }\n        //             if (countExcel > 0) { v[Constants.AUTH_DATA_KEY.EXCEL] = 16; } else { v[Constants.AUTH_DATA_KEY.EXCEL] = 0; }\n        //             if (countApproval > 0) { v[Constants.AUTH_DATA_KEY.APPROVAL] = 256; } else { v[Constants.AUTH_DATA_KEY.APPROVAL] = 0; }\n        //             if (countTranslate > 0) { v[Constants.AUTH_DATA_KEY.TRANSLATE] = 128; } else { v[Constants.AUTH_DATA_KEY.TRANSLATE] = 0; }\n\n        //             v = this._setAuths(v);\n        //             dataList[k] = v;\n\n        //         }\n\n        //     }\n        // });\n        // }\n\n        item = this._setAuths(item);\n\n        self.setState({\n            dataList: dataList\n        });\n        this._updateData(item);\n    }\n\n\n\n    /**\n     * Khi checked toàn quyền của màn hình thì tự động checked toàn bộ quyền của màn hình đó\n     * @author Long.Pham 2019-09-20\n     * @param {Object} data \n     * @param {Object} e \n     */\n    _selectFullCheckedChange = (event, item, index) => {\n        let self = this;\n        let checked = event.target.checked;\n        let mask = 0;\n        let dataList = this.state.dataList;\n        if (checked) {\n            mask = 511;\n            dataList[index].auths = mask;\n            if (parseInt(item.has_child) === 1) {\n                dataList.map((v, k) => {\n                    if (parseInt(item.id) === parseInt(v.parent)) {\n                        dataList[k].auths = mask;\n                    }\n                });\n            } else {\n                var findParent = Libs.find(dataList, 'id', item.parent);\n                if (!Libs.isObjectEmpty(findParent)) {\n                    dataList.map((m, n) => {\n                        if (parseInt(findParent.id) === parseInt(m.id)) {\n                            dataList[n].auths = mask;\n                        }\n                    });\n                }\n            }\n        } else {\n            dataList[index].auths = mask;\n            if (parseInt(item.has_child) === 1) {\n                dataList.map((v, k) => {\n                    if (parseInt(item.id) === parseInt(v.parent)) {\n                        dataList[k].auths = 0;\n                    }\n                });\n            }\n        }\n\n        self.setState({\n            dataList: dataList\n        });\n\n        this._updateData(item);\n    }\n\n\n    /**\n     * Update quyền đã chọn\n     * @author Long.Pham 2019-09-20\n     * @param {Array} data\n     */\n    async _updateData(data) {\n        var { t } = this.props;\n        let self = this, screens = [];\n        let curItem = self.state.curItem;\n        if (Libs.isObjectEmpty(data)) {\n            this.toast(t(\"message.msg_err_unknown\"), \"error\");\n            return;\n        }\n\n        let dataList = self.state.dataList;\n\n        if (!Libs.isBlank(data.has_child)) {\n            screens.push({\n                id_role: curItem.id_role,\n                id_screen: data.id_screen,\n                id_package_screen: data.id_package_screen,\n                auths: data.auths\n            });\n\n            if (Libs.isArrayData(dataList)) {\n\n\n                dataList.map((v, k) => {\n                    if (v.parent === data.id) {\n                        screens.push({\n                            id_role: curItem.id_role,\n                            id_screen: v.id_screen,\n                            id_package_screen: v.id_package_screen,\n                            auths: v.auths\n                        });\n                    }\n                })\n            }\n\n        } else {\n            if (!Libs.isArrayData(dataList)) return;\n            let item = Libs.find(dataList, 'id', data.id);\n            if (Libs.isObjectEmpty(item)) return;\n            screens.push({\n                id_role: curItem.id_role,\n                id_screen: data.id_screen,\n                id_package_screen: data.id_package_screen,\n                auths: data.auths\n            });\n\n            var dataParent = Libs.find(dataList, 'id', data.parent);\n            if (!Libs.isObjectEmpty(dataParent)) {\n                screens.push({\n                    id_role: curItem.id_role,\n                    id_screen: dataParent.id_screen,\n                    id_package_screen: dataParent.id_package_screen,\n                    auths: dataParent.auths\n                });\n            }\n        }\n\n\n        if (!Libs.isArrayData(screens)) {\n            this.toast(t(\"message.msg_err_unknown\"), \"error\");\n            return;\n        }\n\n        curItem.screens = screens;\n        RoleService.instance.updateRolePermissions(curItem, function (status, msg) {\n            if (status) {\n                self.getListScreenPermissions();\n            } else {\n                self.toast(msg, \"error\");\n            }\n        });\n        this.setState({\n            dataList: dataList\n        })\n    }\n\n    handleDropdownChange = (obj) => {\n        if (Libs.isObjectEmpty(obj)) return;\n        let curItem = this.state.curItem;\n        curItem = obj;\n        var self = this;\n        self.setState({\n            curItem: curItem\n        }, () => {\n            self.getListScreenPermissions();\n        });\n    }\n\n\n    /**\n         * ge list roles\n         * @author Long.Pham 2019-06-03\n         */\n    getDataRole() {\n        let self = this, curItem = this.state.curItem;\n        let params = self.state.searchParam;\n        params.id_company = this.employee.id_company;\n        params.id_language = this.employee.id_language;\n\n        RoleService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                curItem = data[0];\n                self.setState({\n                    dataRoles: data,\n                    curItem: curItem\n                }, () => {\n                    self.getListScreenPermissions();\n                });\n            }\n        })\n    }\n\n\n    /**\n     * get list screen\n     * @author long.pham 27/07/2019\n     */\n\n    getListScreenPermissions() {\n        let self = this, curItem = this.state.curItem;\n        curItem.id_language = this.employee.id_language;\n        curItem.id_role = curItem.id;\n        RoleService.instance.getListScreenPermissions(curItem, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n            } else {\n                self.setState({\n                    dataList: []\n                });\n            }\n        })\n    }\n\n    onClickUpdateRole() {\n        var curItem = this.state.curItem, self = this;\n        RoleService.instance.updateRoleMapScreen(curItem, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.getListScreenPermissions();\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Permissions)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}