{"ast":null,"code":"import _defineProperty from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Volumes/Data/sources/solars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import Validation from'./libs/validation';import Libs from'../utils/Libs';var BaseValidate=/*#__PURE__*/function(){function BaseValidate(){_classCallCheck(this,BaseValidate);// Check if all instance methods are implemented.\nif(this.setRule===BaseValidate.prototype.setRule){throw new TypeError(\"Please implement abstract method setRule.\");}if(this.setAlias===BaseValidate.prototype.setAlias){throw new TypeError(\"Please implement abstract method setAlias.\");}this.v=new Validation();}// validationAll(data) {\n//     try {\n//         // data = Libs.convertEmptyPropToNullProp(data);\n//         this.setAlias();\n//         this.setRule();\n//         let self = this\n//         return new Promise(function (resolve, reject) {\n//             self.v.validateAll(data, function (err, path) {\n//                 if (err) {\n//                     resolve(err.message);\n//                 } else {\n//                     resolve(path);\n//                 }\n//             });\n//         });\n//     } catch (e) {\n//         console.log(e);\n//         // callBack(e)\n//     }\n// }\n/**\n     * @description validate a field \n     * @author Long.Pham\n     * @since 12/05/2021\n     * @param {*} data \n     * @param {*} path \n     * @param {*} callBack \n     */_createClass(BaseValidate,[{key:\"validateOne\",value:function validateOne(data,path,callBack){try{this.setAlias();this.setRule();var self=this;return new Promise(function(resolve,reject){self.v.validateOne(data,path,function(err,rPath){if(err){resolve(_defineProperty({},path,err.message));}else{resolve(_defineProperty({},path,null));}});});}catch(e){callBack(e);}}/**\n     * @description validate all data at the same time\n     * @author Long.Pham\n     * @since 12/05/2021\n     * @param {*} data \n     */},{key:\"FLValidationAll\",value:function FLValidationAll(data,callBack){try{// data = Libs.convertEmptyPropToNullProp(data);\nthis.setAlias();this.setRule();var self=this;return new Promise(function(resolve,reject){self.v.FLValidateAll(data,function(errs){if(Object.keys(errs).length>0){var count=0;for(var key in errs){var message=errs[key];if(message===null){count++;}}if(count===Object.keys(errs).length){resolve(null);}else{resolve(errs);}}else{resolve(null);}});});}catch(e){console.log(e);callBack(e);}}},{key:\"setRule\",value:function setRule(){}},{key:\"setAlias\",value:function setAlias(){}/**\n     * @author Long.Pham\n     * @since 12-05-2021\n     * @param {field name} field_name \n     * @param {rule name} rule_name \n     * @param {rule value } rule_value \n     * @param {key message} key_msg \n     */},{key:\"addRuleForField\",value:function addRuleForField(field_name,rule_name,rule_value,key_msg,field_key_name){var REG_ASSIGN_VARIBLE=/\\$\\<([^{}]*?)\\>/g;if(key_msg){key_msg=Libs.stringAssign(key_msg,[field_name,field_key_name,rule_value],REG_ASSIGN_VARIBLE);}this.v.addRule(field_name,rule_name,rule_value);this.v.setMsg(field_name,rule_name,key_msg);}}]);return BaseValidate;}();export default BaseValidate;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/validator/BaseValidate.js"],"names":["Validation","Libs","BaseValidate","setRule","prototype","TypeError","setAlias","v","data","path","callBack","self","Promise","resolve","reject","validateOne","err","rPath","message","e","FLValidateAll","errs","Object","keys","length","count","key","console","log","field_name","rule_name","rule_value","key_msg","field_key_name","REG_ASSIGN_VARIBLE","stringAssign","addRule","setMsg"],"mappings":"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","sourcesContent":["import Validation from './libs/validation';\nimport Libs from '../utils/Libs';\nclass BaseValidate {\n    constructor() {\n        // Check if all instance methods are implemented.\n        if (this.setRule === BaseValidate.prototype.setRule) {\n            throw new TypeError(\"Please implement abstract method setRule.\");\n        }\n        if (this.setAlias === BaseValidate.prototype.setAlias) {\n            throw new TypeError(\"Please implement abstract method setAlias.\");\n        }\n        this.v = new Validation();\n    }\n    // validationAll(data) {\n    //     try {\n    //         // data = Libs.convertEmptyPropToNullProp(data);\n    //         this.setAlias();\n    //         this.setRule();\n    //         let self = this\n    //         return new Promise(function (resolve, reject) {\n    //             self.v.validateAll(data, function (err, path) {\n    //                 if (err) {\n    //                     resolve(err.message);\n    //                 } else {\n    //                     resolve(path);\n    //                 }\n    //             });\n    //         });\n    //     } catch (e) {\n    //         console.log(e);\n    //         // callBack(e)\n    //     }\n\n    // }\n\n    /**\n     * @description validate a field \n     * @author Long.Pham\n     * @since 12/05/2021\n     * @param {*} data \n     * @param {*} path \n     * @param {*} callBack \n     */\n    validateOne(data, path, callBack) {\n        try {\n            this.setAlias();\n            this.setRule();\n            let self = this\n            return new Promise(function (resolve, reject) {\n                self.v.validateOne(data, path, function (err, rPath) {\n                    if (err) {\n                        resolve({ [path]: err.message });\n                    } else {\n                        resolve({ [path]: null });\n                    }\n                });\n            });\n        } catch (e) {\n            callBack(e);\n        }\n\n    }\n\n    /**\n     * @description validate all data at the same time\n     * @author Long.Pham\n     * @since 12/05/2021\n     * @param {*} data \n     */\n    FLValidationAll(data, callBack) {\n        try {\n            // data = Libs.convertEmptyPropToNullProp(data);\n            this.setAlias();\n            this.setRule();\n            let self = this\n            return new Promise(function (resolve, reject) {\n                self.v.FLValidateAll(data, function (errs) {\n                    if (Object.keys(errs).length > 0) {\n                        var count = 0;\n                        for (let key in errs) {\n                            let message = errs[key];\n                            if (message === null) {\n                                count++;\n                            }\n                        }\n                        if (count === Object.keys(errs).length) {\n                            resolve(null);\n                        } else {\n                            resolve(errs);\n                        }\n                    } else {\n                        resolve(null);\n                    }\n                });\n            });\n        } catch (e) {\n            console.log(e);\n            callBack(e);\n        }\n    }\n\n\n    setRule() {\n\n    }\n    setAlias() {\n\n    }\n\n    /**\n     * @author Long.Pham\n     * @since 12-05-2021\n     * @param {field name} field_name \n     * @param {rule name} rule_name \n     * @param {rule value } rule_value \n     * @param {key message} key_msg \n     */\n     addRuleForField(field_name, rule_name, rule_value, key_msg, field_key_name) {\n        let REG_ASSIGN_VARIBLE = /\\$\\<([^{}]*?)\\>/g;\n        if(key_msg){\n            \n            key_msg = Libs.stringAssign(key_msg, [field_name, field_key_name, rule_value], REG_ASSIGN_VARIBLE);\n        }\n        this.v.addRule(field_name, rule_name, rule_value);\n        this.v.setMsg(field_name, rule_name, key_msg);\n    }\n}\nexport default BaseValidate;"]},"metadata":{},"sourceType":"module"}