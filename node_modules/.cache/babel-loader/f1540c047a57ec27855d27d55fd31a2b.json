{"ast":null,"code":"import ProjectGroupJsx from './ProjectGroup.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport ProjectGroupService from '../../../../../services/ProjectGroupService';\n\nclass ProjectGroup extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onClickAdd = () => {\n      let curItem = {};\n      let data = [];\n      var allLanguage = this.state.allLanguage;\n      curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n      curItem.status = 1;\n      curItem.tabActive = '';\n      allLanguage.map((language, index) => {\n        if (language.is_default === 1) {\n          curItem.tabActive = language.is_default === 1 ? language.iso_code : '';\n        }\n\n        let item = {\n          is_default: language.is_default,\n          iso_code: language.iso_code,\n          id_language: language.id,\n          name: \"\",\n          description: \"\"\n        };\n        return data.push(item);\n      });\n      curItem.data = data;\n      this.setState({\n        curItem: curItem,\n        add: true\n      });\n    };\n\n    this.onClickCloseAdd = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        add: false\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      var params = this.state.curItem;\n      params.id = item.id;\n      ProjectGroupService.instance.getDetail(params, data => {\n        if (data) {\n          item.data = data.data;\n          item.screen_mode = Constants.SCREEN_MODE.EDIT;\n          let curTransItem = Libs.find(data.data, 'is_default', 1);\n\n          if (Libs.isObjectEmpty(curTransItem)) {\n            return false;\n          }\n\n          item[\"name_\" + curTransItem.iso_code] = curTransItem.name;\n\n          if (Libs.isArrayData(data.data)) {\n            var dataLang = data.data;\n            dataLang.map((row, index) => {\n              if (row.is_default === 1) {\n                item.tabActive = row.iso_code;\n              }\n\n              return 1;\n            });\n          }\n\n          self.setState({\n            curItem: item,\n            add: true\n          });\n        }\n      }, false);\n    };\n\n    this.onStatusChange = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index],\n          self = this;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      item.id_language = this.employee.id_language;\n      var isActiveUpdate = item.status;\n\n      if (isActiveUpdate * 1 === 1) {\n        isActiveUpdate = 0;\n      } else {\n        isActiveUpdate = 1;\n      }\n\n      item.status = isActiveUpdate;\n      item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n      ProjectGroupService.instance.updateStatus(item, function (status, msg) {\n        if (status) {\n          self.setState({\n            dataList: self.state.dataList\n          });\n        }\n      });\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.jsxTemplate = ProjectGroupJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      add: false,\n      delete: false,\n      formSearch: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getList() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    ProjectGroupService.instance.getList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.name = null;\n    searchParam.id = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ProjectGroup);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/ProjectGroup/ProjectGroup.js"],"names":["ProjectGroupJsx","BaseComponent","Libs","withTranslation","Constants","ProjectGroupService","ProjectGroup","constructor","props","context","onClickAdd","curItem","data","allLanguage","state","screen_mode","SCREEN_MODE","ADD","status","tabActive","map","language","index","is_default","iso_code","item","id_language","id","name","description","push","setState","add","onClickCloseAdd","getList","onClickCloseDelete","delete","onItemClick","isArrayData","dataList","self","params","instance","getDetail","EDIT","curTransItem","find","isObjectEmpty","dataLang","row","onStatusChange","employee","isActiveUpdate","updated_by","first_name","last_name","updateStatus","msg","onItemClickDelete","jsxTemplate","searchParam","limit","COMMON","LIMIT","offset","formSearch","isBlank","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","componentDidMount","total_row","parseInt","forceUpdate","event","target","value","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ProjectGroupJsx from './ProjectGroup.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport ProjectGroupService from '../../../../../services/ProjectGroupService';\n\nclass ProjectGroup extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = ProjectGroupJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            add: false,\n            delete: false,\n            formSearch: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        ProjectGroupService.instance.getList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    onClickAdd = () => {\n        let curItem = {};\n        let data = [];\n        var allLanguage = this.state.allLanguage;\n        curItem.screen_mode = Constants.SCREEN_MODE.ADD;\n        curItem.status = 1;\n        curItem.tabActive = '';\n        allLanguage.map((language, index) => {\n            if (language.is_default === 1) { curItem.tabActive = language.is_default === 1 ? language.iso_code : ''; }\n            let item = {\n                is_default: language.is_default,\n                iso_code: language.iso_code,\n                id_language: language.id,\n                name: \"\",\n                description: \"\"\n            };\n            return data.push(item);\n        });\n\n        curItem.data = data;\n        this.setState({\n            curItem: curItem,\n            add: true\n        });\n\n    };\n\n    onClickCloseAdd = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            add: false\n        })\n    }\n\n    onClickCloseDelete = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n\n        var params = this.state.curItem;\n        params.id = item.id;\n\n        ProjectGroupService.instance.getDetail(params, data => {\n            if (data) {\n                item.data = data.data;\n                item.screen_mode = Constants.SCREEN_MODE.EDIT;\n                let curTransItem = Libs.find(data.data,'is_default', 1);\n                if(Libs.isObjectEmpty(curTransItem)){ return false; }\n                item[\"name_\"+curTransItem.iso_code] = curTransItem.name;\n\n                if(Libs.isArrayData(data.data)){\n                    var dataLang = data.data;\n                    dataLang.map((row, index) => {\n                        if(row.is_default === 1){\n                            item.tabActive = row.iso_code;\n                        }\n                        return 1;\n                    });\n                }\n\n                self.setState({\n                    curItem: item,\n                    add: true\n                });\n            }\n        }, false);\n    }\n\n\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onStatusChange = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index], self = this;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        item.id_language = this.employee.id_language;\n\n        var isActiveUpdate = item.status;\n        if (isActiveUpdate * 1 === 1) {\n            isActiveUpdate = 0;\n        }\n        else {\n            isActiveUpdate = 1;\n        }\n\n        item.status = isActiveUpdate;\n        item.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n\n        ProjectGroupService.instance.updateStatus(item, function (status, msg) {\n            if (status) {\n                self.setState({\n                    dataList: self.state.dataList\n                });\n            }\n        });\n    }\n\n    /**\n   * @description Item click event delete\n   * @author Long.Pham 12-05-2021\n   * @param index Order element in the list\n   */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n   /**\n     * @description Call form search\n     * @author Long.Pham 12/05/2021\n     */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.name = null;\n        searchParam.id = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ProjectGroup)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}