{"ast":null,"code":"import EmployeesSetupEmailJsx from './EmployeesSetupEmail.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport EmployeeService from '../../../../../services/EmployeeService';\nimport './EmployeesSetupEmail.scss';\n\nclass EmployeesSetupEmail extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.onStatusChange = (index, type) => {\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var item = dataList[index],\n          self = this;\n      if (Libs.isObjectEmpty(item)) return;\n\n      switch (type) {\n        case 'all':\n          item.mail_now = item.mail_all == 1 ? 0 : 1;\n          item.mail_day = item.mail_all == 1 ? 0 : 1;\n          item.mail_month = item.mail_all == 1 ? 0 : 1;\n          item.mail_year = item.mail_all == 1 ? 0 : 1;\n          item.mail_all = item.mail_all == 1 ? 0 : 1;\n          break;\n\n        case 'now':\n          item.mail_now = item.mail_now == 1 ? 0 : 1;\n          break;\n\n        case 'day':\n          item.mail_day = item.mail_day == 1 ? 0 : 1;\n          break;\n\n        case 'month':\n          item.mail_month = item.mail_month == 1 ? 0 : 1;\n          break;\n\n        case 'year':\n          item.mail_year = item.mail_year == 1 ? 0 : 1;\n          break;\n      }\n\n      if (item.mail_now == 1 && item.mail_day == 1 && item.mail_month == 1 && item.mail_year == 1) {\n        item.mail_all = 1;\n      } else {\n        item.mail_all = 0;\n      }\n\n      dataList[index] = item;\n      EmployeeService.instance.updateStatusMailConfig(item, function (status, msg) {\n        if (status) {\n          self.setState({\n            dataList: dataList\n          });\n        }\n      });\n    };\n\n    this.jsxTemplate = EmployeesSetupEmailJsx;\n    this.state = {\n      curItem: {},\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      formSearch: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListProjectConfigMail();\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getListProjectConfigMail() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_employee = this.employee.id_employee;\n    EmployeeService.instance.getListProjectConfigMail(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n  /**\n   * @description Item click event change status\n   * @author Long.Pham 12-05-2021\n   * @param index element in the list\n   */\n\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getListProjectConfigMail();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getListProjectConfigMail();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getListProjectConfigMail();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getListProjectConfigMail();\n  }\n  /**\n   * @description Call form search\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  onSearch() {\n    let self = this;\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.name = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getListProjectConfigMail();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getListProjectConfigMail();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(EmployeesSetupEmail);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/EmployeesSetupEmail/EmployeesSetupEmail.js"],"names":["EmployeesSetupEmailJsx","BaseComponent","Libs","withTranslation","Constants","EmployeeService","EmployeesSetupEmail","constructor","props","context","onStatusChange","index","type","dataList","state","isArrayData","item","self","isObjectEmpty","mail_now","mail_all","mail_day","mail_month","mail_year","instance","updateStatusMailConfig","status","msg","setState","jsxTemplate","curItem","searchParam","limit","COMMON","LIMIT","offset","formSearch","allLanguage","isBlank","employee","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","componentDidMount","getListProjectConfigMail","params","id_language","id_employee","data","total_row","parseInt","forceUpdate","event","target","name","value","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import EmployeesSetupEmailJsx from './EmployeesSetupEmail.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport EmployeeService from '../../../../../services/EmployeeService';\nimport './EmployeesSetupEmail.scss';\n\nclass EmployeesSetupEmail extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = EmployeesSetupEmailJsx;\n        this.state = {\n            curItem: {},\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            formSearch: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.getListProjectConfigMail();\n    }\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getListProjectConfigMail() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_employee = this.employee.id_employee;\n        EmployeeService.instance.getListProjectConfigMail(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    /**\n     * @description Item click event change status\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onStatusChange = (index, type) => {\n        var {dataList} = this.state;\n        if (!Libs.isArrayData(dataList)) return;\n        var item = dataList[index], self = this;\n        if (Libs.isObjectEmpty(item)) return;\n        switch (type) {\n            case 'all':\n                item.mail_now = item.mail_all == 1 ? 0 : 1;\n                item.mail_day = item.mail_all == 1 ? 0 : 1;\n                item.mail_month = item.mail_all == 1 ? 0 : 1;\n                item.mail_year = item.mail_all == 1 ? 0 : 1;\n                item.mail_all = item.mail_all == 1 ? 0 : 1;\n                break;\n            case 'now':\n                item.mail_now = item.mail_now == 1 ? 0 : 1;\n                break;\n            case 'day':\n                item.mail_day = item.mail_day == 1 ? 0 : 1;\n                break;\n            case 'month':\n                item.mail_month = item.mail_month == 1 ? 0 : 1;\n                break;\n            case 'year':\n                item.mail_year = item.mail_year == 1 ? 0 : 1;\n                break;\n        }\n\n        if(item.mail_now == 1 && item.mail_day == 1 && item.mail_month == 1 && item.mail_year == 1){\n            item.mail_all = 1;\n        } else {\n            item.mail_all = 0;\n        }\n\n        dataList[index] = item;\n        EmployeeService.instance.updateStatusMailConfig(item, function (status, msg) {\n            if (status) {\n                self.setState({\n                    dataList: dataList\n                });\n            }\n        });\n    }\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getListProjectConfigMail();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getListProjectConfigMail();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getListProjectConfigMail();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getListProjectConfigMail();\n    }\n\n    /**\n     * @description Call form search\n     * @author Long.Pham 12/05/2021\n     */\n    onSearch() {\n        let self = this;\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.name = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getListProjectConfigMail();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getListProjectConfigMail();\n    }\n\n\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(EmployeesSetupEmail)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}