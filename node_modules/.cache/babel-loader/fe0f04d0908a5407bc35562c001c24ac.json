{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleProject/Analytics/Analytics.jsx\";\nimport React from 'react';\nimport MenuProject from '../../../../common/MenuProject/MenuProject';\nimport './Analytics.scss';\nimport FormReactSelect from '../../../../../components/FormReactSelect';\nimport ChartDevice from './ChartDevice/ChartDevice';\nimport ChartDeviceProfile from './ChartDeviceProfile/ChartDeviceProfile';\nimport ChartAlarm from './ChartAlarm/ChartAlarm';\nimport ChartDeviceDiagnostics from './ChartDeviceDiagnostics/ChartDeviceDiagnostics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Analytics() {\n  const {\n    t\n  } = this.props;\n  var {\n    curItem,\n    dataStatus\n  } = this.state;\n  var LayoutChart = null;\n\n  switch (curItem.type) {\n    case 1:\n      LayoutChart = /*#__PURE__*/_jsxDEV(ChartDeviceProfile, {\n        hash_id: this.state.hash_id,\n        t: t,\n        curItem: curItem,\n        auth: this.props.auth,\n        actions: this.actions\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 27\n      }, this);\n      break;\n\n    case 2:\n      LayoutChart = /*#__PURE__*/_jsxDEV(ChartDevice, {\n        hash_id: this.state.hash_id,\n        t: t,\n        curItem: curItem,\n        auth: this.props.auth,\n        actions: this.actions\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 27\n      }, this);\n      break;\n\n    case 3:\n      LayoutChart = /*#__PURE__*/_jsxDEV(ChartAlarm, {\n        hash_id: this.state.hash_id,\n        t: t,\n        curItem: curItem,\n        auth: this.props.auth,\n        actions: this.actions\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 27\n      }, this);\n      break;\n\n    case 4:\n      LayoutChart = /*#__PURE__*/_jsxDEV(ChartDeviceDiagnostics, {\n        hash_id: this.state.hash_id,\n        t: t,\n        curItem: curItem,\n        auth: this.props.auth,\n        actions: this.actions\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analytics\",\n    children: [/*#__PURE__*/_jsxDEV(MenuProject, {\n      hash_id: this.state.hash_id\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group-header\",\n            children: [/*#__PURE__*/_jsxDEV(FormReactSelect, {\n              instanceId: \"status\",\n              className: \"status\",\n              name: \"status\",\n              required: \"required\",\n              value: dataStatus.filter(function (item) {\n                return item.id === curItem.type;\n              }),\n              onChange: e => {\n                this.handleDropdownChange(e, 'type');\n              },\n              optionList: dataStatus,\n              placeHolder: t('common.choose')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reload-chart\",\n              onClick: this.reloadData.bind(this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-arrows-ccw\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 96\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), LayoutChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = Analytics;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleProject/Analytics/Analytics.jsx"],"names":["React","MenuProject","FormReactSelect","ChartDevice","ChartDeviceProfile","ChartAlarm","ChartDeviceDiagnostics","Analytics","t","props","curItem","dataStatus","state","LayoutChart","type","hash_id","auth","actions","Math","random","filter","item","id","e","handleDropdownChange","reloadData","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,OAAO,kBAAP;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,sBAAP,MAAmC,iDAAnC;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAQ,KAAKC,KAAnB;AACA,MAAI;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0B,KAAKC,KAAnC;AACA,MAAIC,WAAW,GAAG,IAAlB;;AACA,UAAQH,OAAO,CAACI,IAAhB;AACI,SAAK,CAAL;AACID,MAAAA,WAAW,gBAAG,QAAC,kBAAD;AAAwC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAA5D;AAAqE,QAAA,CAAC,EAAEP,CAAxE;AAA2E,QAAA,OAAO,EAAEE,OAApF;AAA6F,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWO,IAA9G;AAAoH,QAAA,OAAO,EAAE,KAAKC;AAAlI,SAAyBC,IAAI,CAACC,MAAL,EAAzB;AAAA;AAAA;AAAA;AAAA,cAAd;AACA;;AACJ,SAAK,CAAL;AACIN,MAAAA,WAAW,gBAAG,QAAC,WAAD;AAAiC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAArD;AAA8D,QAAA,CAAC,EAAEP,CAAjE;AAAoE,QAAA,OAAO,EAAEE,OAA7E;AAAsF,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWO,IAAvG;AAA6G,QAAA,OAAO,EAAE,KAAKC;AAA3H,SAAkBC,IAAI,CAACC,MAAL,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAd;AACA;;AACJ,SAAK,CAAL;AACIN,MAAAA,WAAW,gBAAG,QAAC,UAAD;AAAgC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAApD;AAA6D,QAAA,CAAC,EAAEP,CAAhE;AAAmE,QAAA,OAAO,EAAEE,OAA5E;AAAqF,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWO,IAAtG;AAA4G,QAAA,OAAO,EAAE,KAAKC;AAA1H,SAAiBC,IAAI,CAACC,MAAL,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAd;AACA;;AACJ,SAAK,CAAL;AACIN,MAAAA,WAAW,gBAAG,QAAC,sBAAD;AAA4C,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAAhE;AAAyE,QAAA,CAAC,EAAEP,CAA5E;AAA+E,QAAA,OAAO,EAAEE,OAAxF;AAAiG,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWO,IAAlH;AAAwH,QAAA,OAAO,EAAE,KAAKC;AAAtI,SAA6BC,IAAI,CAACC,MAAL,EAA7B;AAAA;AAAA;AAAA;AAAA,cAAd;AACA;AAZR;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWG;AAAjC,OAAiDG,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI,QAAC,eAAD;AACI,cAAA,UAAU,EAAC,QADf;AAEI,cAAA,SAAS,EAAC,QAFd;AAGI,cAAA,IAAI,EAAC,QAHT;AAII,cAAA,QAAQ,EAAC,UAJb;AAKI,cAAA,KAAK,EAAER,UAAU,CAACS,MAAX,CAAkB,UAAUC,IAAV,EAAgB;AAAE,uBAAOA,IAAI,CAACC,EAAL,KAAYZ,OAAO,CAACI,IAA3B;AAAiC,eAArE,CALX;AAMI,cAAA,QAAQ,EAAGS,CAAD,IAAO;AAAE,qBAAKC,oBAAL,CAA0BD,CAA1B,EAA6B,MAA7B;AAAuC,eAN9D;AAOI,cAAA,UAAU,EAAEZ,UAPhB;AAQI,cAAA,WAAW,EAAEH,CAAC,CAAC,eAAD;AARlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI;AAAK,cAAA,SAAS,EAAC,cAAf;AAA8B,cAAA,OAAO,EAAE,KAAKiB,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAvC;AAAA,qCAAmE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AAAnE;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,EAsBKb,WAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;KA7CuBN,S;AA6CvB","sourcesContent":["import React from 'react';\nimport MenuProject from '../../../../common/MenuProject/MenuProject';\nimport './Analytics.scss';\nimport FormReactSelect from '../../../../../components/FormReactSelect';\nimport ChartDevice from './ChartDevice/ChartDevice';\nimport ChartDeviceProfile from './ChartDeviceProfile/ChartDeviceProfile';\nimport ChartAlarm from './ChartAlarm/ChartAlarm';\nimport ChartDeviceDiagnostics from './ChartDeviceDiagnostics/ChartDeviceDiagnostics';\n\n\nexport default function Analytics() {\n    const { t } = this.props;\n    var { curItem, dataStatus } = this.state;\n    var LayoutChart = null;\n    switch (curItem.type) {\n        case 1:\n            LayoutChart = <ChartDeviceProfile key={Math.random()} hash_id={this.state.hash_id} t={t} curItem={curItem} auth={this.props.auth} actions={this.actions} />;\n            break;\n        case 2:\n            LayoutChart = <ChartDevice key={Math.random()} hash_id={this.state.hash_id} t={t} curItem={curItem} auth={this.props.auth} actions={this.actions} />;\n            break;\n        case 3:\n            LayoutChart = <ChartAlarm key={Math.random()} hash_id={this.state.hash_id} t={t} curItem={curItem} auth={this.props.auth} actions={this.actions} />;\n            break;\n        case 4:\n            LayoutChart = <ChartDeviceDiagnostics key={Math.random()} hash_id={this.state.hash_id} t={t} curItem={curItem} auth={this.props.auth} actions={this.actions} />;\n            break;\n\n    }\n    return (\n        <div className=\"analytics\">\n            <MenuProject hash_id={this.state.hash_id} key = {Math.random()} />\n            <div className=\"header-title\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"group-header\">\n                            <FormReactSelect\n                                instanceId=\"status\"\n                                className=\"status\"\n                                name=\"status\"\n                                required=\"required\"\n                                value={dataStatus.filter(function (item) { return item.id === curItem.type })}\n                                onChange={(e) => { this.handleDropdownChange(e, 'type'); }}\n                                optionList={dataStatus}\n                                placeHolder={t('common.choose')}\n                            />\n\n                            <div className=\"reload-chart\" onClick={this.reloadData.bind(this)}><span className=\"icon-arrows-ccw\"></span></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {LayoutChart}\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}