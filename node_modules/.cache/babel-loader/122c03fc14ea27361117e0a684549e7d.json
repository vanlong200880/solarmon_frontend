{"ast":null,"code":"import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nexport default class MainAnalyticsService {\n  static get instance() {\n    if (!this._instance) {\n      this._instance = new MainAnalyticsService();\n    }\n\n    return this._instance;\n  }\n  /**\n   * API get chart inverter performance\n   * @author long.pham 2020-11-02\n   * @param {function(data)} callBack\n   * @param {int} id_site \n   * @return Object\n   */\n\n\n  getDataChartProfile(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_ANALYTICS.CHART_PROFILE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n  /**\n       * @author long.pham 2018-07-27\n       * @param  {RoleEntity} objE\n       * @param  {function(data,total_row,msg)} callBack\n       * @param  {Boolean} isShowProgress\n       */\n\n\n  getListDeviceByProject(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_ANALYTICS.LIST_DEVICE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n       * @author long.pham 2018-07-27\n       * @param  {RoleEntity} objE\n       * @param  {function(data,total_row,msg)} callBack\n       * @param  {Boolean} isShowProgress\n       */\n\n\n  getChartByListDevice(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_ANALYTICS.CHART_PARAMETER_DEVICE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * API get chart mini site inverter performance\n   * @author long.pham 2020-11-02\n   * @param {function(data)} callBack\n   * @param {int} id_site \n   * @return Object\n   */\n\n\n  getChartAlarm(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_ANALYTICS.CHART_ALARM, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/services/MainAnalyticsService.js"],"names":["CMSHttp","Constants","MainAnalyticsService","instance","_instance","getDataChartProfile","objE","callBack","http","post","URL","MAIN_ANALYTICS","CHART_PROFILE","status","rs","data","error","getListDeviceByProject","LIST_DEVICE","total_row","Array","isArray","msg","getChartByListDevice","CHART_PARAMETER_DEVICE","getChartAlarm","CHART_ALARM"],"mappings":"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","sourcesContent":["import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\n\nexport default class MainAnalyticsService {\n    static _instance;\n    static get instance() {\n        if (!this._instance) {\n            this._instance = new MainAnalyticsService();\n        }\n        return this._instance;\n    }\n\n    /**\n     * API get chart inverter performance\n     * @author long.pham 2020-11-02\n     * @param {function(data)} callBack\n     * @param {int} id_site \n     * @return Object\n     */\n    getDataChartProfile(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_ANALYTICS.CHART_PROFILE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n\n\n\n    /**\n         * @author long.pham 2018-07-27\n         * @param  {RoleEntity} objE\n         * @param  {function(data,total_row,msg)} callBack\n         * @param  {Boolean} isShowProgress\n         */\n    getListDeviceByProject(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_ANALYTICS.LIST_DEVICE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n\n\n    /**\n         * @author long.pham 2018-07-27\n         * @param  {RoleEntity} objE\n         * @param  {function(data,total_row,msg)} callBack\n         * @param  {Boolean} isShowProgress\n         */\n    getChartByListDevice(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_ANALYTICS.CHART_PARAMETER_DEVICE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n\n    /**\n     * API get chart mini site inverter performance\n     * @author long.pham 2020-11-02\n     * @param {function(data)} callBack\n     * @param {int} id_site \n     * @return Object\n     */\n    getChartAlarm(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_ANALYTICS.CHART_ALARM, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}