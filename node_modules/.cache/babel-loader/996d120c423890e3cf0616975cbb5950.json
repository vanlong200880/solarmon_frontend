{"ast":null,"code":"import ManualJsx from './Manual.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport MainDeviceService from '../../../../../../services/MainDeviceService';\nimport ControlValidate from './ControlValidate';\nimport './Manual.scss';\n\nclass Manual extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.calbackChangeMode = searchParam => {\n      var self = this;\n      let params = {\n        export_limitation_control_mode: searchParam.scheduled_mode,\n        hash_id: this.state.hash_id,\n        type: 'export_control'\n      };\n      MainDeviceService.instance.updateControlMode(params, function (status, msg) {\n        if (status) {\n          self.setState({\n            searchParam: searchParam,\n            changeMode: false\n          });\n        } else if (!Libs.isBlank(msg)) {\n          self.toast(msg, \"error\");\n        }\n      }, true);\n    };\n\n    this.onClickCloseChangeMode = () => {\n      this.setState({\n        changeMode: false\n      });\n    };\n\n    this.onClickControlCalender = index => {\n      var {\n        dataListInverter\n      } = this.state;\n      if (!Libs.isArrayData(dataListInverter)) return;\n      var item = dataListInverter[index];\n      if (Libs.isObjectEmpty(item)) return;\n      this.setState({\n        showControlCalendar: true,\n        curItem: item\n      });\n    };\n\n    this.onCloseControlCalender = () => {\n      this.setState({\n        showControlCalendar: false\n      });\n    };\n\n    this.onClickCloseOnOff = status => {\n      if (status) {\n        this.getListInverter();\n      }\n\n      this.setState({\n        showOnOffPopup: false\n      });\n    };\n\n    this.onClickOnOff = index => {\n      var {\n        dataListInverter\n      } = this.state;\n      if (!Libs.isArrayData(dataListInverter)) return;\n      var item = dataListInverter[index];\n      if (Libs.isObjectEmpty(item)) return;\n      this.setState({\n        showOnOffPopup: true,\n        curItem: item\n      });\n    };\n\n    this.jsxTemplate = ManualJsx;\n    this.state = {\n      hash_id: this.props.hash_id,\n      curItem: {},\n      curProject: {},\n      dataListInverter: [],\n      showOnOffPopup: false,\n      changeMode: false,\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1,\n        max_date: Libs.getCurrentDDMMYYYY(),\n        current_date: Libs.getCurrentDDMMYYYY(),\n        scheduled_mode: 1,\n        limit_power_status: 1,\n        limit_energy_status: 1\n      }\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListInverter();\n    this.getProjectDetail();\n  }\n  /**\n   * @description Item click event\n   * @author Long.Pham 12-05-2021\n   * @param index element in the list\n   */\n\n\n  getProjectDetail() {\n    var {\n      searchParam\n    } = this.state;\n    var self = this;\n    var params = {\n      hash_id: this.state.hash_id\n    };\n    MainDeviceService.instance.getProjectDetail(params, data => {\n      if (data) {\n        searchParam.scheduled_mode = data.export_limitation_control_mode;\n        searchParam.limit_energy_status = data.limit_energy_status;\n        searchParam.limit_power_status = data.limit_power_status;\n        searchParam.limit_power = data.limit_power;\n        searchParam.limit_energy = data.limit_energy;\n        self.setState({\n          curProject: data,\n          searchParam: searchParam\n        });\n      }\n    }, false);\n  }\n\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n  handleInputChange(event) {\n    let target = event.target,\n        self = this;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        searchParam\n      } = this.state;\n\n      if (name == 'scheduled_manual_mode') {\n        if (searchParam.scheduled_mode == 1) {\n          return;\n        }\n\n        self.setState({\n          changeMode: true\n        });\n      }\n\n      if (name == 'scheduled_auto_mode') {\n        if (searchParam.scheduled_mode == 2) {\n          return;\n        }\n\n        self.setState({\n          changeMode: true\n        });\n      }\n\n      if (name == 'limit_energy_status') {\n        searchParam[name] = searchParam.limit_energy_status == 1 ? 0 : 1;\n      }\n\n      if (name == 'limit_power_status') {\n        searchParam[name] = searchParam.limit_power_status == 1 ? 0 : 1;\n      }\n\n      if (name == 'limit_energy' || name == 'limit_power') {\n        searchParam[name] = event.target.validity.valid ? value : searchParam[name];\n        self.setState({\n          searchParam: searchParam\n        });\n      }\n    }\n  }\n  /**\n   * @description validate a field input\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n\n\n  async validateOne(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new ControlValidate(this.props);\n      let error = await v.validateOne(param, name);\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  getListInverter() {\n    let self = this;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_employee = this.employee.id_employee;\n    params.hash_id = this.state.hash_id;\n    params.type = 'private';\n    MainDeviceService.instance.getListInverter(params, (data, total_row) => {\n      console.log(\"aaa: \", params, data);\n\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataListInverter: data\n        });\n      } else {\n        self.setState({\n          dataListInverter: []\n        });\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  onClickSaveExportLimitationAction() {\n    var {\n      searchParam\n    } = this.state,\n        self = this;\n    let params = {\n      limit_energy: searchParam.limit_energy ? searchParam.limit_energy : null,\n      limit_power: searchParam.limit_power ? searchParam.limit_power : null,\n      hash_id: this.state.hash_id,\n      type: 'save'\n    };\n    MainDeviceService.instance.updateModePowerAndEnergy(params, function (status, msg) {\n      if (status) {\n        self.setState({\n          searchParam: searchParam\n        });\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Manual);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModulePrivate/Control/Manual/Manual.js"],"names":["ManualJsx","BaseComponent","Libs","withTranslation","Constants","MainDeviceService","ControlValidate","Manual","constructor","props","context","calbackChangeMode","searchParam","self","params","export_limitation_control_mode","scheduled_mode","hash_id","state","type","instance","updateControlMode","status","msg","setState","changeMode","isBlank","toast","onClickCloseChangeMode","onClickControlCalender","index","dataListInverter","isArrayData","item","isObjectEmpty","showControlCalendar","curItem","onCloseControlCalender","onClickCloseOnOff","getListInverter","showOnOffPopup","onClickOnOff","jsxTemplate","curProject","limit","COMMON","LIMIT","offset","max_date","getCurrentDDMMYYYY","current_date","limit_power_status","limit_energy_status","handleInputChange","bind","componentDidMount","getProjectDetail","data","limit_power","limit_energy","event","target","name","value","checked","validity","valid","validateOne","param","v","error","setValidateMessage","id_language","employee","id_employee","total_row","console","log","forceUpdate","onClickSaveExportLimitationAction","updateModePowerAndEnergy","render","call","HighOrderComponentTranslated"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,eAAP;;AAEA,MAAMC,MAAN,SAAqBN,aAArB,CAAmC;AAE/BO,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SA0D5BC,iBA1D4B,GA0DPC,WAAD,IAAiB;AACjC,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,MAAM,GAAG;AACTC,QAAAA,8BAA8B,EAAEH,WAAW,CAACI,cADnC;AAETC,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAFX;AAGTE,QAAAA,IAAI,EAAE;AAHG,OAAb;AAMAd,MAAAA,iBAAiB,CAACe,QAAlB,CAA2BC,iBAA3B,CAA6CP,MAA7C,EAAqD,UAAUQ,MAAV,EAAkBC,GAAlB,EAAuB;AACxE,YAAID,MAAJ,EAAY;AACRT,UAAAA,IAAI,CAACW,QAAL,CAAc;AAAEZ,YAAAA,WAAW,EAAEA,WAAf;AAA4Ba,YAAAA,UAAU,EAAE;AAAxC,WAAd;AACH,SAFD,MAGK,IAAI,CAACvB,IAAI,CAACwB,OAAL,CAAaH,GAAb,CAAL,EAAwB;AACzBV,UAAAA,IAAI,CAACc,KAAL,CAAWJ,GAAX,EAAgB,OAAhB;AACH;AACJ,OAPD,EAOG,IAPH;AASH,KA3E2B;;AAAA,SA6E5BK,sBA7E4B,GA6EH,MAAM;AAC3B,WAAKJ,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE;AADF,OAAd;AAGH,KAjF2B;;AAAA,SAgJ5BI,sBAhJ4B,GAgJFC,KAAD,IAAW;AAChC,UAAI;AAAEC,QAAAA;AAAF,UAAuB,KAAKb,KAAhC;AACA,UAAI,CAAChB,IAAI,CAAC8B,WAAL,CAAiBD,gBAAjB,CAAL,EAAyC;AACzC,UAAIE,IAAI,GAAGF,gBAAgB,CAACD,KAAD,CAA3B;AACA,UAAI5B,IAAI,CAACgC,aAAL,CAAmBD,IAAnB,CAAJ,EAA8B;AAC9B,WAAKT,QAAL,CAAc;AACVW,QAAAA,mBAAmB,EAAE,IADX;AAEVC,QAAAA,OAAO,EAAEH;AAFC,OAAd;AAKH,KA1J2B;;AAAA,SA4J5BI,sBA5J4B,GA4JH,MAAM;AAC3B,WAAKb,QAAL,CAAc;AACVW,QAAAA,mBAAmB,EAAE;AADX,OAAd;AAIH,KAjK2B;;AAAA,SAoK5BG,iBApK4B,GAoKPhB,MAAD,IAAY;AAC5B,UAAIA,MAAJ,EAAY;AACR,aAAKiB,eAAL;AACH;;AACD,WAAKf,QAAL,CAAc;AACVgB,QAAAA,cAAc,EAAE;AADN,OAAd;AAGH,KA3K2B;;AAAA,SA8K5BC,YA9K4B,GA8KZX,KAAD,IAAW;AACtB,UAAI;AAAEC,QAAAA;AAAF,UAAuB,KAAKb,KAAhC;AACA,UAAI,CAAChB,IAAI,CAAC8B,WAAL,CAAiBD,gBAAjB,CAAL,EAAyC;AACzC,UAAIE,IAAI,GAAGF,gBAAgB,CAACD,KAAD,CAA3B;AACA,UAAI5B,IAAI,CAACgC,aAAL,CAAmBD,IAAnB,CAAJ,EAA8B;AAC9B,WAAKT,QAAL,CAAc;AACVgB,QAAAA,cAAc,EAAE,IADN;AAEVJ,QAAAA,OAAO,EAAEH;AAFC,OAAd;AAKH,KAxL2B;;AAExB,SAAKS,WAAL,GAAmB1C,SAAnB;AACA,SAAKkB,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE,KAAKR,KAAL,CAAWQ,OADX;AAETmB,MAAAA,OAAO,EAAE,EAFA;AAGTO,MAAAA,UAAU,EAAE,EAHH;AAITZ,MAAAA,gBAAgB,EAAE,EAJT;AAKTS,MAAAA,cAAc,EAAE,KALP;AAMTf,MAAAA,UAAU,EAAE,KANH;AAOTb,MAAAA,WAAW,EAAE;AACTgC,QAAAA,KAAK,EAAExC,SAAS,CAACyC,MAAV,CAAiBC,KADf;AAETC,QAAAA,MAAM,EAAE,CAFC;AAGTjB,QAAAA,KAAK,EAAE,CAHE;AAITkB,QAAAA,QAAQ,EAAE9C,IAAI,CAAC+C,kBAAL,EAJD;AAKTC,QAAAA,YAAY,EAAEhD,IAAI,CAAC+C,kBAAL,EALL;AAMTjC,QAAAA,cAAc,EAAE,CANP;AAOTmC,QAAAA,kBAAkB,EAAE,CAPX;AAQTC,QAAAA,mBAAmB,EAAE;AARZ;AAPJ,KAAb;AAkBA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKhB,eAAL;AACA,SAAKiB,gBAAL;AACH;AAGD;AACJ;AACA;AACA;AACA;;;AACIA,EAAAA,gBAAgB,GAAG;AACf,QAAI;AAAE5C,MAAAA;AAAF,QAAkB,KAAKM,KAA3B;AACA,QAAIL,IAAI,GAAG,IAAX;AACA,QAAIC,MAAM,GAAG;AACTG,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD;AADX,KAAb;AAGAZ,IAAAA,iBAAiB,CAACe,QAAlB,CAA2BoC,gBAA3B,CAA4C1C,MAA5C,EAAoD2C,IAAI,IAAI;AACxD,UAAIA,IAAJ,EAAU;AACN7C,QAAAA,WAAW,CAACI,cAAZ,GAA6ByC,IAAI,CAAC1C,8BAAlC;AACAH,QAAAA,WAAW,CAACwC,mBAAZ,GAAkCK,IAAI,CAACL,mBAAvC;AACAxC,QAAAA,WAAW,CAACuC,kBAAZ,GAAiCM,IAAI,CAACN,kBAAtC;AACAvC,QAAAA,WAAW,CAAC8C,WAAZ,GAA0BD,IAAI,CAACC,WAA/B;AACA9C,QAAAA,WAAW,CAAC+C,YAAZ,GAA2BF,IAAI,CAACE,YAAhC;AACA9C,QAAAA,IAAI,CAACW,QAAL,CAAc;AACVmB,UAAAA,UAAU,EAAEc,IADF;AAEV7C,UAAAA,WAAW,EAAEA;AAFH,SAAd;AAIH;AACJ,KAZD,EAYG,KAZH;AAaH;;AA2BD;AACJ;AACA;AACA;AACIyC,EAAAA,iBAAiB,CAACO,KAAD,EAAQ;AACrB,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,QAA2BhD,IAAI,GAAG,IAAlC;AACA,QAAIiD,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,QAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;;AACA,QAAIF,MAAM,CAAC1C,IAAP,KAAgB,UAApB,EAAgC;AAC5B4C,MAAAA,KAAK,GAAGF,MAAM,CAACG,OAAP,GAAiB,CAAjB,GAAqB,CAA7B;AACH;;AAED,QAAIF,IAAJ,EAAU;AACN,UAAI;AAAElD,QAAAA;AAAF,UAAkB,KAAKM,KAA3B;;AACA,UAAI4C,IAAI,IAAI,uBAAZ,EAAqC;AACjC,YAAIlD,WAAW,CAACI,cAAZ,IAA8B,CAAlC,EAAqC;AAAE;AAAS;;AAChDH,QAAAA,IAAI,CAACW,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AACH;;AACD,UAAIqC,IAAI,IAAI,qBAAZ,EAAmC;AAC/B,YAAIlD,WAAW,CAACI,cAAZ,IAA8B,CAAlC,EAAqC;AAAE;AAAS;;AAChDH,QAAAA,IAAI,CAACW,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AACH;;AAED,UAAIqC,IAAI,IAAI,qBAAZ,EAAmC;AAC/BlD,QAAAA,WAAW,CAACkD,IAAD,CAAX,GAAoBlD,WAAW,CAACwC,mBAAZ,IAAmC,CAAnC,GAAuC,CAAvC,GAA2C,CAA/D;AACH;;AACD,UAAIU,IAAI,IAAI,oBAAZ,EAAkC;AAC9BlD,QAAAA,WAAW,CAACkD,IAAD,CAAX,GAAoBlD,WAAW,CAACuC,kBAAZ,IAAkC,CAAlC,GAAsC,CAAtC,GAA0C,CAA9D;AACH;;AAED,UAAIW,IAAI,IAAI,cAAR,IAA0BA,IAAI,IAAI,aAAtC,EAAqD;AACjDlD,QAAAA,WAAW,CAACkD,IAAD,CAAX,GAAqBF,KAAK,CAACC,MAAN,CAAaI,QAAb,CAAsBC,KAAvB,GAAgCH,KAAhC,GAAwCnD,WAAW,CAACkD,IAAD,CAAvE;AACAjD,QAAAA,IAAI,CAACW,QAAL,CAAc;AAAEZ,UAAAA,WAAW,EAAEA;AAAf,SAAd;AACH;AAEJ;AACJ;AAGD;AACJ;AACA;AACA;AACA;;;AACqB,QAAXuD,WAAW,CAACP,KAAD,EAAQ;AACrB,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,QAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIM,KAAK,GAAG;AACR,SAACN,IAAD,GAAQC;AADA,OAAZ;AAGA,UAAIM,CAAC,GAAG,IAAI/D,eAAJ,CAAoB,KAAKG,KAAzB,CAAR;AACA,UAAI6D,KAAK,GAAG,MAAMD,CAAC,CAACF,WAAF,CAAcC,KAAd,EAAqBN,IAArB,CAAlB;;AACA,UAAIQ,KAAK,IAAI,IAAb,EAAmB;AACf,aAAKC,kBAAL,CAAwBD,KAAxB,EAA+B,IAA/B;AACH;AACJ;AACJ;;AA6CD;AACJ;AACA;AACA;AACI/B,EAAAA,eAAe,GAAG;AACd,QAAI1B,IAAI,GAAG,IAAX;AACA,QAAIC,MAAM,GAAG,KAAKI,KAAL,CAAWN,WAAxB;AACAE,IAAAA,MAAM,CAAC0D,WAAP,GAAqB,KAAKC,QAAL,CAAcD,WAAnC;AACA1D,IAAAA,MAAM,CAAC4D,WAAP,GAAqB,KAAKD,QAAL,CAAcC,WAAnC;AACA5D,IAAAA,MAAM,CAACG,OAAP,GAAiB,KAAKC,KAAL,CAAWD,OAA5B;AACAH,IAAAA,MAAM,CAACK,IAAP,GAAc,SAAd;AACAd,IAAAA,iBAAiB,CAACe,QAAlB,CAA2BmB,eAA3B,CAA2CzB,MAA3C,EAAmD,CAAC2C,IAAD,EAAOkB,SAAP,KAAqB;AACpEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB/D,MAArB,EAA6B2C,IAA7B;;AACA,UAAIvD,IAAI,CAAC8B,WAAL,CAAiByB,IAAjB,CAAJ,EAA4B;AACxB5C,QAAAA,IAAI,CAACW,QAAL,CAAc;AACVO,UAAAA,gBAAgB,EAAE0B;AADR,SAAd;AAGH,OAJD,MAIO;AACH5C,QAAAA,IAAI,CAACW,QAAL,CAAc;AACVO,UAAAA,gBAAgB,EAAE;AADR,SAAd;AAGH;;AACDlB,MAAAA,IAAI,CAACiE,WAAL;AACH,KAZD;AAaH;;AAEDC,EAAAA,iCAAiC,GAAG;AAChC,QAAI;AAAEnE,MAAAA;AAAF,QAAkB,KAAKM,KAA3B;AAAA,QAAkCL,IAAI,GAAG,IAAzC;AAEA,QAAIC,MAAM,GAAG;AACT6C,MAAAA,YAAY,EAAE/C,WAAW,CAAC+C,YAAZ,GAA2B/C,WAAW,CAAC+C,YAAvC,GAAsD,IAD3D;AAETD,MAAAA,WAAW,EAAE9C,WAAW,CAAC8C,WAAZ,GAA0B9C,WAAW,CAAC8C,WAAtC,GAAoD,IAFxD;AAGTzC,MAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAHX;AAITE,MAAAA,IAAI,EAAE;AAJG,KAAb;AAOAd,IAAAA,iBAAiB,CAACe,QAAlB,CAA2B4D,wBAA3B,CAAoDlE,MAApD,EAA4D,UAAUQ,MAAV,EAAkBC,GAAlB,EAAuB;AAC/E,UAAID,MAAJ,EAAY;AACRT,QAAAA,IAAI,CAACW,QAAL,CAAc;AAAEZ,UAAAA,WAAW,EAAEA;AAAf,SAAd;AACH,OAFD,MAGK,IAAI,CAACV,IAAI,CAACwB,OAAL,CAAaH,GAAb,CAAL,EAAwB;AACzBV,QAAAA,IAAI,CAACc,KAAL,CAAWJ,GAAX,EAAgB,OAAhB;AACH;AACJ,KAPD,EAOG,IAPH;AAQH;;AAED0D,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKvC,WAAL,CAAiBwC,IAAjB,CAAsB,IAAtB,CAAP;AACH;;AA5O8B;;AA+OnC,MAAMC,4BAA4B,GAAGhF,eAAe,CAAC,QAAD,CAAf,CAA0BI,MAA1B,CAArC;AACA,eAAe4E,4BAAf","sourcesContent":["import ManualJsx from './Manual.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport MainDeviceService from '../../../../../../services/MainDeviceService';\nimport ControlValidate from './ControlValidate';\nimport './Manual.scss';\n\nclass Manual extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = ManualJsx;\n        this.state = {\n            hash_id: this.props.hash_id,\n            curItem: {},\n            curProject: {},\n            dataListInverter: [],\n            showOnOffPopup: false,\n            changeMode: false,\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n                max_date: Libs.getCurrentDDMMYYYY(),\n                current_date: Libs.getCurrentDDMMYYYY(),\n                scheduled_mode: 1,\n                limit_power_status: 1,\n                limit_energy_status: 1\n            }\n        };\n        this.handleInputChange = this.handleInputChange.bind(this);\n\n\n    }\n\n    componentDidMount() {\n        this.getListInverter();\n        this.getProjectDetail();\n    }\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    getProjectDetail() {\n        var { searchParam } = this.state;\n        var self = this;\n        var params = {\n            hash_id: this.state.hash_id\n        };\n        MainDeviceService.instance.getProjectDetail(params, data => {\n            if (data) {\n                searchParam.scheduled_mode = data.export_limitation_control_mode;\n                searchParam.limit_energy_status = data.limit_energy_status;\n                searchParam.limit_power_status = data.limit_power_status;\n                searchParam.limit_power = data.limit_power;\n                searchParam.limit_energy = data.limit_energy;\n                self.setState({\n                    curProject: data,\n                    searchParam: searchParam\n                });\n            }\n        }, false);\n    }\n\n    calbackChangeMode = (searchParam) => {\n        var self = this;\n        let params = {\n            export_limitation_control_mode: searchParam.scheduled_mode,\n            hash_id: this.state.hash_id,\n            type: 'export_control'\n        };\n\n        MainDeviceService.instance.updateControlMode(params, function (status, msg) {\n            if (status) {\n                self.setState({ searchParam: searchParam, changeMode: false });\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n\n    }\n\n    onClickCloseChangeMode = () => {\n        this.setState({\n            changeMode: false\n        });\n    }\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputChange(event) {\n        let target = event.target, self = this;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { searchParam } = this.state;\n            if (name == 'scheduled_manual_mode') {\n                if (searchParam.scheduled_mode == 1) { return; }\n                self.setState({ changeMode: true });\n            }\n            if (name == 'scheduled_auto_mode') {\n                if (searchParam.scheduled_mode == 2) { return; }\n                self.setState({ changeMode: true });\n            }\n\n            if (name == 'limit_energy_status') {\n                searchParam[name] = searchParam.limit_energy_status == 1 ? 0 : 1\n            }\n            if (name == 'limit_power_status') {\n                searchParam[name] = searchParam.limit_power_status == 1 ? 0 : 1\n            }\n\n            if (name == 'limit_energy' || name == 'limit_power') {\n                searchParam[name] = (event.target.validity.valid) ? value : searchParam[name];\n                self.setState({ searchParam: searchParam });\n            }\n\n        }\n    }\n\n\n    /**\n     * @description validate a field input\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n    async validateOne(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name) {\n            let param = {\n                [name]: value\n            }\n            let v = new ControlValidate(this.props);\n            let error = await v.validateOne(param, name);\n            if (error != null) {\n                this.setValidateMessage(error, true);\n            }\n        }\n    }\n\n\n    onClickControlCalender = (index) => {\n        var { dataListInverter } = this.state;\n        if (!Libs.isArrayData(dataListInverter)) return;\n        var item = dataListInverter[index];\n        if (Libs.isObjectEmpty(item)) return;\n        this.setState({\n            showControlCalendar: true,\n            curItem: item\n        })\n\n    }\n\n    onCloseControlCalender = () => {\n        this.setState({\n            showControlCalendar: false\n        })\n\n    }\n\n\n    onClickCloseOnOff = (status) => {\n        if (status) {\n            this.getListInverter();\n        }\n        this.setState({\n            showOnOffPopup: false\n        })\n    }\n\n\n    onClickOnOff = (index) => {\n        var { dataListInverter } = this.state;\n        if (!Libs.isArrayData(dataListInverter)) return;\n        var item = dataListInverter[index];\n        if (Libs.isObjectEmpty(item)) return;\n        this.setState({\n            showOnOffPopup: true,\n            curItem: item\n        })\n\n    }\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getListInverter() {\n        let self = this;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_employee = this.employee.id_employee;\n        params.hash_id = this.state.hash_id;\n        params.type = 'private';\n        MainDeviceService.instance.getListInverter(params, (data, total_row) => {\n            console.log(\"aaa: \", params, data);\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListInverter: data\n                });\n            } else {\n                self.setState({\n                    dataListInverter: []\n                });\n            }\n            self.forceUpdate();\n        });\n    }\n\n    onClickSaveExportLimitationAction() {\n        var { searchParam } = this.state, self = this;\n\n        let params = {\n            limit_energy: searchParam.limit_energy ? searchParam.limit_energy : null,\n            limit_power: searchParam.limit_power ? searchParam.limit_power : null,\n            hash_id: this.state.hash_id,\n            type: 'save'\n        };\n\n        MainDeviceService.instance.updateModePowerAndEnergy(params, function (status, msg) {\n            if (status) {\n                self.setState({ searchParam: searchParam });\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Manual)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}