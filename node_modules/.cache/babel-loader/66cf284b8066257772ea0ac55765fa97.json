{"ast":null,"code":"import BaseComponent from '../../../BaseComponent';\nimport DeleteAllPopupJsx from './DeleteAllPopup.jsx';\nimport ClientNotifyService from '../../../../services/ClientNotifyService';\nimport Libs from '../../../../utils/Libs';\n\nclass DeleteAllPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curItem: this.props.curItem,\n      dataList: this.props.dataList\n    };\n    this.jsxTemplate = DeleteAllPopupJsx;\n  }\n  /**\n   * @description close popup\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  onClickCloseDeleteAll() {\n    if (!this.props.onClickCloseDeleteAll || typeof this.props.onClickCloseDeleteAll !== 'function') return;\n    this.props.onClickCloseDeleteAll(false, null);\n  }\n  /** \n   * @description delete\n   * @author Long.Pham 12/05/2021\n  */\n\n\n  async onDeleteAction() {\n    let params = Object.assign({}, this.state.curItem),\n        self = this;\n    var dataList = this.state.dataList;\n    var dataArr = [];\n\n    if (Libs.isArrayData(dataList)) {\n      for (var i = 0, len = dataList.length; i < len; i++) {\n        if (dataList[i].is_checked) {\n          dataArr.push({\n            id: dataList[i].id,\n            updated_by: this.employee.first_name + ' ' + this.employee.last_name,\n            status: 0\n          });\n        }\n      }\n    }\n\n    params.dataArr = dataArr;\n\n    if (Libs.isArrayData(dataArr)) {\n      ClientNotifyService.instance.closeAlert(params, function (status, data, msg) {\n        if (status) {\n          self.toast(msg, \"info\");\n          self.props.onClickCloseDeleteAll(true, data);\n        } else if (data) {\n          self.setValidateMessage(data);\n        } else if (!Libs.isBlank(msg)) {\n          self.toast(msg, \"error\");\n        }\n      }, true);\n    }\n  }\n\n}\n\nexport default DeleteAllPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/Notify/DeleteAllPopup.js"],"names":["BaseComponent","DeleteAllPopupJsx","ClientNotifyService","Libs","DeleteAllPopup","constructor","props","state","curItem","dataList","jsxTemplate","onClickCloseDeleteAll","onDeleteAction","params","Object","assign","self","dataArr","isArrayData","i","len","length","is_checked","push","id","updated_by","employee","first_name","last_name","status","instance","closeAlert","data","msg","toast","setValidateMessage","isBlank"],"mappings":"AACA,OAAOA,aAAP,MAA0B,wBAA1B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,cAAN,SAA6BJ,aAA7B,CAA2C;AACvCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OADX;AAETC,MAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAFZ,KAAb;AAIA,SAAKC,WAAL,GAAmBT,iBAAnB;AACH;AAED;AACJ;AACA;AACA;;;AACIU,EAAAA,qBAAqB,GAAG;AACpB,QAAI,CAAC,KAAKL,KAAL,CAAWK,qBAAZ,IAAqC,OAAO,KAAKL,KAAL,CAAWK,qBAAlB,KAA4C,UAArF,EAAiG;AACjG,SAAKL,KAAL,CAAWK,qBAAX,CAAiC,KAAjC,EAAwC,IAAxC;AACH;AAGD;AACJ;AACA;AACA;;;AACwB,QAAdC,cAAc,GAAG;AACnB,QAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKR,KAAL,CAAWC,OAA7B,CAAb;AAAA,QAAoDQ,IAAI,GAAG,IAA3D;AACA,QAAIP,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,QAAIQ,OAAO,GAAG,EAAd;;AACA,QAAId,IAAI,CAACe,WAAL,CAAiBT,QAAjB,CAAJ,EAAgC;AAC5B,WAAK,IAAIU,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGX,QAAQ,CAACY,MAA/B,EAAuCF,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,YAAIV,QAAQ,CAACU,CAAD,CAAR,CAAYG,UAAhB,EAA4B;AACxBL,UAAAA,OAAO,CAACM,IAAR,CAAa;AACTC,YAAAA,EAAE,EAAEf,QAAQ,CAACU,CAAD,CAAR,CAAYK,EADP;AAETC,YAAAA,UAAU,EAAE,KAAKC,QAAL,CAAcC,UAAd,GAA2B,GAA3B,GAAiC,KAAKD,QAAL,CAAcE,SAFlD;AAGTC,YAAAA,MAAM,EAAE;AAHC,WAAb;AAKH;AACJ;AACJ;;AACDhB,IAAAA,MAAM,CAACI,OAAP,GAAiBA,OAAjB;;AACA,QAAId,IAAI,CAACe,WAAL,CAAiBD,OAAjB,CAAJ,EAA+B;AAC3Bf,MAAAA,mBAAmB,CAAC4B,QAApB,CAA6BC,UAA7B,CAAwClB,MAAxC,EAAgD,UAAUgB,MAAV,EAAkBG,IAAlB,EAAwBC,GAAxB,EAA6B;AACzE,YAAIJ,MAAJ,EAAY;AACRb,UAAAA,IAAI,CAACkB,KAAL,CAAWD,GAAX,EAAgB,MAAhB;AACAjB,UAAAA,IAAI,CAACV,KAAL,CAAWK,qBAAX,CAAiC,IAAjC,EAAuCqB,IAAvC;AACH,SAHD,MAIK,IAAIA,IAAJ,EAAU;AACXhB,UAAAA,IAAI,CAACmB,kBAAL,CAAwBH,IAAxB;AACH,SAFI,MAGA,IAAI,CAAC7B,IAAI,CAACiC,OAAL,CAAaH,GAAb,CAAL,EAAwB;AACzBjB,UAAAA,IAAI,CAACkB,KAAL,CAAWD,GAAX,EAAgB,OAAhB;AACH;AACJ,OAXD,EAWG,IAXH;AAYH;AAEJ;;AAvDsC;;AAyD3C,eAAe7B,cAAf","sourcesContent":["\nimport BaseComponent from '../../../BaseComponent';\nimport DeleteAllPopupJsx from './DeleteAllPopup.jsx';\nimport ClientNotifyService from '../../../../services/ClientNotifyService';\nimport Libs from '../../../../utils/Libs';\n\nclass DeleteAllPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            dataList: this.props.dataList\n        }\n        this.jsxTemplate = DeleteAllPopupJsx;\n    }\n\n    /**\n     * @description close popup\n     * @author Long.Pham 12/05/2021\n     */\n    onClickCloseDeleteAll() {\n        if (!this.props.onClickCloseDeleteAll || typeof this.props.onClickCloseDeleteAll !== 'function') return;\n        this.props.onClickCloseDeleteAll(false, null);\n    }\n\n\n    /** \n     * @description delete\n     * @author Long.Pham 12/05/2021\n    */\n    async onDeleteAction() {\n        let params = Object.assign({}, this.state.curItem), self = this;\n        var dataList = this.state.dataList;\n        var dataArr = [];\n        if (Libs.isArrayData(dataList)) {\n            for (var i = 0, len = dataList.length; i < len; i++) {\n                if (dataList[i].is_checked) {\n                    dataArr.push({\n                        id: dataList[i].id,\n                        updated_by: this.employee.first_name + ' ' + this.employee.last_name,\n                        status: 0\n                    });\n                }\n            }\n        }\n        params.dataArr = dataArr;\n        if (Libs.isArrayData(dataArr)) {\n            ClientNotifyService.instance.closeAlert(params, function (status, data, msg) {\n                if (status) {\n                    self.toast(msg, \"info\");\n                    self.props.onClickCloseDeleteAll(true, data);\n                }\n                else if (data) {\n                    self.setValidateMessage(data);\n                }\n                else if (!Libs.isBlank(msg)) {\n                    self.toast(msg, \"error\");\n                }\n            }, true);\n        }\n\n    }\n}\nexport default DeleteAllPopup;"]},"metadata":{},"sourceType":"module"}