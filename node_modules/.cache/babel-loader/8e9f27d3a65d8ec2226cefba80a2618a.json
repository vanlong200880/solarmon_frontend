{"ast":null,"code":"import DeviceAlarmJsx from './DeviceAlarm.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport MainDeviceService from '../../../../../../services/MainDeviceService';\nimport ErrorLevelService from '../../../../../../services/ErrorLevelService';\nimport ErrorTypeService from '../../../../../../services/ErrorTypeService';\n\nclass DeviceAlarm extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleDropdownChange = (item, name) => {\n      if (Libs.isObjectEmpty(item)) return;\n      var self = this,\n          value = item.value;\n      let {\n        searchParam\n      } = self.state;\n\n      if (name === 'id_error_level') {\n        if (Libs.isObjectEmpty(item)) {\n          searchParam.id_error_level = '';\n        }\n      }\n\n      if (name === 'id_error_type') {\n        if (Libs.isObjectEmpty(item)) {\n          searchParam.id_error_type = '';\n        }\n      }\n\n      searchParam[name] = value;\n      self.setState({\n        searchParam: searchParam\n      });\n    };\n\n    this.jsxTemplate = DeviceAlarmJsx;\n    this.state = {\n      curItem: Object.assign({}, this.props.curItem),\n      dataList: [],\n      dataErrorLevel: [],\n      dataErrorType: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      formSearch: false,\n      allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n    this.handleInputDateChange = this.handleInputDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getList();\n    this.getListErrorLevel();\n    this.getListErrorType();\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n\n\n  handleInputDateChange(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        searchParam\n      } = this.state;\n      searchParam[name] = value;\n      this.setState({\n        searchParam: searchParam\n      });\n    }\n  }\n  /**\n  * ge list error state\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorType() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorType: data\n        });\n      } else {\n        self.setState({\n          dataErrorType: []\n        });\n      }\n    });\n  }\n  /**\n  * ge list error level\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorLevel() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorLevel: data\n        });\n      } else {\n        self.setState({\n          dataErrorLevel: []\n        });\n      }\n    });\n  }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  getList() {\n    let self = this;\n    var {\n      curItem\n    } = this.state;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id = curItem.id;\n    params.type = 'private';\n    MainDeviceService.instance.getListAlertByDevice(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.date_from = null;\n    searchParam.date_to = null;\n    searchParam.id_error_level = null;\n    searchParam.id_error_type = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(DeviceAlarm);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModulePrivate/Device/DeviceAlarm/DeviceAlarm.js"],"names":["DeviceAlarmJsx","BaseComponent","Libs","withTranslation","Constants","MainDeviceService","ErrorLevelService","ErrorTypeService","DeviceAlarm","constructor","props","context","handleDropdownChange","item","name","isObjectEmpty","self","value","searchParam","state","id_error_level","id_error_type","setState","jsxTemplate","curItem","Object","assign","dataList","dataErrorLevel","dataErrorType","limit","COMMON","LIMIT","offset","index","formSearch","allLanguage","isBlank","employee","languages","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","handleInputDateChange","componentDidMount","getList","getListErrorLevel","getListErrorType","event","target","type","checked","params","id_language","instance","getDropdownList","data","total_row","isArrayData","id","getListAlertByDevice","parseInt","forceUpdate","t","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","date_from","date_to","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import DeviceAlarmJsx from './DeviceAlarm.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport MainDeviceService from '../../../../../../services/MainDeviceService';\nimport ErrorLevelService from '../../../../../../services/ErrorLevelService';\nimport ErrorTypeService from '../../../../../../services/ErrorTypeService';\n\nclass DeviceAlarm extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = DeviceAlarmJsx;\n        this.state = {\n            curItem: Object.assign({}, this.props.curItem),\n            dataList: [],\n            dataErrorLevel: [],\n            dataErrorType: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            formSearch: false,\n            allLanguage: Libs.isBlank(this.employee) ? [] : this.employee.languages\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n        this.handleInputDateChange = this.handleInputDateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getList();\n        this.getListErrorLevel();\n        this.getListErrorType();\n    }\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputDateChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { searchParam } = this.state;\n            searchParam[name] = value;\n            this.setState({ searchParam: searchParam });\n        }\n    }\n\n    /**\n    * ge list error state\n    * @author Long.Pham 2019-06-03\n    */\n    getListErrorType() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorType: data\n                });\n            } else {\n                self.setState({\n                    dataErrorType: []\n                });\n            }\n        })\n    }\n\n    /**\n   * ge list error level\n   * @author Long.Pham 2019-06-03\n   */\n    getListErrorLevel() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorLevel: data\n                });\n            } else {\n                self.setState({\n                    dataErrorLevel: []\n                });\n            }\n        })\n    }\n\n\n\n\n    handleDropdownChange = (item, name) => {\n        if (Libs.isObjectEmpty(item)) return;\n        var self = this, value = item.value;\n        let { searchParam } = self.state;\n        if (name === 'id_error_level') {\n            if (Libs.isObjectEmpty(item)) {\n                searchParam.id_error_level = '';\n            }\n        }\n\n        if (name === 'id_error_type') {\n            if (Libs.isObjectEmpty(item)) {\n                searchParam.id_error_type = '';\n            }\n        }\n\n        searchParam[name] = value;\n        self.setState({\n            searchParam: searchParam\n        });\n    }\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        var { curItem } = this.state;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id = curItem.id;\n        params.type = 'private';\n        MainDeviceService.instance.getListAlertByDevice(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n    /**\n      * @description Call form search\n      * @author Long.Pham 12/05/2021\n      */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.date_from = null;\n        searchParam.date_to = null;\n        searchParam.id_error_level = null;\n        searchParam.id_error_type = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(DeviceAlarm)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}