{"ast":null,"code":"// var crypto = require('crypto');\nvar CryptoJS=require('crypto-js');var CryptoLib=function CryptoLib(){};module.exports=CryptoLib;/**\n * Encrypt plain string to md5 string\n * @param {*} str \n * @return string\n */CryptoLib.SHA3=function SHA3(plainText){// var sha256 = crypto.createHash(\"sha256\");\nreturn CryptoJS.SHA3(plainText,{outputLength:512}).toString(CryptoJS.enc.Hex);// sha256.update(str);\n// var str = sha256.digest('hex');\n// return str;\n};// CryptoLib.generateSalt = function (nChar) {\n//     return crypto.randomBytes(nChar).toString('hex');\n// };\n/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */CryptoLib.base64Encrypt=function(plaintext){var base64Txt=Buffer.from(plaintext).toString('base64');return base64Txt;};/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */CryptoLib.base64Decrypt=function(ciph){var txt=Buffer.from(ciph,'base64').toString('utf-8');return txt;};/**\n * Encrypt plain string to md5 string\n * @param {*} str \n * @return string\n */ // CryptoLib.md5 = function md5(str) {\n//     var md5 = crypto.createHash(\"md5\");\n//     md5.update(str);\n//     var str = md5.digest('hex');\n//     return str.toUpperCase();  //32 ký tự viết hoa  \n// }\n/**\n * AES Encrypt plain string to AES string\n * @param {*} str \n * @return string\n */ // CryptoLib.AESEncrypt = function AESEncrypt(str, secretKey) {\n//     var string = CryptoJS.AES.encrypt(str, secretKey).toString();\n//     return string;\n// }\n/**\n * AES Decrypt plain string to AES string\n * @param {*} str \n * @return string\n */ // CryptoLib.AESDecrypt = function AESDecrypt(str, secretKey) {\n//     var bytes = CryptoJS.AES.decrypt(str.toString(), secretKey);\n//     var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n//     return plaintext;\n// }\n// var md5 = md5('hello world','test');\n// console.log(md5);\n// var hw = encrypt(\"hello world\")\n// console.log(hw);\n// // outputs hello world\n// console.log(decrypt(hw));","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/utils/Crypto.js"],"names":["CryptoJS","require","CryptoLib","module","exports","SHA3","plainText","outputLength","toString","enc","Hex","base64Encrypt","plaintext","base64Txt","Buffer","from","base64Decrypt","ciph","txt"],"mappings":"AAAA;AACA,GAAIA,CAAAA,QAAQ,CAAGC,OAAO,CAAC,WAAD,CAAtB,CAEA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAY,CAAG,CAA/B,CACAC,MAAM,CAACC,OAAP,CAAiBF,SAAjB,CAEA;AACA;AACA;AACA;AACA,GACAA,SAAS,CAACG,IAAV,CAAiB,QAASA,CAAAA,IAAT,CAAcC,SAAd,CAAyB,CACtC;AACA,MAAON,CAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,CAAyB,CAAEC,YAAY,CAAE,GAAhB,CAAzB,EAAgDC,QAAhD,CAAyDR,QAAQ,CAACS,GAAT,CAAaC,GAAtE,CAAP,CACA;AACA;AACA;AACH,CAND,CAQA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA,GACAR,SAAS,CAACS,aAAV,CAA0B,SAAUC,SAAV,CAAqB,CAC3C,GAAIC,CAAAA,SAAS,CAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBJ,QAAvB,CAAgC,QAAhC,CAAhB,CACA,MAAOK,CAAAA,SAAP,CACH,CAHD,CAIA;AACA;AACA;AACA;AACA,GACAX,SAAS,CAACc,aAAV,CAA0B,SAAUC,IAAV,CAAgB,CACtC,GAAIC,CAAAA,GAAG,CAAGJ,MAAM,CAACC,IAAP,CAAYE,IAAZ,CAAkB,QAAlB,EAA4BT,QAA5B,CAAqC,OAArC,CAAV,CACA,MAAOU,CAAAA,GAAP,CACH,CAHD,CAIA;AACA;AACA;AACA;AACA,G,CACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,G,CACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA,G,CACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// var crypto = require('crypto');\nvar CryptoJS = require('crypto-js');\n\nvar CryptoLib = function () { };\nmodule.exports = CryptoLib;\n\n/**\n * Encrypt plain string to md5 string\n * @param {*} str \n * @return string\n */\nCryptoLib.SHA3 = function SHA3(plainText) {\n    // var sha256 = crypto.createHash(\"sha256\");\n    return CryptoJS.SHA3(plainText, { outputLength: 512 }).toString(CryptoJS.enc.Hex);\n    // sha256.update(str);\n    // var str = sha256.digest('hex');\n    // return str;\n}\n\n// CryptoLib.generateSalt = function (nChar) {\n//     return crypto.randomBytes(nChar).toString('hex');\n// };\n\n\n\n/**\n * encrypt text to base64\n * @param plaintext \n * @return string\n */\nCryptoLib.base64Encrypt = function (plaintext) {\n    var base64Txt = Buffer.from(plaintext).toString('base64');\n    return base64Txt;\n}\n/**\n * decrypt to plain text from base64\n * @param {*} ciph \n * @return string\n */\nCryptoLib.base64Decrypt = function (ciph) {\n    var txt = Buffer.from(ciph, 'base64').toString('utf-8');\n    return txt;\n}\n/**\n * Encrypt plain string to md5 string\n * @param {*} str \n * @return string\n */\n// CryptoLib.md5 = function md5(str) {\n//     var md5 = crypto.createHash(\"md5\");\n//     md5.update(str);\n//     var str = md5.digest('hex');\n//     return str.toUpperCase();  //32 ký tự viết hoa  \n// }\n\n/**\n * AES Encrypt plain string to AES string\n * @param {*} str \n * @return string\n */\n// CryptoLib.AESEncrypt = function AESEncrypt(str, secretKey) {\n//     var string = CryptoJS.AES.encrypt(str, secretKey).toString();\n//     return string;\n// }\n\n\n/**\n * AES Decrypt plain string to AES string\n * @param {*} str \n * @return string\n */\n// CryptoLib.AESDecrypt = function AESDecrypt(str, secretKey) {\n//     var bytes = CryptoJS.AES.decrypt(str.toString(), secretKey);\n//     var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n//     return plaintext;\n// }\n\n\n\n// var md5 = md5('hello world','test');\n// console.log(md5);\n// var hw = encrypt(\"hello world\")\n// console.log(hw);\n// // outputs hello world\n// console.log(decrypt(hw));"]},"metadata":{},"sourceType":"module"}