{"ast":null,"code":"import BaseComponent from '../../BaseComponent';\nimport LoginJsx from './Login.jsx';\nimport { withTranslation } from 'react-i18next';\nimport LoginValidate from './LoginValidate';\nimport Libs from '../../../utils/Libs';\nimport Constants from '../../../utils/Constants';\nimport EmployeeService from '../../../services/EmployeeService';\n\nclass Login extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.jsxTemplate = LoginJsx;\n    this.state = {\n      curItem: {},\n      lang: \"en\"\n    };\n  }\n\n  async componentWillMount() {\n    await localStorage.clear(); // if (!Libs.isBlank(localStorage.getItem(Constants.COMMON.TOKEN))) {\n    //     window.location.href = Constants.SITE_URL.DEFAULT_PAGE;\n    //     return;\n    // }\n    // else await localStorage.clear()\n  }\n\n  async onSaveAction() {\n    let curItem = this.state.curItem,\n        self = this;\n    let user = {\n      email: curItem.email,\n      password: Libs.SHA3(curItem.password),\n      lang: this.state.lang\n    };\n    let v = new LoginValidate(this.props);\n    let errors = await v.FLValidationAll(curItem);\n\n    if (errors) {\n      this.setValidateMessage(errors);\n      return;\n    }\n\n    var {\n      t\n    } = this.props;\n    EmployeeService.instance.getLogin(user, function (data) {\n      if (!Libs.isObjectEmpty(data)) {\n        self.setAccessParam(data);\n        var permissions = data.permissions;\n        var dashboard = permissions[\"/dashboard\"];\n        var main = permissions[\"/main\"];\n\n        if (!Libs.isObjectEmpty(main) && main.auth > 0) {\n          window.location.href = Constants.SITE_URL.DEFAULT_MAIN;\n        } else if (!Libs.isObjectEmpty(dashboard) && dashboard.auth > 0) {\n          window.location.href = Constants.SITE_URL.DEFAULT_PAGE;\n        }\n\n        return;\n      } else {\n        self.toast(t('login.error'), \"error\");\n      }\n    }, false);\n  }\n  /**\r\n  * set user login parameters to localstore\r\n  * @param {object} param \r\n  * @param {string} lang \r\n  */\n\n\n  setAccessParam(param) {\n    let token = param.token;\n    let permissions = param.permissions;\n    var type = 'dashboard';\n    var dashboard = permissions[\"/dashboard\"];\n    var main = permissions[\"/main\"];\n\n    if (!Libs.isObjectEmpty(main) && main.auth > 0) {\n      type = 'main';\n    } else if (!Libs.isObjectEmpty(dashboard) && dashboard.auth > 0) {\n      type = 'dashboard';\n    }\n\n    localStorage.setItem(Constants.COMMON.TOKEN, token);\n    let jsonPermissions = JSON.stringify(permissions);\n    localStorage.setItem(Constants.COMMON.ACCESS_PARAM, Libs.base64Encrypt(jsonPermissions));\n    var lang = 'en';\n    var id_language = '';\n\n    if (Libs.isArrayData(param.languages)) {\n      var findItemLang = Libs.find(param.languages, 'is_default', 1);\n\n      if (!Libs.isObjectEmpty(findItemLang)) {\n        lang = findItemLang.iso_code;\n        id_language = findItemLang.id;\n      }\n    }\n\n    let info = {\n      lang: lang,\n      id_language: id_language,\n      email: param.email,\n      first_name: param.first_name,\n      last_name: param.last_name,\n      full_name: param.full_name,\n      avatar: param.avatar,\n      id_employee: param.id_employee,\n      timeout: param.timeout,\n      roles: param.roles,\n      languages: param.languages,\n      menu_collapse: true,\n      type: type\n    };\n    let jsonUser = JSON.stringify(info);\n    localStorage.setItem(Constants.COMMON.EMPLOYEE_INFO, Libs.base64Encrypt(jsonUser));\n  }\n  /**\r\n   * @description validate a field input\r\n   * @author Long.Pham 13/06/2021\r\n   * @param {*} event \r\n   */\n\n\n  async validateOne(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new LoginValidate(this.props);\n      let error = await v.validateOne(param, name);\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n\n  render() {\n    if (!localStorage.getItem(Constants.COMMON.TOKEN)) {\n      return this.jsxTemplate.call(this);\n    }\n\n    return null;\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Login);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/Login/Login.js"],"names":["BaseComponent","LoginJsx","withTranslation","LoginValidate","Libs","Constants","EmployeeService","Login","constructor","props","context","jsxTemplate","state","curItem","lang","componentWillMount","localStorage","clear","onSaveAction","self","user","email","password","SHA3","v","errors","FLValidationAll","setValidateMessage","t","instance","getLogin","data","isObjectEmpty","setAccessParam","permissions","dashboard","main","auth","window","location","href","SITE_URL","DEFAULT_MAIN","DEFAULT_PAGE","toast","param","token","type","setItem","COMMON","TOKEN","jsonPermissions","JSON","stringify","ACCESS_PARAM","base64Encrypt","id_language","isArrayData","languages","findItemLang","find","iso_code","id","info","first_name","last_name","full_name","avatar","id_employee","timeout","roles","menu_collapse","jsonUser","EMPLOYEE_INFO","validateOne","event","target","name","value","error","render","getItem","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import BaseComponent from '../../BaseComponent';\r\nimport LoginJsx from './Login.jsx';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LoginValidate from './LoginValidate';\r\nimport Libs from '../../../utils/Libs';\r\nimport Constants from '../../../utils/Constants';\r\nimport EmployeeService from '../../../services/EmployeeService';\r\n\r\nclass Login extends BaseComponent {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.jsxTemplate = LoginJsx;\r\n        this.state = {\r\n            curItem: {},\r\n            lang: \"en\"\r\n        };\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await localStorage.clear();\r\n        // if (!Libs.isBlank(localStorage.getItem(Constants.COMMON.TOKEN))) {\r\n        //     window.location.href = Constants.SITE_URL.DEFAULT_PAGE;\r\n        //     return;\r\n        // }\r\n        // else await localStorage.clear()\r\n    }\r\n\r\n\r\n    async onSaveAction() {\r\n        let curItem = this.state.curItem, self = this;\r\n        let user = {\r\n            email: curItem.email,\r\n            password: Libs.SHA3(curItem.password),\r\n            lang: this.state.lang\r\n        };\r\n\r\n        let v = new LoginValidate(this.props);\r\n        let errors = await v.FLValidationAll(curItem);\r\n        if (errors) {\r\n            this.setValidateMessage(errors);\r\n            return;\r\n        }\r\n        var { t } = this.props;\r\n        EmployeeService.instance.getLogin(user, function (data) {\r\n            if (!Libs.isObjectEmpty(data)) {\r\n                self.setAccessParam(data);\r\n                var permissions = data.permissions;\r\n                var dashboard = permissions[\"/dashboard\"];\r\n                var main = permissions[\"/main\"];\r\n                if(!Libs.isObjectEmpty(main) && main.auth > 0){\r\n                    window.location.href = Constants.SITE_URL.DEFAULT_MAIN;\r\n                } else if (!Libs.isObjectEmpty(dashboard) && dashboard.auth > 0){\r\n                    window.location.href = Constants.SITE_URL.DEFAULT_PAGE;\r\n                }\r\n\r\n                return;\r\n            }\r\n            else {\r\n                self.toast(t('login.error'), \"error\");\r\n            }\r\n        }, false);\r\n    }\r\n\r\n\r\n    /**\r\n   * set user login parameters to localstore\r\n   * @param {object} param \r\n   * @param {string} lang \r\n   */\r\n    setAccessParam(param) {\r\n        let token = param.token;\r\n        let permissions = param.permissions;\r\n        var type = 'dashboard';\r\n        var dashboard = permissions[\"/dashboard\"];\r\n        var main = permissions[\"/main\"];\r\n        if(!Libs.isObjectEmpty(main) && main.auth > 0){\r\n            type = 'main';\r\n        } else if (!Libs.isObjectEmpty(dashboard) && dashboard.auth > 0){\r\n            type = 'dashboard';\r\n        }\r\n\r\n        localStorage.setItem(Constants.COMMON.TOKEN, token);\r\n        let jsonPermissions = JSON.stringify(permissions);\r\n        localStorage.setItem(Constants.COMMON.ACCESS_PARAM, Libs.base64Encrypt(jsonPermissions));\r\n        var lang = 'en';\r\n        var id_language = '';\r\n        if (Libs.isArrayData(param.languages)) {\r\n            var findItemLang = Libs.find(param.languages, 'is_default', 1);\r\n            if (!Libs.isObjectEmpty(findItemLang)) {\r\n                lang = findItemLang.iso_code;\r\n                id_language = findItemLang.id;\r\n            }\r\n        }\r\n\r\n        let info = {\r\n            lang: lang,\r\n            id_language: id_language,\r\n            email: param.email,\r\n            first_name: param.first_name,\r\n            last_name: param.last_name,\r\n            full_name: param.full_name,\r\n            avatar: param.avatar,\r\n            id_employee: param.id_employee,\r\n            timeout: param.timeout,\r\n            roles: param.roles,\r\n            languages: param.languages,\r\n            menu_collapse: true,\r\n            type: type\r\n        }\r\n        let jsonUser = JSON.stringify(info);\r\n        localStorage.setItem(Constants.COMMON.EMPLOYEE_INFO, Libs.base64Encrypt(jsonUser));\r\n    }\r\n\r\n\r\n    /**\r\n     * @description validate a field input\r\n     * @author Long.Pham 13/06/2021\r\n     * @param {*} event \r\n     */\r\n    async validateOne(event) {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value\r\n        if (name) {\r\n            let param = {\r\n                [name]: value\r\n            }\r\n            let v = new LoginValidate(this.props);\r\n            let error = await v.validateOne(param, name);\r\n            if (error != null) {\r\n                this.setValidateMessage(error, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!localStorage.getItem(Constants.COMMON.TOKEN)) {\r\n            return this.jsxTemplate.call(this);\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nconst HighOrderComponentTranslated = withTranslation('common')(Login)\r\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}