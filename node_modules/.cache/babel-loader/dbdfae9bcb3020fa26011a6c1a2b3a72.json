{"ast":null,"code":"import BaseComponent from '../../BaseComponent';\nimport ForgotPasswordJsx from './ForgotPassword.jsx';\nimport { withTranslation } from 'react-i18next';\nimport ForgotPasswordValidate from './ForgotPasswordValidate';\nimport Libs from '../../../utils/Libs';\nimport EmployeeService from '../../../services/EmployeeService';\n\nclass ForgotPassword extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.jsxTemplate = ForgotPasswordJsx;\n    this.state = {\n      curItem: {},\n      lang: \"en\",\n      message: \"\"\n    };\n  }\n\n  async onSaveAction() {\n    let curItem = this.state.curItem,\n        self = this;\n    let user = {\n      email: curItem.email,\n      lang: this.state.lang,\n      iso_code: curItem.iso_code\n    };\n    let v = new ForgotPasswordValidate(this.props);\n    let errors = await v.FLValidationAll(curItem);\n\n    if (errors) {\n      this.setValidateMessage(errors);\n      return;\n    }\n\n    var {\n      t\n    } = this.props;\n    EmployeeService.instance.getForgotPassword(user, function (data) {\n      if (!Libs.isObjectEmpty(data)) {\n        self.setState({\n          message: t('forgot_password.success')\n        });\n      } else {\n        self.toast(t('forgot_password.error'), \"error\");\n      }\n    }, false);\n  }\n  /**\r\n   * @description validate a field input\r\n   * @author Long.Pham 13/06/2021\r\n   * @param {*} event \r\n   */\n\n\n  async validateOne(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new ForgotPasswordValidate(this.props);\n      let error = await v.validateOne(param, name);\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(ForgotPassword);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/ForgotPassword/ForgotPassword.js"],"names":["BaseComponent","ForgotPasswordJsx","withTranslation","ForgotPasswordValidate","Libs","EmployeeService","ForgotPassword","constructor","props","context","jsxTemplate","state","curItem","lang","message","onSaveAction","self","user","email","iso_code","v","errors","FLValidationAll","setValidateMessage","t","instance","getForgotPassword","data","isObjectEmpty","setState","toast","validateOne","event","target","name","value","param","error","render","call","HighOrderComponentTranslated"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;AAEA,MAAMC,cAAN,SAA6BN,aAA7B,CAA2C;AAEvCO,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,WAAL,GAAmBT,iBAAnB;AACA,SAAKU,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAGiB,QAAZC,YAAY,GAAG;AACjB,QAAIH,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAzB;AAAA,QAAkCI,IAAI,GAAG,IAAzC;AACA,QAAIC,IAAI,GAAG;AACPC,MAAAA,KAAK,EAAEN,OAAO,CAACM,KADR;AAEPL,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFV;AAGPM,MAAAA,QAAQ,EAAEP,OAAO,CAACO;AAHX,KAAX;AAMA,QAAIC,CAAC,GAAG,IAAIjB,sBAAJ,CAA2B,KAAKK,KAAhC,CAAR;AACA,QAAIa,MAAM,GAAG,MAAMD,CAAC,CAACE,eAAF,CAAkBV,OAAlB,CAAnB;;AACA,QAAIS,MAAJ,EAAY;AACR,WAAKE,kBAAL,CAAwBF,MAAxB;AACA;AACH;;AACD,QAAI;AAAEG,MAAAA;AAAF,QAAQ,KAAKhB,KAAjB;AACAH,IAAAA,eAAe,CAACoB,QAAhB,CAAyBC,iBAAzB,CAA2CT,IAA3C,EAAiD,UAAUU,IAAV,EAAgB;AAC7D,UAAI,CAACvB,IAAI,CAACwB,aAAL,CAAmBD,IAAnB,CAAL,EAA+B;AAC3BX,QAAAA,IAAI,CAACa,QAAL,CAAc;AACVf,UAAAA,OAAO,EAAEU,CAAC,CAAC,yBAAD;AADA,SAAd;AAIH,OALD,MAKO;AACHR,QAAAA,IAAI,CAACc,KAAL,CAAWN,CAAC,CAAC,uBAAD,CAAZ,EAAuC,OAAvC;AACH;AACJ,KATD,EASG,KATH;AAUH;AAGD;AACJ;AACA;AACA;AACA;;;AACqB,QAAXO,WAAW,CAACC,KAAD,EAAQ;AACrB,QAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AACA,QAAIC,IAAI,GAAGD,MAAM,CAACC,IAAlB;AACA,QAAIC,KAAK,GAAGF,MAAM,CAACE,KAAnB;;AACA,QAAID,IAAJ,EAAU;AACN,UAAIE,KAAK,GAAG;AACR,SAACF,IAAD,GAAQC;AADA,OAAZ;AAGA,UAAIf,CAAC,GAAG,IAAIjB,sBAAJ,CAA2B,KAAKK,KAAhC,CAAR;AACA,UAAI6B,KAAK,GAAG,MAAMjB,CAAC,CAACW,WAAF,CAAcK,KAAd,EAAqBF,IAArB,CAAlB;;AACA,UAAIG,KAAK,IAAI,IAAb,EAAmB;AACf,aAAKd,kBAAL,CAAwBc,KAAxB,EAA+B,IAA/B;AACH;AACJ;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,KAAK5B,WAAL,CAAiB6B,IAAjB,CAAsB,IAAtB,CAAP;AACH;;AAhEsC;;AAoE3C,MAAMC,4BAA4B,GAAGtC,eAAe,CAAC,QAAD,CAAf,CAA0BI,cAA1B,CAArC;AACA,eAAekC,4BAAf","sourcesContent":["import BaseComponent from '../../BaseComponent';\r\nimport ForgotPasswordJsx from './ForgotPassword.jsx';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ForgotPasswordValidate from './ForgotPasswordValidate';\r\nimport Libs from '../../../utils/Libs';\r\nimport EmployeeService from '../../../services/EmployeeService';\r\n\r\nclass ForgotPassword extends BaseComponent {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.jsxTemplate = ForgotPasswordJsx;\r\n        this.state = {\r\n            curItem: {},\r\n            lang: \"en\",\r\n            message: \"\"\r\n        };\r\n    }\r\n\r\n\r\n    async onSaveAction() {\r\n        let curItem = this.state.curItem, self = this;\r\n        let user = {\r\n            email: curItem.email,\r\n            lang: this.state.lang,\r\n            iso_code: curItem.iso_code\r\n        };\r\n\r\n        let v = new ForgotPasswordValidate(this.props);\r\n        let errors = await v.FLValidationAll(curItem);\r\n        if (errors) {\r\n            this.setValidateMessage(errors);\r\n            return;\r\n        }\r\n        var { t } = this.props;\r\n        EmployeeService.instance.getForgotPassword(user, function (data) {\r\n            if (!Libs.isObjectEmpty(data)) {\r\n                self.setState({\r\n                    message: t('forgot_password.success')\r\n                })\r\n\r\n            } else {\r\n                self.toast(t('forgot_password.error'), \"error\");\r\n            }\r\n        }, false);\r\n    }\r\n\r\n\r\n    /**\r\n     * @description validate a field input\r\n     * @author Long.Pham 13/06/2021\r\n     * @param {*} event \r\n     */\r\n    async validateOne(event) {\r\n        let target = event.target;\r\n        let name = target.name;\r\n        let value = target.value\r\n        if (name) {\r\n            let param = {\r\n                [name]: value\r\n            }\r\n            let v = new ForgotPasswordValidate(this.props);\r\n            let error = await v.validateOne(param, name);\r\n            if (error != null) {\r\n                this.setValidateMessage(error, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.jsxTemplate.call(this);\r\n    }\r\n\r\n}\r\n\r\nconst HighOrderComponentTranslated = withTranslation('common')(ForgotPassword)\r\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}