{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleProject/Config/AlertTrigger/AlertTrigger.js\";\nimport AlertTriggerJsx from './AlertTrigger.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport ClientConfigService from '../../../../../../services/ClientConfigService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AlertTrigger extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      curItem: {},\n      itemDevice: this.props.itemDevice\n    };\n    this.jsxTemplate = AlertTriggerJsx;\n  }\n\n  componentDidMount() {\n    this.getDeviceDetail();\n  }\n\n  getDeviceDetail() {\n    let self = this,\n        itemDevice = this.props.itemDevice;\n    var params = {\n      id: itemDevice.id,\n      id_employee: this.employee.id_employee,\n      id_language: this.employee.id_language\n    };\n    ClientConfigService.instance.getDeviceDetail(params, data => {\n      if (data) {\n        self.setState({\n          curItem: data\n        });\n      }\n    }, false);\n  }\n\n  async onSave() {\n    var self = this;\n    var params = Object.assign({}, this.state.curItem);\n    params.screen_mode = Constants.SCREEN_MODE.EDIT;\n    params.id_language = this.employee.id_language;\n    ClientConfigService.instance.updateDevice(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n  render() {\n    var {\n      itemDevice\n    } = this.state;\n    return Libs.isObjectEmpty(itemDevice) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-empty\",\n      children: \"Device is not selected \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 49\n    }, this) : this.jsxTemplate.call(this); // if()\n    // switch (parseInt(itemDevice.id_device_group)) {\n    //     case 18: // 6 string \n    //     case 21: // 6 string \n    //     case 28: // 12 string\n    //         return this.jsxTemplate.call(this);\n    //     default:\n    // }\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(AlertTrigger);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleProject/Config/AlertTrigger/AlertTrigger.js"],"names":["AlertTriggerJsx","BaseComponent","Libs","withTranslation","Constants","ClientConfigService","AlertTrigger","constructor","props","context","state","curItem","itemDevice","jsxTemplate","componentDidMount","getDeviceDetail","self","params","id","id_employee","employee","id_language","instance","data","setState","onSave","Object","assign","screen_mode","SCREEN_MODE","EDIT","updateDevice","status","msg","toast","setValidateMessage","isBlank","render","isObjectEmpty","call","HighOrderComponentTranslated"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,mBAAP,MAAgC,gDAAhC;;;AAEA,MAAMC,YAAN,SAA2BL,aAA3B,CAAyC;AAErCM,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWI;AAFd,KAAb;AAMA,SAAKC,WAAL,GAAmBb,eAAnB;AACH;;AAEDc,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,eAAL;AACH;;AACDA,EAAAA,eAAe,GAAG;AACd,QAAIC,IAAI,GAAG,IAAX;AAAA,QAAiBJ,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAAzC;AACA,QAAIK,MAAM,GAAG;AACTC,MAAAA,EAAE,EAAEN,UAAU,CAACM,EADN;AAETC,MAAAA,WAAW,EAAE,KAAKC,QAAL,CAAcD,WAFlB;AAGTE,MAAAA,WAAW,EAAE,KAAKD,QAAL,CAAcC;AAHlB,KAAb;AAMAhB,IAAAA,mBAAmB,CAACiB,QAApB,CAA6BP,eAA7B,CAA6CE,MAA7C,EAAqDM,IAAI,IAAI;AACzD,UAAIA,IAAJ,EAAU;AACNP,QAAAA,IAAI,CAACQ,QAAL,CAAc;AACVb,UAAAA,OAAO,EAAEY;AADC,SAAd;AAGH;AACJ,KAND,EAMG,KANH;AAQH;;AAGW,QAANE,MAAM,GAAG;AACX,QAAIT,IAAI,GAAG,IAAX;AACA,QAAIC,MAAM,GAAGS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKjB,KAAL,CAAWC,OAA7B,CAAb;AACAM,IAAAA,MAAM,CAACW,WAAP,GAAqBxB,SAAS,CAACyB,WAAV,CAAsBC,IAA3C;AACAb,IAAAA,MAAM,CAACI,WAAP,GAAqB,KAAKD,QAAL,CAAcC,WAAnC;AAEAhB,IAAAA,mBAAmB,CAACiB,QAApB,CAA6BS,YAA7B,CAA0Cd,MAA1C,EAAkD,UAAUe,MAAV,EAAkBT,IAAlB,EAAwBU,GAAxB,EAA6B;AAC3E,UAAID,MAAJ,EAAY;AACRhB,QAAAA,IAAI,CAACkB,KAAL,CAAWD,GAAX,EAAgB,MAAhB;AACH,OAFD,MAGK,IAAIV,IAAJ,EAAU;AACXP,QAAAA,IAAI,CAACmB,kBAAL,CAAwBZ,IAAxB;AACH,OAFI,MAIA,IAAI,CAACrB,IAAI,CAACkC,OAAL,CAAaH,GAAb,CAAL,EAAwB;AACzBjB,QAAAA,IAAI,CAACkB,KAAL,CAAWD,GAAX,EAAgB,OAAhB;AACH;AACJ,KAXD,EAWG,IAXH;AAYH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEzB,MAAAA;AAAF,QAAiB,KAAKF,KAA1B;AACA,WAAOR,IAAI,CAACoC,aAAL,CAAmB1B,UAAnB,iBAAiC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjC,GAA6F,KAAKC,WAAL,CAAiB0B,IAAjB,CAAsB,IAAtB,CAApG,CAFK,CAGL;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACH;;AApEoC;;AAuEzC,MAAMC,4BAA4B,GAAGrC,eAAe,CAAC,QAAD,CAAf,CAA0BG,YAA1B,CAArC;AACA,eAAekC,4BAAf","sourcesContent":["import AlertTriggerJsx from './AlertTrigger.jsx';\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../../utils/Constants';\nimport ClientConfigService from '../../../../../../services/ClientConfigService';\n\nclass AlertTrigger extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            curItem: {},\n            itemDevice: this.props.itemDevice\n\n        };\n\n        this.jsxTemplate = AlertTriggerJsx;\n    }\n\n    componentDidMount() {\n        this.getDeviceDetail();\n    }\n    getDeviceDetail() {\n        let self = this, itemDevice = this.props.itemDevice;\n        var params = {\n            id: itemDevice.id,\n            id_employee: this.employee.id_employee,\n            id_language: this.employee.id_language\n        };\n\n        ClientConfigService.instance.getDeviceDetail(params, data => {\n            if (data) {\n                self.setState({\n                    curItem: data\n                });\n            }\n        }, false);\n\n    }\n\n\n    async onSave() {\n        var self = this;\n        var params = Object.assign({}, this.state.curItem);\n        params.screen_mode = Constants.SCREEN_MODE.EDIT;\n        params.id_language = this.employee.id_language;\n\n        ClientConfigService.instance.updateDevice(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n\n    render() {\n        var { itemDevice } = this.state;\n        return Libs.isObjectEmpty(itemDevice) ? <div className=\"data-empty\">Device is not selected </div> : this.jsxTemplate.call(this);\n        // if()\n        // switch (parseInt(itemDevice.id_device_group)) {\n        //     case 18: // 6 string \n        //     case 21: // 6 string \n        //     case 28: // 12 string\n        //         return this.jsxTemplate.call(this);\n        //     default:\n\n        // }\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(AlertTrigger)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}