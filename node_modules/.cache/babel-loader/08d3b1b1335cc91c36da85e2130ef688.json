{"ast":null,"code":"/**\n * 数据遍历\n * @author ydr.me\n * 2014-09-14 17:26\n */\nvar typeis = require('./typeis.js');\n\nvar udf;\nvar canListTypeArr = 'array object nodelist htmlcollection arguments namednodemap'.split(' ');\nvar REG_BEGIN_0 = /^0+/;\nvar w = global;\n/**\n * 判断对象是否有自己的静态属性\n * @param obj\n * @param key\n * @returns {boolean}\n */\n\nexports.hasStatic = function (obj, key) {\n  try {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n  } catch (err) {\n    return false;\n  }\n};\n/**\n * 遍历元素\n * @param {Array/Object} list  数组、可枚举对象\n * @param {Function} callback  回调，返回false时停止遍历\n * @param {Boolean} [reverse=false] 数组倒序\n *\n * @example\n * // 与 jQuery.each 一样\n * // 返回 false 时将退出当前遍历\n * data.each(list, function(key, val){});\n */\n\n\nexports.each = function (list, callback, reverse) {\n  var i;\n  var j; // 数组 或 类似数组\n\n  if (list && typeis.number(list.length)) {\n    if (reverse) {\n      for (i = list.length - 1, j = 0; i >= 0; i--) {\n        if (callback.call(w, i, list[i]) === false) {\n          break;\n        }\n      }\n    } else {\n      for (i = 0, j = list.length; i < j; i++) {\n        if (callback.call(w, i, list[i]) === false) {\n          break;\n        }\n      }\n    }\n  } // 纯对象\n  else if (list !== null && list !== udf) {\n      for (i in list) {\n        if (exports.hasStatic(list, i)) {\n          if (callback.call(w, i, list[i]) === false) {\n            break;\n          }\n        }\n      }\n    }\n};\n/**\n * 重复运行\n * @param count {Number} 重复次数\n * @param fn {Function} 重复方法\n */\n\n\nexports.repeat = function (count, fn) {\n  var i = -1;\n\n  while (++i < count) {\n    if (fn(i, count) === false) {\n      break;\n    }\n  }\n};\n/**\n * 扩展静态对象\n * @param {Boolean|Object} [isExtendDeep] 是否深度扩展，可省略，默认false\n * @param {Object}  [source] 源对象\n * @param {...Object}  [target] 目标对象，可以是多个\n * @returns {*}\n *\n * @example\n * // 使用方法与 jQuery.extend 一样\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => true\n *\n * // 如果不想污染原始对象，可以传递一个空对象作为容器\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, {}, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => fale\n */\n\n\nexports.extend = function (isExtendDeep, source, target) {\n  var args = arguments;\n  var firstArgIsBoolean = typeof args[0] === 'boolean';\n  var current = firstArgIsBoolean ? 1 : 0;\n  var length = args.length;\n  var i;\n  var obj;\n  var sourceType;\n  var objType;\n  isExtendDeep = firstArgIsBoolean && args[0] === true;\n  source = args[current++];\n\n  for (; current < length; current++) {\n    obj = args[current];\n\n    for (i in obj) {\n      if (exports.hasStatic(obj, i) && obj[i] !== undefined) {\n        sourceType = typeis(source[i]);\n        objType = typeis(obj[i]);\n\n        if (objType === 'object' && isExtendDeep) {\n          source[i] = sourceType !== objType ? {} : source[i];\n          exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n        } else if (objType === 'array' && isExtendDeep) {\n          source[i] = sourceType !== objType ? [] : source[i];\n          exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n        } else {\n          source[i] = obj[i];\n        }\n      }\n    }\n  }\n\n  return source;\n};\n/**\n * 萃取\n * @param data {Object} 传递的数据\n * @param keys {Array} 摘取的键数组\n * @param [filter] {Function} 过滤方法，默认取不为 undefined 键值\n * @returns {Object}\n */\n\n\nexports.select = function (data, keys, filter) {\n  var data2 = {};\n  data = data || {};\n\n  filter = filter || function (val) {\n    return val !== udf;\n  };\n\n  keys.forEach(function (key) {\n    if (filter(data[key])) {\n      data2[key] = data[key];\n    }\n  });\n  return data2;\n};\n/**\n * 转换对象为一个纯数组，只要对象有length属性即可\n * @param {Object} [obj] 对象\n * @param {Boolean} [isConvertWhole] 是否转换整个对象为数组中的第0个元素，当该对象无length属性时，默认false\n * @returns {Array}\n *\n * @example\n * var o = {0:\"foo\", 1:\"bar\", length: 2}\n * data.toArray(o);\n * // => [\"foo\", \"bar\"]\n *\n * var a1 = [1, 2, 3];\n * // 转换后的数组是之前的副本\n * var a2 = data.toArray(a1);\n * // => [1, 2, 3]\n * a2 === a1;\n * // => false\n */\n\n\nexports.toArray = function (obj, isConvertWhole) {\n  var ret = [];\n  var i = 0;\n  var j;\n  var objType = typeis(obj);\n\n  if (canListTypeArr.indexOf(objType) > -1 && typeis(obj.length) === 'number' && obj.length >= 0) {\n    for (j = obj.length; i < j; i++) {\n      ret.push(obj[i]);\n    }\n  } else if (obj && isConvertWhole) {\n    ret.push(obj);\n  }\n\n  return ret;\n};\n/**\n * 对象1级比较，找出相同和不同的键\n * @param obj1 {Object|Array}\n * @param obj2 {Object|Array}\n * @returns {Object}\n *\n * @example\n * data.compare({a:1,b:2,c:3}, {a:1,d:4});\n * // =>\n * // {\n     * //    same: [\"a\"],\n     * //    only: [\n     * //       [\"b\", \"c\"],\n     * //       [\"d\"]\n     * //    ],\n     * //    different: [\"b\", \"c\", \"d\"]\n     * // }\n */\n\n\nexports.compare = function (obj1, obj2) {\n  var obj1Type = typeis(obj1);\n  var obj2Type = typeis(obj2);\n  var obj1Only = [];\n  var obj2Only = [];\n  var same = []; // 类型不同\n\n  if (obj1Type !== obj2Type) {\n    return null;\n  } // 对象\n\n\n  if (obj1Type === 'object' || obj1Type === 'array') {\n    exports.each(obj1, function (key, val) {\n      if (obj2[key] !== val) {\n        obj1Only.push(key);\n      } else {\n        same.push(key);\n      }\n    });\n    exports.each(obj2, function (key, val) {\n      if (obj1[key] !== val) {\n        obj2Only.push(key);\n      }\n    });\n    return {\n      same: same,\n      only: [obj1Only, obj2Only],\n      different: obj1Only.concat(obj2Only)\n    };\n  } else {\n    return null;\n  }\n};\n/**\n * 比较两个长整型数值\n * @param long1 {String} 长整型数值字符串1\n * @param long2 {String} 长整型数值字符串2\n * @param [operator=\">\"] {String} 比较操作符，默认比较 long1 > long2\n * @returns {*}\n */\n\n\nexports.than = function (long1, long2, operator) {\n  operator = operator || '>';\n  long1 = String(long1).replace(REG_BEGIN_0, '');\n  long2 = String(long2).replace(REG_BEGIN_0, ''); // 1. 比较长度\n\n  if (long1.length > long2.length) {\n    return operator === '>';\n  } else if (long1.length < long2.length) {\n    return operator === '<';\n  }\n\n  var long1List = exports.humanize(long1, ',', 15).split(',');\n  var long2List = exports.humanize(long2, ',', 15).split(','); //[\n  // '123456',\n  // '789012345678901',\n  // '234567890123456',\n  // '789012345678901',\n  // '234567890123457'\n  // ]\n  // 2. 比较数组长度\n\n  if (long1List.length > long2List.length) {\n    return operator === '>';\n  } else if (long1List.length < long2List.length) {\n    return operator === '<';\n  } // 3. 遍历比较\n\n\n  var ret = false;\n  exports.each(long1List, function (index, number1) {\n    var number2 = long2List[index];\n\n    if (number1 > number2) {\n      ret = operator === '>';\n      return false;\n    } else if (number1 < number2) {\n      ret = operator === '<';\n      return false;\n    }\n  });\n  return ret;\n}; /////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\n\nvar qs = require('querystring');\n\nvar encryption = require('../../utils/Crypto.js');\n/**\n * 获取 gravatar\n * @param email {String} 邮箱\n * @param [options] {Object} 配置\n * @param [options.origin=\"http://gravatar.duoshuo.com/avatar/\"] {String} 服务器\n * @param [options.size=100] {Number} 尺寸\n * @param [options.default=\"retro\"] {Number} 默认头像\n * @param [options.forcedefault=false] {*} 是否忽略默认头像\n * @param [options.rating=null] {*} 评级\n * @returns {string}\n */\n\n\nexports.gravatar = function (email, options) {\n  options = options || {};\n  email = email.toLowerCase();\n\n  if (!options.origin) {\n    options.origin = 'http://cn.gravatar.com/avatar/';\n  }\n\n  options.origin += encryption.md5(email) + '?';\n\n  if (!options.size) {\n    options.size = 100;\n  }\n\n  if (!options.default) {\n    //options.default = 'http://s.ydr.me/p/i/avatar.png';\n    options.default = 'retro';\n  }\n\n  if (options.forcedefault) {\n    options.forcedefault = 'y';\n  } else {\n    options.forcedefault = false;\n  }\n\n  var query = {\n    s: options.size\n  };\n\n  if (options.default) {\n    query.d = options.default;\n  }\n\n  if (options.forcedefault) {\n    query.f = options.forcedefault;\n  }\n\n  if (options.rating) {\n    query.r = options.rating;\n  }\n\n  return options.origin + qs.stringify(query);\n};","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/validator/libs/dato.js"],"names":["typeis","require","udf","canListTypeArr","split","REG_BEGIN_0","w","global","exports","hasStatic","obj","key","Object","prototype","hasOwnProperty","call","err","each","list","callback","reverse","i","j","number","length","repeat","count","fn","extend","isExtendDeep","source","target","args","arguments","firstArgIsBoolean","current","sourceType","objType","undefined","select","data","keys","filter","data2","val","forEach","toArray","isConvertWhole","ret","indexOf","push","compare","obj1","obj2","obj1Type","obj2Type","obj1Only","obj2Only","same","only","different","concat","than","long1","long2","operator","String","replace","long1List","humanize","long2List","index","number1","number2","qs","encryption","gravatar","email","options","toLowerCase","origin","md5","size","default","forcedefault","query","s","d","f","rating","r","stringify"],"mappings":"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","sourcesContent":["/**\n * 数据遍历\n * @author ydr.me\n * 2014-09-14 17:26\n */\n\n\nvar typeis = require('./typeis.js');\nvar udf;\nvar canListTypeArr = 'array object nodelist htmlcollection arguments namednodemap'.split(' ');\nvar REG_BEGIN_0 = /^0+/;\nvar w = global;\n\n\n/**\n * 判断对象是否有自己的静态属性\n * @param obj\n * @param key\n * @returns {boolean}\n */\nexports.hasStatic = function (obj, key) {\n    try {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    } catch (err) {\n        return false;\n    }\n};\n\n\n/**\n * 遍历元素\n * @param {Array/Object} list  数组、可枚举对象\n * @param {Function} callback  回调，返回false时停止遍历\n * @param {Boolean} [reverse=false] 数组倒序\n *\n * @example\n * // 与 jQuery.each 一样\n * // 返回 false 时将退出当前遍历\n * data.each(list, function(key, val){});\n */\nexports.each = function (list, callback, reverse) {\n    var i;\n    var j;\n\n    // 数组 或 类似数组\n    if (list && typeis.number(list.length)) {\n        if (reverse) {\n            for (i = list.length - 1, j = 0; i >= 0; i--) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        } else {\n            for (i = 0, j = list.length; i < j; i++) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        }\n    }\n    // 纯对象\n    else if (list !== null && list !== udf) {\n        for (i in list) {\n            if (exports.hasStatic(list, i)) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        }\n    }\n};\n\n\n/**\n * 重复运行\n * @param count {Number} 重复次数\n * @param fn {Function} 重复方法\n */\nexports.repeat = function (count, fn) {\n    var i = -1;\n\n    while (++i < count) {\n        if (fn(i, count) === false) {\n            break;\n        }\n    }\n};\n\n\n/**\n * 扩展静态对象\n * @param {Boolean|Object} [isExtendDeep] 是否深度扩展，可省略，默认false\n * @param {Object}  [source] 源对象\n * @param {...Object}  [target] 目标对象，可以是多个\n * @returns {*}\n *\n * @example\n * // 使用方法与 jQuery.extend 一样\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => true\n *\n * // 如果不想污染原始对象，可以传递一个空对象作为容器\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, {}, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => fale\n */\nexports.extend = function (isExtendDeep, source, target) {\n    var args = arguments;\n    var firstArgIsBoolean = typeof(args[0]) === 'boolean';\n    var current = firstArgIsBoolean ? 1 : 0;\n    var length = args.length;\n    var i;\n    var obj;\n    var sourceType;\n    var objType;\n\n    isExtendDeep = firstArgIsBoolean && args[0] === true;\n    source = args[current++];\n\n    for (; current < length; current++) {\n        obj = args[current];\n        for (i in obj) {\n            if (exports.hasStatic(obj, i) && obj[i] !== undefined) {\n                sourceType = typeis(source[i]);\n                objType = typeis(obj[i]);\n\n                if (objType === 'object' && isExtendDeep) {\n                    source[i] = sourceType !== objType ? {} : source[i];\n                    exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n                } else if (objType === 'array' && isExtendDeep) {\n                    source[i] = sourceType !== objType ? [] : source[i];\n                    exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n                } else {\n                    source[i] = obj[i];\n                }\n            }\n        }\n    }\n\n    return source;\n};\n\n\n/**\n * 萃取\n * @param data {Object} 传递的数据\n * @param keys {Array} 摘取的键数组\n * @param [filter] {Function} 过滤方法，默认取不为 undefined 键值\n * @returns {Object}\n */\nexports.select = function (data, keys, filter) {\n    var data2 = {};\n\n    data = data || {};\n\n    filter = filter || function (val) {\n            return val !== udf;\n        };\n\n    keys.forEach(function (key) {\n        if (filter(data[key])) {\n            data2[key] = data[key];\n        }\n    });\n\n    return data2;\n};\n\n\n/**\n * 转换对象为一个纯数组，只要对象有length属性即可\n * @param {Object} [obj] 对象\n * @param {Boolean} [isConvertWhole] 是否转换整个对象为数组中的第0个元素，当该对象无length属性时，默认false\n * @returns {Array}\n *\n * @example\n * var o = {0:\"foo\", 1:\"bar\", length: 2}\n * data.toArray(o);\n * // => [\"foo\", \"bar\"]\n *\n * var a1 = [1, 2, 3];\n * // 转换后的数组是之前的副本\n * var a2 = data.toArray(a1);\n * // => [1, 2, 3]\n * a2 === a1;\n * // => false\n */\nexports.toArray = function (obj, isConvertWhole) {\n    var ret = [];\n    var i = 0;\n    var j;\n    var objType = typeis(obj);\n\n    if (canListTypeArr.indexOf(objType) > -1 && typeis(obj.length) === 'number' && obj.length >= 0) {\n        for (j = obj.length; i < j; i++) {\n            ret.push(obj[i]);\n        }\n    } else if (obj && isConvertWhole) {\n        ret.push(obj);\n    }\n\n    return ret;\n};\n\n\n/**\n * 对象1级比较，找出相同和不同的键\n * @param obj1 {Object|Array}\n * @param obj2 {Object|Array}\n * @returns {Object}\n *\n * @example\n * data.compare({a:1,b:2,c:3}, {a:1,d:4});\n * // =>\n * // {\n     * //    same: [\"a\"],\n     * //    only: [\n     * //       [\"b\", \"c\"],\n     * //       [\"d\"]\n     * //    ],\n     * //    different: [\"b\", \"c\", \"d\"]\n     * // }\n */\nexports.compare = function (obj1, obj2) {\n    var obj1Type = typeis(obj1);\n    var obj2Type = typeis(obj2);\n    var obj1Only = [];\n    var obj2Only = [];\n    var same = [];\n\n    // 类型不同\n    if (obj1Type !== obj2Type) {\n        return null;\n    }\n\n    // 对象\n    if (obj1Type === 'object' || obj1Type === 'array') {\n        exports.each(obj1, function (key, val) {\n            if (obj2[key] !== val) {\n                obj1Only.push(key);\n            } else {\n                same.push(key);\n            }\n        });\n\n        exports.each(obj2, function (key, val) {\n            if (obj1[key] !== val) {\n                obj2Only.push(key);\n            }\n        });\n\n        return {\n            same: same,\n            only: [\n                obj1Only,\n                obj2Only\n            ],\n            different: obj1Only.concat(obj2Only)\n        };\n    } else {\n        return null;\n    }\n};\n\n\n/**\n * 比较两个长整型数值\n * @param long1 {String} 长整型数值字符串1\n * @param long2 {String} 长整型数值字符串2\n * @param [operator=\">\"] {String} 比较操作符，默认比较 long1 > long2\n * @returns {*}\n */\nexports.than = function (long1, long2, operator) {\n    operator = operator || '>';\n    long1 = String(long1).replace(REG_BEGIN_0, '');\n    long2 = String(long2).replace(REG_BEGIN_0, '');\n\n    // 1. 比较长度\n    if (long1.length > long2.length) {\n        return operator === '>';\n    } else if (long1.length < long2.length) {\n        return operator === '<';\n    }\n\n    var long1List = exports.humanize(long1, ',', 15).split(',');\n    var long2List = exports.humanize(long2, ',', 15).split(',');\n\n    //[\n    // '123456',\n    // '789012345678901',\n    // '234567890123456',\n    // '789012345678901',\n    // '234567890123457'\n    // ]\n\n    // 2. 比较数组长度\n    if (long1List.length > long2List.length) {\n        return operator === '>';\n    } else if (long1List.length < long2List.length) {\n        return operator === '<';\n    }\n\n    // 3. 遍历比较\n    var ret = false;\n\n    exports.each(long1List, function (index, number1) {\n        var number2 = long2List[index];\n\n        if (number1 > number2) {\n            ret = operator === '>';\n            return false;\n        } else if (number1 < number2) {\n            ret = operator === '<';\n            return false;\n        }\n    });\n\n    return ret;\n};\n\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nvar qs = require('querystring');\nvar encryption = require('../../utils/Crypto.js');\n\n\n/**\n * 获取 gravatar\n * @param email {String} 邮箱\n * @param [options] {Object} 配置\n * @param [options.origin=\"http://gravatar.duoshuo.com/avatar/\"] {String} 服务器\n * @param [options.size=100] {Number} 尺寸\n * @param [options.default=\"retro\"] {Number} 默认头像\n * @param [options.forcedefault=false] {*} 是否忽略默认头像\n * @param [options.rating=null] {*} 评级\n * @returns {string}\n */\nexports.gravatar = function (email, options) {\n    options = options || {};\n    email = email.toLowerCase();\n\n    if (!options.origin) {\n        options.origin = 'http://cn.gravatar.com/avatar/';\n    }\n\n    options.origin += encryption.md5(email) + '?';\n\n    if (!options.size) {\n        options.size = 100;\n    }\n\n    if (!options.default) {\n        //options.default = 'http://s.ydr.me/p/i/avatar.png';\n        options.default = 'retro';\n    }\n\n    if (options.forcedefault) {\n        options.forcedefault = 'y';\n    } else {\n        options.forcedefault = false;\n    }\n\n    var query = {\n        s: options.size\n    };\n\n    if (options.default) {\n        query.d = options.default;\n    }\n\n    if (options.forcedefault) {\n        query.f = options.forcedefault;\n    }\n\n    if (options.rating) {\n        query.r = options.rating;\n    }\n\n    return options.origin + qs.stringify(query);\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}