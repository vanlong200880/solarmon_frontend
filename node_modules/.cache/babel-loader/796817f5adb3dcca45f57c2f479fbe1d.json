{"ast":null,"code":"/**\n * 验证规则库\n * @author ydr.me\n * @create 2015-07-05 22:40\n */\nvar typeis = require('./typeis.js');\n\nvar number = require('./number.js');\n\nvar string = require('./string.js');\n\nvar lang = require('./_validation-lang.js');\n\nvar REG_NUMBERIC = /^-?[\\d.]+$/;\n\nmodule.exports = function (Validation) {\n  Validation.addRule('trim', function (val, done, param0) {\n    if (param0) {\n      this.data[this.path] = typeis(val) === 'string' || typeis(val) === 'number' ? String(val).trim() : '';\n    }\n\n    done();\n  });\n  Validation.addRule('type', function (val, done, param0) {\n    var the = this;\n    var path = the.path;\n    var isRequired = the.getRuleParams(path, 'required');\n    isRequired = isRequired ? isRequired[0] : true;\n    var alias = the.getAlias(path) || path;\n\n    if (!isRequired && !val) {\n      return done(null);\n    }\n\n    switch (param0) {\n      case 'array':\n        return done(typeis(val) === 'array' ? null : string.assign(lang.get('type', 'array'), alias, param0));\n\n      case 'number':\n        return done(/^-?\\d+(\\.?\\d{0,3}$)|^\\.?\\d{0,3}$|^-$/g.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n\n      case 'decimal':\n        return done(/^\\d*\\.?\\d*$/.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n\n      case 'number_positive':\n        return done(/^\\d+(\\.\\d{1,3})?$/.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n\n      case 'integer':\n        if (typeof val === 'number') {\n          val = val.toString();\n        }\n\n        val = val.replace(/^-/, '');\n        return done(/^(0|[1-9]\\d*)$/.test(val) ? null : string.assign(lang.get('type', 'integer'), alias, param0));\n\n      case 'mobile':\n        return done(/^1\\d{10}$/.test(val) ? null : string.assign(lang.get('type', 'mobile'), alias, param0));\n\n      case 'email':\n        return done(typeis.email(val) ? null : string.assign(lang.get('type', 'email'), alias, param0));\n\n      case 'url':\n        return done(typeis.url(val) ? null : string.assign(lang.get('type', 'url'), alias, param0));\n\n      case 'dateDMY':\n        return done(typeis.date(val) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n\n      case 'dateYMD':\n        return done(typeis.date(val, true) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n\n      case 'dateDMYHm':\n        return done(typeis.dateTimeToMinute(val) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n\n      case 'dateYMDHm':\n        return done(typeis.dateTimeToMinute(val, true) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n\n      case 'numreicAllowZero':\n        if (typeof val === 'number') {\n          val = val.toString();\n        }\n\n        return done(/^[0-9]*$/.test(val) ? null : string.assign(lang.get('type', 'numreicAllowZero'), alias, param0));\n\n      default:\n        break;\n    }\n  });\n  Validation.addRule('required', function (val, done, param0) {\n    if (!param0) {\n      return done();\n    }\n\n    var convertVal = typeof val === 'number' ? val.toString() : val;\n\n    var isMultiple = _isMultiple(convertVal);\n\n    var boolean = typeis(convertVal) === 'file' ? true : (isMultiple ? convertVal : convertVal || '').length > 0; //done(boolean ? null : '${path}不能为空');\n\n    done(boolean ? null : lang.get('required'));\n  });\n\n  var _createLength = function (type) {\n    var typeMap = {\n      0: 'minLength',\n      1: 'maxLength'\n    };\n    return function (val, done, param0) {\n      param0 = number.parseInt(param0);\n      var convertVal = typeof val === 'number' ? val.toString() : val;\n      var requiredParams = this.getRuleParams(this.path, 'required');\n      var required = requiredParams ? requiredParams[0] : true;\n\n      var isMultiple = _isMultiple(convertVal);\n\n      var length = (isMultiple ? convertVal : convertVal || '').length;\n      var boolean = type === 0 ? length >= param0 : length <= param0; // 未填 && 可选\n\n      if (!length && !required) {\n        return done();\n      }\n\n      if (isMultiple) {\n        done(boolean ? null : lang.get(typeMap[type], 'select'));\n      } else {\n        done(boolean ? null : lang.get(typeMap[type], 'input'));\n      }\n    };\n  };\n\n  Validation.addRule('minLength', _createLength(0));\n  Validation.addRule('maxLength', _createLength(1));\n  Validation.addRule('equal', function (val, done, param0) {\n    val = val || '';\n    done(val === this.getData(param0) ? null : '${1}必须与' + this.getAlias(param0) + '相同');\n  });\n\n  var _createNumber = function (type) {\n    return function (val, done, param0) {\n      val = val || '';\n      var isRequired = this.getRuleParams(this.path, 'required');\n      isRequired = isRequired ? isRequired[0] : true; // 非必填并且是空值\n\n      if (!isRequired && (val === \"\" || val === null || typeof val === \"undefined\")) {\n        return done(null);\n      }\n\n      if (!REG_NUMBERIC.test(val)) {\n        return done('${1}必须为数值格式');\n      }\n\n      val = number.parseFloat(val);\n      param0 = number.parseFloat(param0);\n      var boolean = type === 0 ? val >= param0 : val <= param0;\n      done(boolean ? null : lang.get(type ? 'max' : 'min'));\n    };\n  };\n\n  Validation.addRule('min', _createNumber(0));\n  Validation.addRule('max', _createNumber(1));\n  Validation.addRule('step', function (val, done, param0) {\n    val = val || '';\n    var isRequired = this.getRuleParams(this.path, 'required'); // 非必填并且是空值\n\n    if (!isRequired && !val) {\n      return done(null);\n    }\n\n    if (!REG_NUMBERIC.test(val)) {\n      return done('${1}必须为数值格式');\n    }\n\n    var min = this.getRuleParams(this.path, 'min')[0];\n    val = number.parseInt(val, 0);\n    param0 = number.parseInt(param0, 0);\n\n    if (!param0) {\n      return done(null);\n    }\n\n    done((val - min) % param0 ? '${1}递增步进值必须是' + param0 + '，最小值为' + min : null);\n  });\n\n  var _createSelect = function (type) {\n    return function (val, done, param0) {\n      if (!param0) {\n        return done();\n      }\n\n      if (typeis(val) !== 'array') {\n        return done('${1}必须为数组格式');\n      }\n\n      var length = val.length; // most\n\n      if (type) {\n        done(length > param0 ? lang.get('most') : null);\n      } // least\n      else {\n          done(length < param0 ? lang.get('least') : null);\n        }\n    };\n  };\n\n  Validation.addRule('least', _createSelect(0));\n  Validation.addRule('most', _createSelect(1));\n}; //============================================================\n//============================================================\n//============================================================\n\n/**\n * 判断是否为多值类型\n * @param obj\n * @returns {boolean}\n */\n\n\nfunction _isMultiple(obj) {\n  return typeis.array(obj) || typeis(obj) === 'filelist';\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/validator/libs/_validation-rules.js"],"names":["typeis","require","number","string","lang","REG_NUMBERIC","module","exports","Validation","addRule","val","done","param0","data","path","String","trim","the","isRequired","getRuleParams","alias","getAlias","assign","get","test","toString","replace","email","url","date","dateTimeToMinute","convertVal","isMultiple","_isMultiple","boolean","length","_createLength","type","typeMap","parseInt","requiredParams","required","getData","_createNumber","parseFloat","min","_createSelect","obj","array"],"mappings":"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","sourcesContent":["/**\n * 验证规则库\n * @author ydr.me\n * @create 2015-07-05 22:40\n */\n\nvar typeis = require('./typeis.js');\nvar number = require('./number.js');\nvar string = require('./string.js');\nvar lang = require('./_validation-lang.js');\n\nvar REG_NUMBERIC = /^-?[\\d.]+$/;\n\nmodule.exports = function (Validation) {\n    Validation.addRule('trim', function (val, done, param0) {\n        if (param0) {\n            this.data[this.path] = typeis(val) === 'string' || typeis(val) === 'number' ?\n                String(val).trim() : '';\n        }\n\n        done();\n    });\n\n    Validation.addRule('type', function (val, done, param0) {\n        var the = this;\n        var path = the.path;\n        var isRequired = the.getRuleParams(path, 'required');\n        isRequired = isRequired ? isRequired[0] : true;\n        var alias = the.getAlias(path) || path;\n\n        if (!isRequired && !val) {\n            return done(null);\n        }\n\n        switch (param0) {\n            case 'array':\n                return done(typeis(val) === 'array' ? null : string.assign(lang.get('type', 'array'), alias, param0));\n\n            case 'number':\n                return done(/^-?\\d+(\\.?\\d{0,3}$)|^\\.?\\d{0,3}$|^-$/g.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n            case 'decimal':\n                return done(/^\\d*\\.?\\d*$/.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n            case 'number_positive':\n                return done(/^\\d+(\\.\\d{1,3})?$/.test(val) ? null : string.assign(lang.get('type', 'number'), alias, param0));\n\n            case 'integer':\n                if (typeof val === 'number') {\n                    val = val.toString();\n                }\n                val = val.replace(/^-/, '');\n                return done(/^(0|[1-9]\\d*)$/.test(val) ? null : string.assign(lang.get('type', 'integer'), alias, param0));\n\n            case 'mobile':\n                return done(/^1\\d{10}$/.test(val) ? null : string.assign(lang.get('type', 'mobile'), alias, param0));\n\n            case 'email':\n                return done(typeis.email(val) ? null : string.assign(lang.get('type', 'email'), alias, param0));\n            case 'url':\n                return done(typeis.url(val) ? null : string.assign(lang.get('type', 'url'), alias, param0));\n            case 'dateDMY':\n                return done(typeis.date(val) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n            case 'dateYMD':\n                return done(typeis.date(val, true) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n            case 'dateDMYHm':\n                return done(typeis.dateTimeToMinute(val) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n            case 'dateYMDHm':\n                return done(typeis.dateTimeToMinute(val, true) ? null : string.assign(lang.get('type', 'date'), alias, param0));\n            case 'numreicAllowZero':\n                if (typeof val === 'number') {\n                    val = val.toString();\n                }\n                return done(/^[0-9]*$/.test(val) ? null : string.assign(lang.get('type', 'numreicAllowZero'), alias, param0));\n            default:\n                break;    \n        }\n    });\n\n\n    Validation.addRule('required', function (val, done, param0) {\n        if (!param0) {\n            return done();\n        }\n        var convertVal = (typeof val === 'number')? val.toString() : val;\n        var isMultiple = _isMultiple(convertVal);\n        var boolean = typeis(convertVal) === 'file' ? true :\n            (isMultiple ? convertVal : (convertVal || '')).length > 0;\n        //done(boolean ? null : '${path}不能为空');\n        done(boolean ? null : lang.get('required'));\n    });\n\n\n    var _createLength = function (type) {\n        var typeMap = {\n            0: 'minLength',\n            1: 'maxLength'\n        };\n\n        return function (val, done, param0) {\n            param0 = number.parseInt(param0);\n            var convertVal = (typeof val === 'number') ? val.toString() : val;\n            var requiredParams = this.getRuleParams(this.path, 'required');\n            var required = requiredParams ? requiredParams[0] : true;\n            var isMultiple = _isMultiple(convertVal);\n            var length = (isMultiple ? convertVal : (convertVal || '')).length;\n            var boolean = type === 0 ? length >= param0 : length <= param0;\n\n            // 未填 && 可选\n            if (!length && !required) {\n                return done();\n            }\n\n            if (isMultiple) {\n                done(boolean ? null : lang.get(typeMap[type], 'select'));\n            } else {\n                done(boolean ? null : lang.get(typeMap[type], 'input'));\n            }\n        };\n    };\n\n    Validation.addRule('minLength', _createLength(0));\n    Validation.addRule('maxLength', _createLength(1));\n\n\n    Validation.addRule('equal', function (val, done, param0) {\n        val = val || '';\n        done(val === this.getData(param0) ? null : '${1}必须与' + this.getAlias(param0) + '相同');\n    });\n\n\n    var _createNumber = function (type) {\n        return function (val, done, param0) {\n            val = val || '';\n\n            var isRequired = this.getRuleParams(this.path, 'required');\n            isRequired = isRequired ? isRequired[0] : true;\n            // 非必填并且是空值\n            if (!isRequired && (val === \"\" || val === null || typeof val === \"undefined\")) {\n                return done(null);\n            }\n\n            if (!REG_NUMBERIC.test(val)) {\n                return done('${1}必须为数值格式');\n            }\n\n            val = number.parseFloat(val);\n            param0 = number.parseFloat(param0);\n\n            var boolean = type === 0 ? val >= param0 : val <= param0;\n\n            done(boolean ? null : lang.get(type ? 'max' : 'min'));\n        };\n    };\n\n    Validation.addRule('min', _createNumber(0));\n    Validation.addRule('max', _createNumber(1));\n    Validation.addRule('step', function (val, done, param0) {\n        val = val || '';\n\n        var isRequired = this.getRuleParams(this.path, 'required');\n\n        // 非必填并且是空值\n        if (!isRequired && !val) {\n            return done(null);\n        }\n\n        if (!REG_NUMBERIC.test(val)) {\n            return done('${1}必须为数值格式');\n        }\n\n        var min = this.getRuleParams(this.path, 'min')[0];\n\n        val = number.parseInt(val, 0);\n        param0 = number.parseInt(param0, 0);\n\n        if (!param0) {\n            return done(null);\n        }\n\n        done((val - min) % param0 ? '${1}递增步进值必须是' + param0 + '，最小值为' + min : null);\n    });\n\n    var _createSelect = function (type) {\n        return function (val, done, param0) {\n            if (!param0) {\n                return done();\n            }\n\n            if (typeis(val) !== 'array') {\n                return done('${1}必须为数组格式');\n            }\n\n            var length = val.length;\n\n            // most\n            if (type) {\n                done(length > param0 ? lang.get('most') : null);\n            }\n            // least\n            else {\n                done(length < param0 ? lang.get('least') : null);\n            }\n        };\n    };\n\n    Validation.addRule('least', _createSelect(0));\n    Validation.addRule('most', _createSelect(1));\n};\n\n\n//============================================================\n//============================================================\n//============================================================\n\n/**\n * 判断是否为多值类型\n * @param obj\n * @returns {boolean}\n */\nfunction _isMultiple(obj) {\n    return typeis.array(obj) || typeis(obj) === 'filelist';\n}\n"]},"metadata":{},"sourceType":"module"}