{"ast":null,"code":"import BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport Constants from '../../../../../../utils/Constants';\nimport AddDeviceSharePopupJsx from './AddDeviceSharePopup.jsx';\nimport DeviceService from '../../../../../../services/DeviceService';\nimport ProjectService from '../../../../../../services/ProjectService';\n\nclass AddDeviceSharePopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.onIsCheckedChange = index => {\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var item = dataList[index];\n      if (Libs.isObjectEmpty(item)) return;\n      dataList[index].is_checked = dataList[index].is_checked ? 0 : 1;\n      this.setState({\n        dataList: dataList\n      });\n    };\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n\n      if (Libs.isObjectEmpty(item)) {\n        curItem.id_project = '';\n      } else {\n        var value = item.value;\n        curItem[name] = value;\n      }\n\n      self.setState({\n        curItem: curItem\n      }, () => {\n        self.getList();\n      });\n    };\n\n    this.state = {\n      curItem: {},\n      curItemProject: this.props.curItemProject,\n      dataListProject: [],\n      dataList: [],\n      searchParam: {}\n    };\n    this.jsxTemplate = AddDeviceSharePopupJsx;\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  componentDidMount() {\n    this.getList();\n    this.getDataListProject();\n  }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  getList() {\n    let self = this;\n    var {\n      curItem\n    } = this.state;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_project = curItem.id_project;\n    if (Libs.isBlank(curItem.id_project)) return;\n    DeviceService.instance.getListDeviceByProjectShare(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n      } else {\n        self.setState({\n          dataList: []\n        });\n      }\n\n      self.forceUpdate();\n    });\n  }\n  /**\n   * ge list project\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getDataListProject() {\n    let self = this;\n    var {\n      curItemProject\n    } = this.state;\n    var params = {\n      id_language: this.employee.id_language,\n      id_project: curItemProject.id ? curItemProject.id : null\n    };\n    ProjectService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataListProject: data\n        });\n      } else {\n        self.setState({\n          dataListProject: []\n        });\n      }\n    });\n  }\n\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n  async onSave() {\n    var {\n      curItemProject,\n      dataList\n    } = this.state,\n        self = this;\n    if (Libs.isBlank(curItemProject.id) || !Libs.isArrayData(dataList)) return;\n    var params = {};\n    var dataParams = [];\n\n    for (var i = 0, len = dataList.length; i < len; i++) {\n      if (dataList[i].is_checked == 1) {\n        dataParams.push({\n          id_project: curItemProject.id,\n          id_device: dataList[i].id\n        });\n      }\n    }\n\n    if (!Libs.isArrayData(dataParams)) return;\n    params.dataParams = dataParams;\n    params.screen_mode = Constants.SCREEN_MODE.ADD;\n    DeviceService.instance.saveDeviceShare(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseDeviceShare(true);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default AddDeviceSharePopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Project/AddDeviceShare/AddDeviceSharePopup.js"],"names":["BaseComponent","Libs","Constants","AddDeviceSharePopupJsx","DeviceService","ProjectService","AddDeviceSharePopup","constructor","props","onIsCheckedChange","index","dataList","state","isArrayData","item","isObjectEmpty","is_checked","setState","handleDropdownChange","name","self","curItem","id_project","value","getList","curItemProject","dataListProject","searchParam","jsxTemplate","bind","componentDidMount","getDataListProject","params","id_language","employee","isBlank","instance","getListDeviceByProjectShare","data","total_row","forceUpdate","id","getDropdownList","onSave","dataParams","i","len","length","push","id_device","screen_mode","SCREEN_MODE","ADD","saveDeviceShare","status","msg","toast","onClickCloseDeviceShare","setValidateMessage"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../../BaseComponent';\nimport Libs from '../../../../../../utils/Libs';\nimport Constants from '../../../../../../utils/Constants';\nimport AddDeviceSharePopupJsx from './AddDeviceSharePopup.jsx';\nimport DeviceService from '../../../../../../services/DeviceService';\nimport ProjectService from '../../../../../../services/ProjectService';\n\nclass AddDeviceSharePopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: {},\n            curItemProject: this.props.curItemProject,\n            dataListProject: [],\n            dataList: [],\n            searchParam: {},\n        }\n\n        this.jsxTemplate = AddDeviceSharePopupJsx;\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/05/2021\n     */\n    componentDidMount() {\n        this.getList();\n        this.getDataListProject();\n    }\n\n\n    onIsCheckedChange = (index) => {\n        var {dataList} = this.state;\n        if(!Libs.isArrayData(dataList)) return;\n        var item = dataList[index];\n        if(Libs.isObjectEmpty(item)) return;\n        dataList[index].is_checked = dataList[index].is_checked ? 0: 1;\n\n        this.setState({\n            dataList: dataList\n        });\n    }\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        var { curItem } = this.state;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_project = curItem.id_project;\n        if(Libs.isBlank(curItem.id_project)) return;\n        DeviceService.instance.getListDeviceByProjectShare(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n            } else {\n                self.setState({\n                    dataList: []\n                });\n                \n            }\n            self.forceUpdate();\n        });\n    }\n\n    /**\n     * ge list project\n     * @author Long.Pham 2019-06-03\n     */\n     getDataListProject() {\n        let self = this;\n        var {curItemProject} = this.state;\n        var params = {\n            id_language: this.employee.id_language,\n            id_project: curItemProject.id ? curItemProject.id : null\n        };\n\n        ProjectService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListProject: data\n                });\n            } else {\n                self.setState({\n                    dataListProject: []\n                });\n            }\n        })\n    }\n\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item)) {\n            curItem.id_project = '';\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        }, () => {\n            self.getList();\n        });\n    }\n\n\n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var {curItemProject, dataList } = this.state, self = this;\n        if(Libs.isBlank(curItemProject.id) || !Libs.isArrayData(dataList)) return;\n        var params = {};\n        var dataParams = [];\n        for(var i = 0, len = dataList.length; i < len; i++){\n            if(dataList[i].is_checked == 1){\n                dataParams.push({\n                    id_project: curItemProject.id,\n                    id_device: dataList[i].id\n                })\n            }\n        }\n\n        if(!Libs.isArrayData(dataParams)) return;\n        params.dataParams = dataParams;\n        params.screen_mode = Constants.SCREEN_MODE.ADD;\n    \n        DeviceService.instance.saveDeviceShare(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseDeviceShare(true);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default AddDeviceSharePopup;"]},"metadata":{},"sourceType":"module"}