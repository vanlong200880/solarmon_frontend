{"ast":null,"code":"/**\n * 判断数据类型\n * @author ydr.me\n * @create 2014-11-15 12:54\n * @update 2014年11月19日10:20:51\n */var udf='undefined';var REG_URL=/^https?:\\/\\/([a-z\\d-]+\\.)+[a-z]{2,5}(:[1-9]\\d{0,4})?(\\/|\\/[\\w#!:.?+=&%@!\\-\\/]+)?$/i;var REG_EMAIL=/^\\w+[-+.\\w]*@([a-z\\d-]+\\.)+[a-z]{2,5}$/i;var REG_MOMGODB_ID=/^[\\da-z]{24}$/;var REG_INVALID=/invalid/i;var REG_DATE_DMY=/^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;var REG_DATE_YMD=/^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;var REG_DATE_DMYHm=/^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4} ([012]{0,1}[0-9]:[0-6][0-9])$/;var REG_DATE_YMDHm=/^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01]) ([012]{0,1}[0-9]:[0-6][0-9])$/;// var fs = require('fs');\n/**\n * 判断数据类型，结果全部为小写<br>\n * 原始数据类型：boolean、number、string、undefined、symbol\n * @param {*} object 任何对象\n * @returns {string}\n *\n * @example\n * typeis();\n * // => \"undefined\"\n *\n * typeis(null);\n * // => \"null\"\n *\n * typeis(1);\n * // => \"number\"\n *\n * typeis(\"1\");\n * // => \"string\"\n *\n * typeis(!1);\n * // => \"boolean\"\n *\n * typeis({});\n * // => \"object\"\n *\n * typeis([]);\n * // => \"array\"\n *\n * typeis(/./);\n * // => \"regexp\"\n *\n * typeis(window);\n * // => \"window\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(NaN);\n * // => \"nan\"\n *\n * typeis(Infinity);\n * // => \"number\"\n *\n * typeis(function(){});\n * // => \"function\"\n *\n * typeis(new Image);\n * // => \"element\"\n *\n * typeis(new Date);\n * // => \"date\"\n *\n * typeis(document.links);\n * // => \"htmlcollection\"\n *\n * typeis(document.body.dataset);\n * // => \"domstringmap\"\n *\n * typeis(document.body.classList);\n * // => \"domtokenlist\"\n *\n * typeis(document.body.childNodes);\n * // => \"nodelist\"\n *\n * typeis(document.createAttribute('abc'));\n * // => \"attr\"\n *\n * typeis(document.createComment('abc'));\n * // => \"comment\"\n *\n * typeis(new Event('abc'));\n * // => \"event\"\n *\n * typeis(document.createExpression());\n * // => \"xpathexpression\"\n *\n * typeis(document.createRange());\n * // => \"range\"\n *\n * typeis(document.createTextNode(''));\n * // => \"text\"\n */var typeis=function typeis(object){if(object!==object){return'nan';}else if(typeof object===udf){return udf;}else if(typeof window!==udf&&object===window){return'window';}else if(typeof global!==udf&&object===global){return'global';}else if(typeof document!==udf&&object===document){return'document';}else if(object===null){return'null';}var ret=Object.prototype.toString.call(object).slice(8,-1).toLowerCase();if(/element/.test(ret)){return'element';}return ret;};var i=0;var jud='string number function object undefined null nan element regexp boolean array window document global'.split(' ');var makeStatic=function makeStatic(tp){var tp2=tp.replace(/^\\w/,function(w){return w.toUpperCase();});/**\n     * 快捷判断\n     * @name typeis\n     * @property string {Function}\n     * @property String {Function}\n     * @property number {Function}\n     * @property Number {Function}\n     * @property function {Function}\n     * @property Function {Function}\n     * @property object {Function}\n     * @property Object {Function}\n     * @property undefined {Function}\n     * @property Undefined {Function}\n     * @property null {Function}\n     * @property Null {Function}\n     * @property nan {Function}\n     * @property Nan {Function}\n     * @property element {Function}\n     * @property Element {Function}\n     * @property regexp {Function}\n     * @property Regexp {Function}\n     * @property boolean {Function}\n     * @property Boolean {Function}\n     * @property array {Function}\n     * @property Array {Function}\n     * @property window {Function}\n     * @property Window {Function}\n     * @property document {Function}\n     * @property Document {Function}\n     * @property global {Function}\n     * @property Global {Function}\n     * @returns {boolean}\n     */typeis[tp]=typeis[tp2]=function(obj){return typeis(obj)===tp;};};/**\n * 复制静态方法\n */for(;i<jud.length;i++){makeStatic(jud[i]);}/**\n * 判断是否为纯对象\n * @param obj {*}\n * @returns {Boolean}\n *\n * @example\n * type.isPlainObject({a:1});\n * // => true\n */typeis.plainObject=function(obj){return typeis(obj)==='object'&&Object.getPrototypeOf(obj)===Object.prototype;};/**\n * 判断是否为空对象\n * @param obj {*}\n */typeis.emptyObject=function(obj){return typeis.plainObject(obj)&&Object.keys(obj).length===0;};/**\n * 判断是否为 undefine 或 null\n * @param obj\n * @returns {Boolean}\n */typeis.empty=function(obj){return typeof obj===udf||typeis.null(obj);};/**\n * 判断是否为 URL 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.url('http://123.com/123/456/?a=3#00');\n * // => true\n */typeis.url=function(string){return typeis(string)==='string'&&REG_URL.test(string);};/**\n * 判断是否为 email 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.email('abc@def.com');\n * // => true\n */typeis.email=function(string){return typeis(string)==='string'&&REG_EMAIL.test(string);};/**\n * 判断能否转换为合法Date\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月2日21:07:33\n */typeis.validDate=function(anything){return!REG_INVALID.test(new Date(anything).toString());};/**\n * 判断对象是否为 Error 实例\n * @param anything\n * @returns {boolean}\n *\n * @example\n * typeis.error(new TypeError());\n * // => true\n */typeis.error=function(anything){return anything&&anything instanceof Error;};/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/**\n * 判断是否为合法的mongodbID\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月3日23:11:37\n */typeis.mongoId=function(anything){return typeof(anything!==udf&&typeof anything._bsontype!==udf&&anything._bsontype==='ObjectId')||REG_MOMGODB_ID.test(anything.toString());};/**\n * 判断对象是否为空,null/undefined/\"\"\n * @param  any {*} 任何对象\n * @return {Boolean}\n * @version 1.0\n * 2014年5月27日21:33:04\n */typeis.emptyData=function(any){return typeis.empty(any)||any==='';};/**\n * 判断路径是否为目录\n * @param _path\n * @returns {Boolean}\n */ // typeis.directory = function (_path) {\n//     var stat;\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n//     return stat.isDirectory();\n// };\n/**\n * 判断路径是否为文件\n * @param _path\n * @returns {Boolean}\n */ // typeis.file = function (_path) {\n//     var stat;\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n//     return stat.isFile();\n// };\n// @link: https://www.zhihu.com/question/19813460/answer/13042143\n// A类地址：10.0.0.0--10.255.255.255\n// B类地址：172.16.0.0--172.31.255.255\n// C类地址：192.168.0.0--192.168.255.255\n/**\n * 判断是否为局域网 IP\n * @param ip\n * @returns {boolean}\n */typeis.localIP=function(ip){ip=String(ip).toUpperCase().trim();if(ip.indexOf('::')>-1||ip==='localhost'||ip.indexOf('127.0.0.1')>-1){return true;}var ipList=ip.split('.');var part0=Number(ipList[0]);var part1=Number(ipList[1]);//var part2 = Number(ipList[2]);\n//var part3 = Number(ipList[3]);\n// A 类\nif(part0===10){return true;}// B 类\nif(part0===172&&part1>15&&part1<32){return true;}return part0===192&&part1===168;};/**\n * Check valid date\n * @param {String} date \n * @param {Boolean} format \n */typeis.date=function(date,format){var dateformat=REG_DATE_DMY;if(typeof format!=='undefined'&&format===true){dateformat=REG_DATE_YMD;}// Match the date format through regular expression\nif(date.match(dateformat)){//Test which seperator is used '/' or '-'\nvar opera1=date.split('/');var opera2=date.split('-');var lopera1=opera1.length;var lopera2=opera2.length;// Extract the string into month, date and year\nvar pdate='';if(lopera1>1){pdate=date.split('/');}else if(lopera2>1){pdate=date.split('-');}var dd=parseInt(pdate[0]);var mm=parseInt(pdate[1]);var yy=parseInt(pdate[2]);if(format){dd=parseInt(pdate[2]);mm=parseInt(pdate[1]);yy=parseInt(pdate[0]);}// Create list of days of a month [assume there is no leap year by default]\nvar ListofDays=[31,28,31,30,31,30,31,31,30,31,30,31];if(mm===1||mm>2){if(dd>ListofDays[mm-1]){return false;}return true;}if(mm===2){var lyear=false;if(!(yy%4)&&yy%100||!(yy%400)){lyear=true;}if(lyear===false&&dd>=29){return false;}if(lyear===true&&dd>29){return false;}return true;}}else{return false;}};typeis.dateTimeToMinute=function(date,format){var dateformat=REG_DATE_DMYHm;if(typeof format!=='undefined'&&format===true){dateformat=REG_DATE_YMDHm;}// Match the date format through regular expression\nif(date.match(dateformat)){//Test which seperator is used '/' or '-'\nvar opera1=date.split('/'),opera2=date.split('-'),lopera1=opera1.length,lopera2=opera2.length,time=\"\";// Extract the string into month, date and year\nvar pdate='';if(lopera1>1){pdate=date.split('/');}else if(lopera2>1){pdate=date.split('-');}var split=pdate[2].split(\" \");time=split[1];var dd=parseInt(pdate[0]),mm=parseInt(pdate[1]),yy=parseInt(split[0]),hh=parseInt(time[1].split(\":\")[0]),m=parseInt(time[1].split(\":\")[1]);if(format){dd=parseInt(split[0]);mm=parseInt(pdate[1]);yy=parseInt(pdate[0]);}var isValid=checkValidDate(dd,mm,yy);if(!isValid){return false;}if(hh>24){return false;}if(m>60){return false;}return true;}else{return false;}};var checkValidDate=function checkValidDate(dd,mm,yy){// Create list of days of a month [assume there is no leap year by default]\nvar ListofDays=[31,28,31,30,31,30,31,31,30,31,30,31];if(mm===1||mm>2){if(dd>ListofDays[mm-1]){return false;}return true;}if(mm===2){var lyear=false;if(!(yy%4)&&yy%100||!(yy%400)){lyear=true;}if(lyear===false&&dd>=29){return false;}if(lyear===true&&dd>29){return false;}return true;}};/**\n * @name string\n * @name number\n * @name function\n * @name object\n * @name undefined\n * @name null\n * @name nan\n * @name element\n * @name regexp\n * @name boolean\n * @name array\n * @name window\n * @name document\n * @name global\n * @type {Function}\n */module.exports=typeis;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/validator/libs/typeis.js"],"names":["udf","REG_URL","REG_EMAIL","REG_MOMGODB_ID","REG_INVALID","REG_DATE_DMY","REG_DATE_YMD","REG_DATE_DMYHm","REG_DATE_YMDHm","typeis","object","window","global","document","ret","Object","prototype","toString","call","slice","toLowerCase","test","i","jud","split","makeStatic","tp","tp2","replace","w","toUpperCase","obj","length","plainObject","getPrototypeOf","emptyObject","keys","empty","null","url","string","email","validDate","anything","Date","error","Error","mongoId","_bsontype","emptyData","any","localIP","ip","String","trim","indexOf","ipList","part0","Number","part1","date","format","dateformat","match","opera1","opera2","lopera1","lopera2","pdate","dd","parseInt","mm","yy","ListofDays","lyear","dateTimeToMinute","time","hh","m","isValid","checkValidDate","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAGA,GAAIA,CAAAA,GAAG,CAAG,WAAV,CACA,GAAIC,CAAAA,OAAO,CAAG,oFAAd,CACA,GAAIC,CAAAA,SAAS,CAAG,yCAAhB,CACA,GAAIC,CAAAA,cAAc,CAAG,eAArB,CACA,GAAIC,CAAAA,WAAW,CAAG,UAAlB,CACA,GAAIC,CAAAA,YAAY,CAAG,8DAAnB,CACA,GAAIC,CAAAA,YAAY,CAAG,gEAAnB,CACA,GAAIC,CAAAA,cAAc,CAAG,2FAArB,CACA,GAAIC,CAAAA,cAAc,CAAG,6FAArB,CACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,GAAIC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAUC,MAAV,CAAkB,CAC3B,GAAIA,MAAM,GAAKA,MAAf,CAAuB,CACnB,MAAO,KAAP,CACH,CAFD,IAEO,IAAI,MAAOA,CAAAA,MAAP,GAAkBV,GAAtB,CAA2B,CAC9B,MAAOA,CAAAA,GAAP,CACH,CAFM,IAEA,IAAI,MAAOW,CAAAA,MAAP,GAAkBX,GAAlB,EAAyBU,MAAM,GAAKC,MAAxC,CAAgD,CACnD,MAAO,QAAP,CACH,CAFM,IAEA,IAAI,MAAOC,CAAAA,MAAP,GAAkBZ,GAAlB,EAAyBU,MAAM,GAAKE,MAAxC,CAAgD,CACnD,MAAO,QAAP,CACH,CAFM,IAEA,IAAI,MAAOC,CAAAA,QAAP,GAAoBb,GAApB,EAA2BU,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","sourcesContent":["/**\n * 判断数据类型\n * @author ydr.me\n * @create 2014-11-15 12:54\n * @update 2014年11月19日10:20:51\n */\n\n\nvar udf = 'undefined';\nvar REG_URL = /^https?:\\/\\/([a-z\\d-]+\\.)+[a-z]{2,5}(:[1-9]\\d{0,4})?(\\/|\\/[\\w#!:.?+=&%@!\\-\\/]+)?$/i;\nvar REG_EMAIL = /^\\w+[-+.\\w]*@([a-z\\d-]+\\.)+[a-z]{2,5}$/i;\nvar REG_MOMGODB_ID = /^[\\da-z]{24}$/;\nvar REG_INVALID = /invalid/i;\nvar REG_DATE_DMY = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/;\nvar REG_DATE_YMD = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/;\nvar REG_DATE_DMYHm = /^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4} ([012]{0,1}[0-9]:[0-6][0-9])$/;\nvar REG_DATE_YMDHm = /^(\\d{4})[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01]) ([012]{0,1}[0-9]:[0-6][0-9])$/;\n// var fs = require('fs');\n\n\n/**\n * 判断数据类型，结果全部为小写<br>\n * 原始数据类型：boolean、number、string、undefined、symbol\n * @param {*} object 任何对象\n * @returns {string}\n *\n * @example\n * typeis();\n * // => \"undefined\"\n *\n * typeis(null);\n * // => \"null\"\n *\n * typeis(1);\n * // => \"number\"\n *\n * typeis(\"1\");\n * // => \"string\"\n *\n * typeis(!1);\n * // => \"boolean\"\n *\n * typeis({});\n * // => \"object\"\n *\n * typeis([]);\n * // => \"array\"\n *\n * typeis(/./);\n * // => \"regexp\"\n *\n * typeis(window);\n * // => \"window\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(document);\n * // => \"document\"\n *\n * typeis(NaN);\n * // => \"nan\"\n *\n * typeis(Infinity);\n * // => \"number\"\n *\n * typeis(function(){});\n * // => \"function\"\n *\n * typeis(new Image);\n * // => \"element\"\n *\n * typeis(new Date);\n * // => \"date\"\n *\n * typeis(document.links);\n * // => \"htmlcollection\"\n *\n * typeis(document.body.dataset);\n * // => \"domstringmap\"\n *\n * typeis(document.body.classList);\n * // => \"domtokenlist\"\n *\n * typeis(document.body.childNodes);\n * // => \"nodelist\"\n *\n * typeis(document.createAttribute('abc'));\n * // => \"attr\"\n *\n * typeis(document.createComment('abc'));\n * // => \"comment\"\n *\n * typeis(new Event('abc'));\n * // => \"event\"\n *\n * typeis(document.createExpression());\n * // => \"xpathexpression\"\n *\n * typeis(document.createRange());\n * // => \"range\"\n *\n * typeis(document.createTextNode(''));\n * // => \"text\"\n */\nvar typeis = function (object) {\n    if (object !== object) {\n        return 'nan';\n    } else if (typeof object === udf) {\n        return udf;\n    } else if (typeof window !== udf && object === window) {\n        return 'window';\n    } else if (typeof global !== udf && object === global) {\n        return 'global';\n    } else if (typeof document !== udf && object === document) {\n        return 'document';\n    } else if (object === null) {\n        return 'null';\n    }\n\n    var ret = Object.prototype.toString.call(object).slice(8, -1).toLowerCase();\n\n    if (/element/.test(ret)) {\n        return 'element';\n    }\n    return ret;\n};\nvar i = 0;\nvar jud = 'string number function object undefined null nan element regexp boolean array window document global'.split(' ');\nvar makeStatic = function (tp) {\n    var tp2 = tp.replace(/^\\w/, function (w) {\n        return w.toUpperCase();\n    });\n    /**\n     * 快捷判断\n     * @name typeis\n     * @property string {Function}\n     * @property String {Function}\n     * @property number {Function}\n     * @property Number {Function}\n     * @property function {Function}\n     * @property Function {Function}\n     * @property object {Function}\n     * @property Object {Function}\n     * @property undefined {Function}\n     * @property Undefined {Function}\n     * @property null {Function}\n     * @property Null {Function}\n     * @property nan {Function}\n     * @property Nan {Function}\n     * @property element {Function}\n     * @property Element {Function}\n     * @property regexp {Function}\n     * @property Regexp {Function}\n     * @property boolean {Function}\n     * @property Boolean {Function}\n     * @property array {Function}\n     * @property Array {Function}\n     * @property window {Function}\n     * @property Window {Function}\n     * @property document {Function}\n     * @property Document {Function}\n     * @property global {Function}\n     * @property Global {Function}\n     * @returns {boolean}\n     */\n    typeis[tp] = typeis[tp2] = function (obj) {\n        return typeis(obj) === tp;\n    };\n};\n\n\n/**\n * 复制静态方法\n */\nfor (; i < jud.length; i++) {\n    makeStatic(jud[i]);\n}\n\n\n/**\n * 判断是否为纯对象\n * @param obj {*}\n * @returns {Boolean}\n *\n * @example\n * type.isPlainObject({a:1});\n * // => true\n */\ntypeis.plainObject = function (obj) {\n    return typeis(obj) === 'object' && Object.getPrototypeOf(obj) === Object.prototype;\n};\n\n\n/**\n * 判断是否为空对象\n * @param obj {*}\n */\ntypeis.emptyObject = function (obj) {\n    return typeis.plainObject(obj) && Object.keys(obj).length === 0;\n};\n\n\n/**\n * 判断是否为 undefine 或 null\n * @param obj\n * @returns {Boolean}\n */\ntypeis.empty = function (obj) {\n    return typeof obj === udf || typeis.null(obj);\n};\n\n\n/**\n * 判断是否为 URL 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.url('http://123.com/123/456/?a=3#00');\n * // => true\n */\ntypeis.url = function (string) {\n    return typeis(string) === 'string' && REG_URL.test(string);\n};\n\n\n/**\n * 判断是否为 email 格式\n * @param string\n * @returns {Boolean}\n *\n * @example\n * typeis.email('abc@def.com');\n * // => true\n */\ntypeis.email = function (string) {\n    return typeis(string) === 'string' && REG_EMAIL.test(string);\n};\n\n\n/**\n * 判断能否转换为合法Date\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月2日21:07:33\n */\ntypeis.validDate = function (anything) {\n    return !REG_INVALID.test(new Date(anything).toString());\n};\n\n\n/**\n * 判断对象是否为 Error 实例\n * @param anything\n * @returns {boolean}\n *\n * @example\n * typeis.error(new TypeError());\n * // => true\n */\ntypeis.error = function (anything) {\n    return anything && (anything instanceof Error);\n};\n\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\n\n/**\n * 判断是否为合法的mongodbID\n * @param  anything\n * @return {Boolean}\n * @version 1.0\n * 2014年5月3日23:11:37\n */\ntypeis.mongoId = function (anything) {\n    return typeof (anything !== udf && typeof anything._bsontype !== udf &&\n        anything._bsontype === 'ObjectId') || REG_MOMGODB_ID.test(anything.toString());\n};\n\n\n/**\n * 判断对象是否为空,null/undefined/\"\"\n * @param  any {*} 任何对象\n * @return {Boolean}\n * @version 1.0\n * 2014年5月27日21:33:04\n */\ntypeis.emptyData = function (any) {\n    return typeis.empty(any) || any === '';\n};\n\n\n/**\n * 判断路径是否为目录\n * @param _path\n * @returns {Boolean}\n */\n// typeis.directory = function (_path) {\n//     var stat;\n\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n\n//     return stat.isDirectory();\n// };\n\n\n/**\n * 判断路径是否为文件\n * @param _path\n * @returns {Boolean}\n */\n// typeis.file = function (_path) {\n//     var stat;\n\n//     try {\n//         stat = fs.statSync(_path);\n//     } catch (err) {\n//         return !1;\n//     }\n\n//     return stat.isFile();\n// };\n\n\n// @link: https://www.zhihu.com/question/19813460/answer/13042143\n// A类地址：10.0.0.0--10.255.255.255\n// B类地址：172.16.0.0--172.31.255.255\n// C类地址：192.168.0.0--192.168.255.255\n/**\n * 判断是否为局域网 IP\n * @param ip\n * @returns {boolean}\n */\ntypeis.localIP = function (ip) {\n    ip = String(ip).toUpperCase().trim();\n\n    if (ip.indexOf('::') > -1 || ip === 'localhost' || ip.indexOf('127.0.0.1') > -1) {\n        return true;\n    }\n\n    var ipList = ip.split('.');\n    var part0 = Number(ipList[0]);\n    var part1 = Number(ipList[1]);\n    //var part2 = Number(ipList[2]);\n    //var part3 = Number(ipList[3]);\n\n    // A 类\n    if (part0 === 10) {\n        return true;\n    }\n\n    // B 类\n    if (part0 === 172 && part1 > 15 && part1 < 32) {\n        return true;\n    }\n\n    return part0 === 192 && part1 === 168;\n};\n\n/**\n * Check valid date\n * @param {String} date \n * @param {Boolean} format \n */\ntypeis.date = function (date, format) {\n    var dateformat = REG_DATE_DMY;\n    if (typeof format !== 'undefined' && format === true) {\n        dateformat = REG_DATE_YMD;\n    }\n\n    // Match the date format through regular expression\n    if (date.match(dateformat)) {\n        //Test which seperator is used '/' or '-'\n        var opera1 = date.split('/');\n        var opera2 = date.split('-');\n        var lopera1 = opera1.length;\n        var lopera2 = opera2.length;\n        // Extract the string into month, date and year\n        var pdate= '';\n        if (lopera1 > 1) {\n            pdate = date.split('/');\n        }\n        else if (lopera2 > 1) {\n            pdate = date.split('-');\n        }\n        var dd = parseInt(pdate[0]);\n        var mm = parseInt(pdate[1]);\n        var yy = parseInt(pdate[2]);\n\n        if (format) {\n            dd = parseInt(pdate[2]);\n            mm = parseInt(pdate[1]);\n            yy = parseInt(pdate[0]);\n        }\n\n        // Create list of days of a month [assume there is no leap year by default]\n        var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        if (mm === 1 || mm > 2) {\n            if (dd > ListofDays[mm - 1]) {\n                return false;\n            }\n            return true;\n        }\n        if (mm === 2) {\n            var lyear = false;\n            if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n                lyear = true;\n            }\n            if ((lyear === false) && (dd >= 29)) {\n                return false;\n            }\n            if ((lyear === true) && (dd > 29)) {\n                return false;\n            }\n            return true;\n        }\n    }\n    else {\n        return false;\n    }\n}\n\ntypeis.dateTimeToMinute = function (date, format) {\n    var dateformat = REG_DATE_DMYHm;\n    if (typeof format !== 'undefined' && format === true) {\n        dateformat = REG_DATE_YMDHm;\n    }\n\n    // Match the date format through regular expression\n    if (date.match(dateformat)) {\n        //Test which seperator is used '/' or '-'\n        var opera1 = date.split('/'),\n            opera2 = date.split('-'),\n            lopera1 = opera1.length,\n            lopera2 = opera2.length,\n            time = \"\";\n        // Extract the string into month, date and year\n        var pdate = '';\n        if (lopera1 > 1) {\n            pdate = date.split('/');\n            \n        }\n        else if (lopera2 > 1) {\n            pdate = date.split('-');\n        }\n        var split = (pdate[2]).split(\" \");\n        time = split[1];\n        var dd = parseInt(pdate[0]),\n            mm = parseInt(pdate[1]),\n            yy = parseInt(split[0]),\n            hh = parseInt(time[1].split(\":\")[0]),\n            m = parseInt(time[1].split(\":\")[1]);\n\n        if (format) {\n            dd = parseInt(split[0]);\n            mm = parseInt(pdate[1]);\n            yy = parseInt(pdate[0]);\n        }\n\n        var isValid = checkValidDate(dd, mm, yy);\n        if (!isValid) {\n            return false;\n        }\n        if (hh > 24) {\n            return false;\n        }\n        if (m > 60) {\n            return false;\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nvar checkValidDate = function (dd, mm, yy) {\n    // Create list of days of a month [assume there is no leap year by default]\n    var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (mm === 1 || mm > 2) {\n        if (dd > ListofDays[mm - 1]) {\n            return false;\n        }\n        return true;\n    }\n    if (mm === 2) {\n        var lyear = false;\n        if ((!(yy % 4) && yy % 100) || !(yy % 400)) {\n            lyear = true;\n        }\n        if ((lyear === false) && (dd >= 29)) {\n            return false;\n        }\n        if ((lyear === true) && (dd > 29)) {\n            return false;\n        }\n        return true;\n    }\n}\n\n\n/**\n * @name string\n * @name number\n * @name function\n * @name object\n * @name undefined\n * @name null\n * @name nan\n * @name element\n * @name regexp\n * @name boolean\n * @name array\n * @name window\n * @name document\n * @name global\n * @type {Function}\n */\nmodule.exports = typeis;\n"]},"metadata":{},"sourceType":"module"}