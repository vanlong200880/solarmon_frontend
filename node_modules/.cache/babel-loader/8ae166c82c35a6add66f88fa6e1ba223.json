{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport MoveDevicePopupJsx from './MoveDevicePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport DeviceService from '../../../../../services/DeviceService';\nimport Constants from '../../../../../utils/Constants';\n\nclass MoveDevicePopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDropdownChange = (item, name, index) => {\n      if (Libs.isObjectEmpty(item)) return;\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var dataItem = dataList[index];\n      if (Libs.isObjectEmpty(dataItem)) return;\n      dataList[index].id_project = item.id;\n      this.setState({\n        dataList: dataList\n      });\n    };\n\n    this.state = {\n      curItemProject: this.props.curItem,\n      curItem: {},\n      dataList: [],\n      dataListProject: [],\n      searchParam: {}\n    };\n    this.jsxTemplate = MoveDevicePopupJsx;\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListDeviceByProject();\n    this.getDataListProject();\n  }\n\n  /**\n   * ge list project\n   * @author Long.Pham 2019-06-03\n   */\n  getDataListProject() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language,\n      id_project: null\n    };\n    ProjectService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataListProject: data\n        });\n      } else {\n        self.setState({\n          dataListProject: []\n        });\n      }\n    });\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getListDeviceByProject() {\n    let self = this;\n    var {\n      curItemProject,\n      searchParam\n    } = this.state;\n    searchParam.id_project = curItemProject.id;\n    searchParam.id_language = this.employee.id_language;\n    DeviceService.instance.getListDeviceByProject(searchParam, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n      } else {\n        self.setState({\n          dataList: []\n        });\n      }\n\n      self.forceUpdate();\n    });\n  }\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n\n\n  async onSave() {\n    var {\n      curItem,\n      dataList,\n      curItemProject\n    } = this.state,\n        self = this;\n    var params = Object.assign({}, curItem);\n    params.screen_mode = Constants.SCREEN_MODE.EDIT;\n    params.dataList = dataList;\n    ProjectService.instance.saveMoveDevice(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onItemClickCloseMove(false);\n      }\n    }, true);\n  }\n\n}\n\nexport default MoveDevicePopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Project/MoveDevicePopup.js"],"names":["BaseComponent","Libs","MoveDevicePopupJsx","ProjectService","DeviceService","Constants","MoveDevicePopup","constructor","props","handleDropdownChange","item","name","index","isObjectEmpty","dataList","state","isArrayData","dataItem","id_project","id","setState","curItemProject","curItem","dataListProject","searchParam","jsxTemplate","bind","componentDidMount","getListDeviceByProject","getDataListProject","self","params","id_language","employee","instance","getDropdownList","data","total_row","forceUpdate","onSave","Object","assign","screen_mode","SCREEN_MODE","EDIT","saveMoveDevice","status","msg","toast","onItemClickCloseMove"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport MoveDevicePopupJsx from './MoveDevicePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport DeviceService from '../../../../../services/DeviceService';\nimport Constants from '../../../../../utils/Constants';\n\nclass MoveDevicePopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItemProject: this.props.curItem,\n            curItem: {},\n            dataList: [],\n            dataListProject: [],\n            searchParam: {}\n        }\n\n        this.jsxTemplate = MoveDevicePopupJsx;\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.getListDeviceByProject();\n        this.getDataListProject();\n    }\n\n\n\n    handleDropdownChange = (item, name, index) => {\n        if(Libs.isObjectEmpty(item)) return;\n        var {dataList} = this.state;\n        if(!Libs.isArrayData(dataList)) return;\n        var dataItem = dataList[index];\n        if(Libs.isObjectEmpty(dataItem)) return;\n\n        dataList[index].id_project = item.id;\n\n        this.setState({\n            dataList: dataList\n        });\n    }\n\n\n    /**\n     * ge list project\n     * @author Long.Pham 2019-06-03\n     */\n     getDataListProject() {\n        let self = this;\n        var params = {\n            id_language: this.employee.id_language,\n            id_project:  null\n        };\n\n        ProjectService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListProject: data\n                });\n            } else {\n                self.setState({\n                    dataListProject: []\n                });\n            }\n        })\n    }\n\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n     getListDeviceByProject() {\n        let self = this;\n        var { curItemProject, searchParam } = this.state;\n        searchParam.id_project = curItemProject.id;\n        searchParam.id_language = this.employee.id_language;\n        DeviceService.instance.getListDeviceByProject(searchParam, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n            } else {\n                self.setState({\n                    dataList: []\n                });\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var { curItem, dataList, curItemProject } = this.state, self = this;\n\n        var params = Object.assign({}, curItem);\n        params.screen_mode = Constants.SCREEN_MODE.EDIT;\n        params.dataList = dataList;\n        ProjectService.instance.saveMoveDevice(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onItemClickCloseMove(false);\n            }\n        }, true);\n    }\n}\nexport default MoveDevicePopup;"]},"metadata":{},"sourceType":"module"}