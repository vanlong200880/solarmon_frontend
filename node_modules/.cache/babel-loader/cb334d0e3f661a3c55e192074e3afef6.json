{"ast":null,"code":"import ReportsJsx from './Reports.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport ReportService from '../../../../../services/ReportService';\nimport moment from 'moment';\n\nclass Reports extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let searchParam = self.state.searchParam;\n\n      if (Libs.isObjectEmpty(item)) {\n        searchParam.type = '';\n      } else {\n        var value = item.value;\n        searchParam[name] = value;\n      }\n\n      self.setState({\n        searchParam: searchParam\n      }, () => {\n        if (searchParam.type == 1) {\n          self.getDataReportYear();\n        } else {\n          self.getDataReportMonth();\n        }\n      });\n    };\n\n    this.jsxTemplate = ReportsJsx;\n    this.state = {\n      hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n      curItem: {},\n      dataList: [],\n      dataType: [{\n        id: 1,\n        value: 1,\n        label: \"Year\"\n      }, {\n        id: 2,\n        value: 2,\n        label: \"Month\"\n      }],\n      searchParam: {\n        type: 2,\n        max_date: moment().format('MM/YYYY'),\n        start_date: moment().add(-11, 'M').format('MM/YYYY'),\n        end_date: moment().format('MM/YYYY')\n      },\n      chartMonthOption: {},\n      chartOptionAlarm: {},\n      chartOption1: {},\n      chartOption2: {}\n    };\n    this.handleInputDateChange = this.handleInputDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    var {\n      searchParam\n    } = this.state;\n\n    if (searchParam.type == 2) {\n      this.getDataReportMonth();\n    } else {\n      this.getDataReportYear();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let self = this,\n        searchParam = this.state.searchParam;\n\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      this.setState({\n        hash_id: nextProps.match.params.id\n      }, () => {\n        if (searchParam.type == 2) {\n          self.getDataReportMonth();\n        } else {\n          self.getDataReportYear();\n        }\n      });\n    }\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n\n\n  handleInputDateChange(event) {\n    let target = event.target,\n        self = this;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        searchParam\n      } = this.state;\n\n      if (searchParam.type === 1) {\n        if (name === 'start_date') {\n          var startDate = value.split(\"/\");\n          var endDate = null;\n\n          if (startDate.length > 0) {\n            endDate = startDate[0] + \"/01/\" + startDate[1];\n          }\n\n          if (Libs.isBlank(endDate)) {\n            return;\n          }\n\n          const dateIsAfter = moment(Libs.addMonths(endDate, 11)).isAfter(moment());\n\n          if (dateIsAfter) {\n            searchParam.end_date = moment().format('MM/YYYY');\n          } else {\n            searchParam.end_date = moment(Libs.addMonths(endDate, 11)).format('MM/YYYY');\n          }\n        }\n      }\n\n      searchParam[name] = value;\n      this.setState({\n        searchParam\n      }, () => {\n        if (searchParam.type === 1) {\n          self.getDataReportYear();\n        } else {\n          self.getDataReportMonth();\n        }\n      });\n    }\n  }\n\n  getDataReportMonth() {\n    var {\n      hash_id,\n      searchParam\n    } = this.state,\n        self = this;\n    if (Libs.isBlank(hash_id)) return;\n    var params = Object.assign({}, searchParam);\n    params.start_date = '01/' + searchParam.start_date;\n    params.end_date = '01/' + searchParam.end_date;\n    params.hash_id = hash_id;\n    params.id_employee = this.employee.id_employee;\n    params.id_language = this.employee.id_language;\n    params.type = 'customer';\n    ReportService.instance.getDataReportMonth(params, data => {\n      if (data) {\n        var chartMonthOption = {\n          credits: {\n            enabled: false\n          },\n          exporting: {\n            enabled: false\n          },\n          chart: {\n            zoomType: 'xy'\n          },\n          title: {\n            text: null\n          },\n          colors: ['#78c1f5', '#e2a76c'],\n          xAxis: [],\n          yAxis: [{\n            min: 0,\n            lineWidth: 1,\n            gridLineWidth: 1,\n            labels: {\n              format: '{value}',\n              enabled: true\n            },\n            title: {\n              text: 'kWh',\n              enabled: true\n            }\n          }],\n          tooltip: {\n            shared: true\n          },\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom',\n            borderWidth: 0,\n            showInLegend: false,\n            enabled: false\n          },\n          plotOptions: {\n            column: {\n              dataLabels: {\n                enabled: true\n              },\n              enableMouseTracking: false\n            }\n          },\n          series: []\n        };\n        var dataEnergyMonth = data.dataEnergyMonth;\n\n        if (Libs.isArrayData(dataEnergyMonth)) {\n          var categories = [],\n              seriesData = [],\n              series = [],\n              xAxis = [];\n          dataEnergyMonth.map((item, index) => {\n            categories.push(parseInt(item.day));\n            seriesData.push(item.activeEnergy);\n          });\n          xAxis.push({\n            categories: categories,\n            crosshair: true\n          });\n          series.push({\n            name: '',\n            type: 'column',\n            data: seriesData,\n            tooltip: {\n              valueSuffix: ' kWh'\n            }\n          });\n          chartMonthOption.xAxis = xAxis;\n          chartMonthOption.series = series;\n        }\n\n        this.setState({\n          curItem: data,\n          chartMonthOption: chartMonthOption\n        }, () => {\n          self.forceUpdate();\n        });\n      }\n    }, false);\n  }\n\n  getDataReportYear() {\n    var {\n      hash_id,\n      searchParam,\n      chartOptionAlarm\n    } = this.state,\n        self = this;\n    var {\n      t\n    } = this.props;\n    if (Libs.isBlank(hash_id)) return;\n    var params = Object.assign({}, searchParam); // if (searchParam.type == 1) {\n    //     params.start_date = searchParam.start_date;\n    //     params.end_date = searchParam.end_date;\n    // }\n\n    params.start_date = '01/' + searchParam.start_date;\n    params.end_date = '01/' + searchParam.end_date; // params.start_date = '01/07/2021';\n    // params.end_date = '30/10/2021';\n\n    params.hash_id = hash_id;\n    params.id_employee = this.employee.id_employee;\n    params.id_language = this.employee.id_language;\n    params.type = 'customer';\n    ReportService.instance.getDataReportYear(params, data => {\n      if (data) {\n        var dataAlarms = data.dataAlarms;\n        var chartOptionAlarm = {\n          credits: {\n            enabled: false\n          },\n          exporting: {\n            enabled: false\n          },\n          chart: {\n            zoomType: 'xy',\n            height: 340\n          },\n          title: {\n            text: null\n          },\n          colors: ['#f5893b', '#66bc51', '#004ec3'],\n          xAxis: [],\n          yAxis: [{\n            min: 0,\n            lineWidth: 1,\n            gridLineWidth: 1,\n            labels: {\n              format: '{value}',\n              enabled: true\n            },\n            title: {\n              text: 'kWh',\n              enabled: false\n            }\n          }],\n          tooltip: {\n            shared: true\n          },\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom',\n            borderWidth: 0,\n            showInLegend: false\n          },\n          plotOptions: {\n            stacking: 'normal',\n            spline: {\n              dataLabels: {\n                enabled: true\n              },\n              enableMouseTracking: false\n            }\n          },\n          series: []\n        };\n        var chartOption1 = {\n          credits: {\n            enabled: false\n          },\n          exporting: {\n            enabled: false\n          },\n          chart: {\n            zoomType: 'xy',\n            height: 340\n          },\n          title: {\n            text: null\n          },\n          colors: ['#78c1f5', '#f58634'],\n          xAxis: [],\n          yAxis: [{\n            min: 0,\n            lineWidth: 1,\n            gridLineWidth: 1,\n            labels: {\n              format: '{value}',\n              enabled: true\n            },\n            title: {\n              text: t('report.energy_yield'),\n              enabled: false\n            }\n          }, {\n            // Secondary yAxis\n            title: {\n              text: t('report.PVSyst_energy_yield'),\n              enabled: false\n            },\n            labels: {\n              format: '{value}'\n            },\n            opposite: true\n          }],\n          tooltip: {// shared: true\n          },\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom',\n            borderWidth: 0,\n            showInLegend: false\n          },\n          plotOptions: {\n            stacking: 'normal',\n            line: {\n              dataLabels: {\n                enabled: true\n              },\n              enableMouseTracking: false\n            },\n            column: {\n              dataLabels: {\n                enabled: true,\n                rotation: 270,\n                x: 0,\n                y: 100,\n                style: {\n                  fontSize: \"8px\"\n                }\n              },\n              enableMouseTracking: false\n            }\n          },\n          series: []\n        };\n        var chartOption2 = {\n          credits: {\n            enabled: false\n          },\n          exporting: {\n            enabled: false\n          },\n          chart: {\n            zoomType: 'xy',\n            height: 340\n          },\n          title: {\n            text: null\n          },\n          colors: ['#78c1f5', '#f58634'],\n          xAxis: [{\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            crosshair: true\n          }],\n          yAxis: [{\n            min: 0,\n            lineWidth: 1,\n            gridLineWidth: 1,\n            labels: {\n              format: '{value}',\n              enabled: true\n            },\n            title: {\n              text: t('report.energy_yield'),\n              enabled: false\n            }\n          }, {\n            // Secondary yAxis\n            title: {\n              text: t('report.PVSyst_energy_yield'),\n              enabled: false\n            },\n            labels: {\n              format: '{value}'\n            },\n            opposite: true\n          }],\n          tooltip: {\n            shared: true\n          },\n          legend: {\n            layout: 'horizontal',\n            align: 'center',\n            verticalAlign: 'bottom',\n            borderWidth: 0,\n            showInLegend: false\n          },\n          series: []\n        };\n\n        if (Libs.isArrayData(dataAlarms)) {\n          var dataItem = [],\n              categories = [],\n              series = [],\n              xAxis = [];\n\n          for (var i = 0, len = dataAlarms.length; i < len; i++) {\n            categories.push(dataAlarms[i].time_full);\n            dataItem.push([dataAlarms[i].time_full, dataAlarms[i].total_alarm]);\n          }\n\n          xAxis.push({\n            categories: categories,\n            crosshair: true\n          });\n          series.push({\n            name: 'Alarms',\n            type: 'spline',\n            data: dataItem,\n            tooltip: {\n              valueSuffix: ''\n            }\n          });\n          chartOptionAlarm.xAxis = xAxis;\n          chartOptionAlarm.series = series;\n        } else {\n          chartOptionAlarm.xAxis = [];\n          chartOptionAlarm.series = [];\n          data.dataAlarms = [];\n        }\n\n        var dataEnergyMonth = data.dataEnergyMonth;\n        var seriesRowET1 = [],\n            seriesRow1 = [],\n            series1 = [],\n            categories1 = [],\n            xAxis1 = [];\n        var seriesRowET2 = [],\n            seriesRow2 = [],\n            series2 = [],\n            categories2 = [],\n            xAxis2 = [];\n\n        if (Libs.isArrayData(dataEnergyMonth)) {\n          for (var i = 0, len = dataEnergyMonth.length; i < len; i++) {\n            categories1.push(dataEnergyMonth[i].time_full);\n            seriesRowET1.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].estimate_energy]);\n            seriesRow1.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].activeEnergy]);\n            categories2.push(dataEnergyMonth[i].time_full);\n            seriesRowET2.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].sum_estimate_energy == 0 ? null : dataEnergyMonth[i].sum_estimate_energy]);\n            seriesRow2.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].sum_activeEnergy == 0 ? null : dataEnergyMonth[i].sum_activeEnergy]);\n          }\n\n          xAxis1.push({\n            categories: categories1,\n            crosshair: true\n          });\n          series1.push({\n            name: t('report.PVSyst_energy_yield') + ' (kWh)',\n            type: 'column',\n            zIndex: 1,\n            data: seriesRowET1,\n            tooltip: {\n              valueSuffix: 'kWh'\n            },\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: '#000',\n              align: 'center',\n              format: '{point.y}',\n              y: 20,\n              style: {\n                fontSize: '8px',\n                fontFamily: 'Verdana, sans-serif'\n              }\n            }\n          });\n          series1.push({\n            name: t('report.energy_yield') + ' (kWh)',\n            type: 'column',\n            yAxis: 0,\n            zIndex: 2,\n            data: seriesRow1,\n            tooltip: {\n              valueSuffix: ' kWh'\n            },\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: '#000',\n              align: 'center',\n              format: '{point.y}',\n              y: 20,\n              style: {\n                fontSize: '8px',\n                fontFamily: 'Verdana, sans-serif'\n              }\n            }\n          });\n          chartOption1.series = series1;\n          chartOption1.xAxis = xAxis1;\n          xAxis2.push({\n            categories: categories2,\n            crosshair: true\n          });\n          series2.push({\n            name: t('report.PVSyst_energy_yield') + ' (kWh)',\n            type: 'column',\n            zIndex: 2,\n            data: seriesRowET2,\n            tooltip: {\n              valueSuffix: 'kWh'\n            },\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: '#000',\n              align: 'center',\n              format: '{point.y}',\n              y: 20,\n              style: {\n                fontSize: '8px',\n                fontFamily: 'Verdana, sans-serif'\n              }\n            }\n          });\n          series2.push({\n            name: t('report.energy_yield') + ' (kWh)',\n            type: 'column',\n            yAxis: 0,\n            zIndex: 1,\n            data: seriesRow2,\n            tooltip: {\n              valueSuffix: ' kWh'\n            },\n            dataLabels: {\n              enabled: true,\n              rotation: -90,\n              color: '#000',\n              align: 'center',\n              format: '{point.y}',\n              y: 20,\n              style: {\n                fontSize: '8px',\n                fontFamily: 'Verdana, sans-serif'\n              }\n            }\n          });\n          chartOption2.series = series2;\n          chartOption2.xAxis = xAxis2;\n        } else {\n          data.dataEnergyMonth = [];\n        }\n\n        this.setState({\n          curItem: data,\n          chartOptionAlarm: chartOptionAlarm,\n          chartOption1: chartOption1,\n          chartOption2: chartOption2\n        }, () => {});\n      }\n    }, false);\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Reports);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleProject/Reports/Reports.js"],"names":["ReportsJsx","BaseComponent","Libs","withTranslation","ReportService","moment","Reports","constructor","props","context","handleDropdownChange","item","name","self","searchParam","state","isObjectEmpty","type","value","setState","getDataReportYear","getDataReportMonth","jsxTemplate","hash_id","params","id","curItem","dataList","dataType","label","max_date","format","start_date","add","end_date","chartMonthOption","chartOptionAlarm","chartOption1","chartOption2","handleInputDateChange","bind","componentDidMount","componentWillReceiveProps","nextProps","match","event","target","checked","startDate","split","endDate","length","isBlank","dateIsAfter","addMonths","isAfter","Object","assign","id_employee","employee","id_language","instance","data","credits","enabled","exporting","chart","zoomType","title","text","colors","xAxis","yAxis","min","lineWidth","gridLineWidth","labels","tooltip","shared","legend","layout","align","verticalAlign","borderWidth","showInLegend","plotOptions","column","dataLabels","enableMouseTracking","series","dataEnergyMonth","isArrayData","categories","seriesData","map","index","push","parseInt","day","activeEnergy","crosshair","valueSuffix","forceUpdate","t","dataAlarms","height","stacking","spline","opposite","line","rotation","x","y","style","fontSize","dataItem","i","len","time_full","total_alarm","seriesRowET1","seriesRow1","series1","categories1","xAxis1","seriesRowET2","seriesRow2","series2","categories2","xAxis2","estimate_energy","sum_estimate_energy","sum_activeEnergy","zIndex","color","fontFamily","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ReportsJsx from './Reports.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport ReportService from '../../../../../services/ReportService';\nimport moment from 'moment';\n\nclass Reports extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = ReportsJsx;\n        this.state = {\n            hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n            curItem: {},\n            dataList: [],\n            dataType: [\n                {\n                    id: 1,\n                    value: 1,\n                    label: \"Year\"\n                },\n                {\n                    id: 2,\n                    value: 2,\n                    label: \"Month\"\n                }\n            ],\n\n            searchParam: {\n                type: 2,\n                max_date: moment().format('MM/YYYY'),\n                start_date: moment().add(-11, 'M').format('MM/YYYY'),\n                end_date: moment().format('MM/YYYY')\n            },\n            chartMonthOption: {},\n            chartOptionAlarm: {},\n            chartOption1: {},\n            chartOption2: {}\n        };\n\n        this.handleInputDateChange = this.handleInputDateChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        var { searchParam } = this.state;\n        if (searchParam.type == 2) {\n            this.getDataReportMonth();\n        } else {\n            this.getDataReportYear();\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this, searchParam = this.state.searchParam;\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.setState({\n                hash_id: nextProps.match.params.id\n            }, () => {\n                if (searchParam.type == 2) {\n                    self.getDataReportMonth();\n                } else {\n                    self.getDataReportYear();\n                }\n            });\n        }\n    }\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputDateChange(event) {\n        let target = event.target, self = this;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { searchParam } = this.state;\n            if (searchParam.type === 1) {\n                if (name === 'start_date') {\n                    var startDate = value.split(\"/\");\n                    var endDate = null;\n                    if (startDate.length > 0) {\n                        endDate = startDate[0] + \"/01/\" + startDate[1];\n                    }\n                    if (Libs.isBlank(endDate)) { return }\n\n                    const dateIsAfter = moment(Libs.addMonths(endDate, 11)).isAfter(moment());\n                    if (dateIsAfter) {\n                        searchParam.end_date = moment().format('MM/YYYY');\n                    } else {\n                        searchParam.end_date = moment(Libs.addMonths(endDate, 11)).format('MM/YYYY');\n                    }\n                }\n            }\n\n            searchParam[name] = value;\n            this.setState({ searchParam }, () => {\n                if (searchParam.type === 1) {\n                    self.getDataReportYear();\n                } else {\n                    self.getDataReportMonth();\n                }\n\n            });\n        }\n    }\n\n    getDataReportMonth() {\n        var { hash_id, searchParam } = this.state, self = this;\n        if (Libs.isBlank(hash_id)) return;\n        var params = Object.assign({}, searchParam);\n        params.start_date = '01/' + searchParam.start_date;\n        params.end_date = '01/' + searchParam.end_date;\n\n        params.hash_id = hash_id;\n        params.id_employee = this.employee.id_employee;\n        params.id_language = this.employee.id_language;\n        params.type = 'customer';\n\n        ReportService.instance.getDataReportMonth(params, data => {\n            if (data) {\n                var chartMonthOption = {\n                    credits: { enabled: false },\n                    exporting: { enabled: false },\n                    chart: {\n                        zoomType: 'xy'\n                    },\n                    title: {\n                        text: null,\n\n                    },\n                    colors: ['#78c1f5', '#e2a76c'],\n                    xAxis: [],\n                    yAxis: [{\n                        min: 0,\n                        lineWidth: 1,\n                        gridLineWidth: 1,\n                        labels: {\n                            format: '{value}',\n                            enabled: true\n                        },\n                        title: {\n                            text: 'kWh',\n                            enabled: true\n                        }\n                    }],\n                    tooltip: {\n                        shared: true\n                    },\n                    legend: {\n\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom',\n                        borderWidth: 0,\n                        showInLegend: false,\n                        enabled: false\n\n                    },\n                    plotOptions: {\n                        column: {\n                            dataLabels: {\n                                enabled: true\n                            },\n                            enableMouseTracking: false\n                        },\n                    },\n\n                    series: []\n                };\n\n                var dataEnergyMonth = data.dataEnergyMonth;\n                if (Libs.isArrayData(dataEnergyMonth)) {\n                    var categories = [], seriesData = [], series = [], xAxis = [];\n                    dataEnergyMonth.map((item, index) => {\n                        categories.push(parseInt(item.day));\n                        seriesData.push(item.activeEnergy);\n                    });\n\n                    xAxis.push(\n                        {\n                            categories: categories,\n                            crosshair: true\n                        }\n                    );\n\n                    series.push(\n                        {\n                            name: '',\n                            type: 'column',\n                            data: seriesData,\n                            tooltip: {\n                                valueSuffix: ' kWh'\n                            }\n                        }\n                    );\n\n                    chartMonthOption.xAxis = xAxis;\n                    chartMonthOption.series = series;\n                }\n\n                this.setState({\n                    curItem: data,\n                    chartMonthOption: chartMonthOption\n                }, () => {\n                    self.forceUpdate();\n                });\n            }\n        }, false);\n\n    }\n\n\n    getDataReportYear() {\n        var { hash_id, searchParam, chartOptionAlarm } = this.state, self = this;\n        var { t } = this.props;\n        if (Libs.isBlank(hash_id)) return;\n        var params = Object.assign({}, searchParam);\n        // if (searchParam.type == 1) {\n        //     params.start_date = searchParam.start_date;\n        //     params.end_date = searchParam.end_date;\n        // }\n\n        params.start_date = '01/' + searchParam.start_date;\n        params.end_date = '01/' + searchParam.end_date;\n\n        // params.start_date = '01/07/2021';\n        // params.end_date = '30/10/2021';\n\n        params.hash_id = hash_id;\n        params.id_employee = this.employee.id_employee;\n        params.id_language = this.employee.id_language;\n        params.type = 'customer';\n\n        ReportService.instance.getDataReportYear(params, data => {\n            if (data) {\n                var dataAlarms = data.dataAlarms;\n                var chartOptionAlarm = {\n                    credits: { enabled: false },\n                    exporting: { enabled: false },\n                    chart: {\n                        zoomType: 'xy',\n                        height: 340\n                    },\n                    title: {\n                        text: null,\n\n                    },\n                    colors: ['#f5893b', '#66bc51', '#004ec3'],\n                    xAxis: [],\n                    yAxis: [{\n                        min: 0,\n                        lineWidth: 1,\n                        gridLineWidth: 1,\n                        labels: {\n                            format: '{value}',\n                            enabled: true\n                        },\n                        title: {\n                            text: 'kWh',\n                            enabled: false\n                        }\n                    }],\n                    tooltip: {\n                        shared: true\n                    },\n                    legend: {\n\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom',\n                        borderWidth: 0,\n                        showInLegend: false\n\n                    },\n\n                    plotOptions: {\n                        stacking: 'normal',\n                        spline: {\n                            dataLabels: {\n                                enabled: true\n                            },\n                            enableMouseTracking: false\n                        },\n                    },\n\n                    series: []\n                };\n\n                var chartOption1 = {\n                    credits: { enabled: false },\n                    exporting: { enabled: false },\n                    chart: {\n                        zoomType: 'xy',\n                        height: 340\n                    },\n                    title: {\n                        text: null,\n\n                    },\n                    colors: ['#78c1f5', '#f58634'],\n                    xAxis: [],\n                    yAxis: [{\n                        min: 0,\n                        lineWidth: 1,\n                        gridLineWidth: 1,\n                        labels: {\n                            format: '{value}',\n                            enabled: true\n                        },\n                        title: {\n                            text: t('report.energy_yield'),\n                            enabled: false\n                        }\n                    }, { // Secondary yAxis\n\n                        title: {\n                            text: t('report.PVSyst_energy_yield'),\n                            enabled: false\n                        },\n                        labels: {\n                            format: '{value}',\n                        },\n                        opposite: true\n                    }],\n                    tooltip: {\n                        // shared: true\n                    },\n                    legend: {\n\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom',\n                        borderWidth: 0,\n                        showInLegend: false\n\n                    },\n                    plotOptions: {\n                        stacking: 'normal',\n                        line: {\n                            dataLabels: {\n                                enabled: true\n                            },\n                            enableMouseTracking: false\n                        },\n\n                        column: {\n                            dataLabels: {\n                                enabled: true,\n                                rotation: 270,\n                                x: 0,\n                                y: 100,\n                                style: {\n                                    fontSize: \"8px\"\n                                }\n                            },\n                            enableMouseTracking: false\n                        },\n                    },\n\n                    series: []\n                };\n\n                var chartOption2 = {\n                    credits: { enabled: false },\n                    exporting: { enabled: false },\n                    chart: {\n                        zoomType: 'xy',\n                        height: 340\n                    },\n                    title: {\n                        text: null,\n\n                    },\n                    colors: ['#78c1f5', '#f58634'],\n                    xAxis: [{\n                        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n                            'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                        crosshair: true\n                    }],\n                    yAxis: [{\n                        min: 0,\n                        lineWidth: 1,\n                        gridLineWidth: 1,\n                        labels: {\n                            format: '{value}',\n                            enabled: true\n                        },\n                        title: {\n                            text: t('report.energy_yield'),\n                            enabled: false\n                        }\n                    }, { // Secondary yAxis\n\n                        title: {\n                            text: t('report.PVSyst_energy_yield'),\n                            enabled: false\n                        },\n                        labels: {\n                            format: '{value}',\n                        },\n                        opposite: true\n                    }],\n                    tooltip: {\n                        shared: true\n                    },\n                    legend: {\n\n                        layout: 'horizontal',\n                        align: 'center',\n                        verticalAlign: 'bottom',\n                        borderWidth: 0,\n                        showInLegend: false\n\n                    },\n\n                    series: []\n                };\n\n                if (Libs.isArrayData(dataAlarms)) {\n                    var dataItem = [], categories = [], series = [], xAxis = [];\n                    for (var i = 0, len = dataAlarms.length; i < len; i++) {\n                        categories.push(dataAlarms[i].time_full);\n                        dataItem.push([dataAlarms[i].time_full, dataAlarms[i].total_alarm]);\n                    }\n\n                    xAxis.push(\n                        {\n                            categories: categories,\n                            crosshair: true\n                        }\n                    );\n\n                    series.push({\n                        name: 'Alarms',\n                        type: 'spline',\n                        data: dataItem,\n                        tooltip: {\n                            valueSuffix: ''\n                        }\n                    });\n\n                    chartOptionAlarm.xAxis = xAxis;\n                    chartOptionAlarm.series = series;\n                } else {\n                    chartOptionAlarm.xAxis = [];\n                    chartOptionAlarm.series = [];\n                    data.dataAlarms = [];\n                }\n\n\n                var dataEnergyMonth = data.dataEnergyMonth;\n                var seriesRowET1 = [], seriesRow1 = [], series1 = [], categories1 = [], xAxis1 = [];\n                var seriesRowET2 = [], seriesRow2 = [], series2 = [], categories2 = [], xAxis2 = [];\n                if (Libs.isArrayData(dataEnergyMonth)) {\n\n                    for (var i = 0, len = dataEnergyMonth.length; i < len; i++) {\n                        categories1.push(dataEnergyMonth[i].time_full);\n                        seriesRowET1.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].estimate_energy]);\n                        seriesRow1.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].activeEnergy]);\n\n                        categories2.push(dataEnergyMonth[i].time_full);\n                        seriesRowET2.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].sum_estimate_energy == 0 ? null : dataEnergyMonth[i].sum_estimate_energy]);\n                        seriesRow2.push([dataEnergyMonth[i].time_full, dataEnergyMonth[i].sum_activeEnergy == 0 ? null : dataEnergyMonth[i].sum_activeEnergy]);\n                    }\n\n                    xAxis1.push({\n                        categories: categories1,\n                        crosshair: true\n                    });\n\n                    series1.push({\n                        name: t('report.PVSyst_energy_yield') +' (kWh)',\n                        type: 'column',\n                        zIndex: 1,\n                        data: seriesRowET1,\n                        tooltip: {\n                            valueSuffix: 'kWh'\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            rotation: -90,\n                            color: '#000',\n                            align: 'center',\n                            format: '{point.y}',\n                            y: 20,\n                            style: {\n                                fontSize: '8px',\n                                fontFamily: 'Verdana, sans-serif'\n                            }\n                        }\n                    });\n\n                    series1.push({\n                        name: t('report.energy_yield') + ' (kWh)',\n                        type: 'column',\n                        yAxis: 0,\n                        zIndex: 2,\n                        data: seriesRow1,\n                        tooltip: {\n                            valueSuffix: ' kWh'\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            rotation: -90,\n                            color: '#000',\n                            align: 'center',\n                            format: '{point.y}',\n                            y: 20,\n                            style: {\n                                fontSize: '8px',\n                                fontFamily: 'Verdana, sans-serif'\n                            }\n                        }\n                    });\n                    chartOption1.series = series1;\n                    chartOption1.xAxis = xAxis1;\n\n                    xAxis2.push({\n                        categories: categories2,\n                        crosshair: true\n                    });\n\n                    series2.push({\n                        name: t('report.PVSyst_energy_yield') +' (kWh)',\n                        type: 'column',\n                        zIndex: 2,\n                        data: seriesRowET2,\n                        tooltip: {\n                            valueSuffix: 'kWh'\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            rotation: -90,\n                            color: '#000',\n                            align: 'center',\n                            format: '{point.y}',\n                            y: 20,\n                            style: {\n                                fontSize: '8px',\n                                fontFamily: 'Verdana, sans-serif'\n                            }\n                        }\n                    });\n\n                    series2.push({\n                        name: t('report.energy_yield') +' (kWh)',\n                        type: 'column',\n                        yAxis: 0,\n                        zIndex: 1,\n                        data: seriesRow2,\n                        tooltip: {\n                            valueSuffix: ' kWh'\n                        },\n                        dataLabels: {\n                            enabled: true,\n                            rotation: -90,\n                            color: '#000',\n                            align: 'center',\n                            format: '{point.y}',\n                            y: 20,\n                            style: {\n                                fontSize: '8px',\n                                fontFamily: 'Verdana, sans-serif'\n                            }\n                        }\n                    });\n\n                    chartOption2.series = series2;\n                    chartOption2.xAxis = xAxis2;\n\n                } else {\n                    data.dataEnergyMonth = [];\n                }\n                this.setState({\n                    curItem: data,\n                    chartOptionAlarm: chartOptionAlarm,\n                    chartOption1: chartOption1,\n                    chartOption2: chartOption2\n                }, () => {\n\n                });\n            }\n        }, false);\n    }\n\n\n\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let searchParam = self.state.searchParam;\n\n        if (Libs.isObjectEmpty(item)) {\n            searchParam.type = '';\n        } else {\n            var value = item.value;\n            searchParam[name] = value;\n        }\n\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            if (searchParam.type == 1) {\n                self.getDataReportYear();\n            } else {\n                self.getDataReportMonth();\n            }\n\n        });\n    }\n\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Reports)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}