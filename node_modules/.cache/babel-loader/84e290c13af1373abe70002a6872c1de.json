{"ast":null,"code":"import Constants from '../../../../../utils/Constants';\nimport Libs from '../../../../../utils/Libs';\nimport BaseValidate from '../../../../../validator/BaseValidate';\n\nclass AddPopupValidate extends BaseValidate {\n  constructor(props) {\n    super();\n    var {\n      t,\n      curItem\n    } = props;\n    this.trans = t;\n    this.curItem = curItem;\n  }\n\n  setRule() {\n    this.addRuleForField('first_name', 'trim', true);\n    this.addRuleForField('first_name', 'required', true, this.trans('validate_rule.required'), this.trans('employee.first_name'));\n    this.addRuleForField('first_name', 'maxLength', 100, this.trans('validate_rule.maxLength_input'), this.trans('employee.first_name'));\n    this.addRuleForField('last_name', 'trim', true);\n    this.addRuleForField('last_name', 'required', true, this.trans('validate_rule.required'), this.trans('employee.last_name'));\n    this.addRuleForField('last_name', 'maxLength', 100, this.trans('validate_rule.maxLength_input'), this.trans('employee.last_name'));\n    this.addRuleForField('phone', 'trim', true);\n    this.addRuleForField('phone', 'required', true, this.trans('validate_rule.required'), this.trans('employee.phone'));\n    this.addRuleForField('phone', 'maxLength', 20, this.trans('validate_rule.maxLength_input'), this.trans('employee.phone'));\n    this.addRuleForField('email', 'trim', true);\n    this.addRuleForField('email', 'required', true, this.trans('validate_rule.required'), this.trans('employee.email'));\n    this.addRuleForField('email', 'type', 'email', this.trans('validate_rule.type_email'), this.trans('employee.email'));\n    this.addRuleForField('email', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.email'));\n\n    if (this.curItem.screen_mode == Constants.SCREEN_MODE.ADD || this.curItem.screen_mode == Constants.SCREEN_MODE.EDIT && !Libs.isBlank(this.curItem.password)) {\n      this.addRuleForField('password', 'trim', true);\n      this.addRuleForField('password', 'required', true, this.trans('validate_rule.required'), this.trans('employee.new_password'));\n      this.addRuleForField('password', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.new_password'));\n      this.addRuleForField('password', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.new_password'));\n      this.addRuleForField('password_confirm', 'trim', true);\n      this.addRuleForField('password_confirm', 'required', true, this.trans('validate_rule.required'), this.trans('employee.password_confirm'));\n      this.addRuleForField('password_confirm', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.password_confirm'));\n      this.addRuleForField('password_confirm', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.password_confirm'));\n    }\n  }\n\n  setAlias() {\n    this.v.setAlias({\n      first_name: this.trans('employee.first_name'),\n      last_name: this.trans('employee.last_name'),\n      phone: this.trans('employee.phone'),\n      email: this.trans('employee.email'),\n      password: this.trans('employee.password'),\n      password_confirm: this.trans('employee.password_confirm')\n    });\n  }\n\n}\n\nexport default AddPopupValidate;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Employees/AddPopupValidate.js"],"names":["Constants","Libs","BaseValidate","AddPopupValidate","constructor","props","t","curItem","trans","setRule","addRuleForField","screen_mode","SCREEN_MODE","ADD","EDIT","isBlank","password","setAlias","v","first_name","last_name","phone","email","password_confirm"],"mappings":"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","sourcesContent":["import Constants from '../../../../../utils/Constants';\nimport Libs from '../../../../../utils/Libs';\nimport BaseValidate from '../../../../../validator/BaseValidate';\nclass AddPopupValidate extends BaseValidate {\n    constructor(props) {\n        super();\n        var { t, curItem } = props;\n        this.trans = t;\n        this.curItem = curItem;\n    }\n    setRule() {\n\n        this.addRuleForField('first_name', 'trim', true);\n        this.addRuleForField('first_name', 'required', true, this.trans('validate_rule.required'), this.trans('employee.first_name'));\n        this.addRuleForField('first_name', 'maxLength', 100, this.trans('validate_rule.maxLength_input'), this.trans('employee.first_name'));\n\n        this.addRuleForField('last_name', 'trim', true);\n        this.addRuleForField('last_name', 'required', true, this.trans('validate_rule.required'), this.trans('employee.last_name'));\n        this.addRuleForField('last_name', 'maxLength', 100, this.trans('validate_rule.maxLength_input'), this.trans('employee.last_name'));\n\n        this.addRuleForField('phone', 'trim', true);\n        this.addRuleForField('phone', 'required', true, this.trans('validate_rule.required'), this.trans('employee.phone'));\n        this.addRuleForField('phone', 'maxLength', 20, this.trans('validate_rule.maxLength_input'), this.trans('employee.phone'));\n\n        this.addRuleForField('email', 'trim', true);\n        this.addRuleForField('email', 'required', true, this.trans('validate_rule.required'), this.trans('employee.email'));\n        this.addRuleForField('email', 'type', 'email', this.trans('validate_rule.type_email'), this.trans('employee.email'));\n        this.addRuleForField('email', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.email'));\n\n        if (this.curItem.screen_mode == Constants.SCREEN_MODE.ADD || (this.curItem.screen_mode == Constants.SCREEN_MODE.EDIT && !Libs.isBlank(this.curItem.password))) {\n            this.addRuleForField('password', 'trim', true);\n            this.addRuleForField('password', 'required', true, this.trans('validate_rule.required'), this.trans('employee.new_password'));\n            this.addRuleForField('password', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.new_password'));\n            this.addRuleForField('password', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.new_password'));\n\n            this.addRuleForField('password_confirm', 'trim', true);\n            this.addRuleForField('password_confirm', 'required', true, this.trans('validate_rule.required'), this.trans('employee.password_confirm'));\n            this.addRuleForField('password_confirm', 'maxLength', 200, this.trans('validate_rule.maxLength_input'), this.trans('employee.password_confirm'));\n            this.addRuleForField('password_confirm', 'minLength', 8, this.trans('validate_rule.minLength_input'), this.trans('employee.password_confirm'));\n        }\n    }\n    setAlias() {\n        this.v.setAlias({\n            first_name: this.trans('employee.first_name'),\n            last_name: this.trans('employee.last_name'),\n            phone: this.trans('employee.phone'),\n            email: this.trans('employee.email'),\n            password: this.trans('employee.password'),\n            password_confirm: this.trans('employee.password_confirm')\n        });\n\n    }\n}\nexport default AddPopupValidate;"]},"metadata":{},"sourceType":"module"}