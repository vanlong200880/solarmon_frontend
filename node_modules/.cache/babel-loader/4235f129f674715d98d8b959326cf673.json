{"ast":null,"code":"import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nimport Libs from '../utils/Libs';\nexport default class MainDeviceService {\n  static get instance() {\n    if (!this._instance) {\n      this._instance = new MainDeviceService();\n    }\n\n    return this._instance;\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListInverter(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.LIST_INVERTER, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListDeviceByHashId(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.LIST, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getDataListHardware(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.PARAMETER, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n\n  getListParameterByDevice(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.PARAMETER, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListAlertByDevice(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.LIST_ALERT, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  updateOnOff(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.UPDATE_ON_OFF, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n   * API call for save data\n   * @author long.pham 2018-07-27\n   * @param {Function} callBack\n   * @param {boolean} isShowProgress\n   */\n\n\n  saveControlCalendar(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.SAVE_CONTROL_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n  /**\n  * API call for save data\n  * @author long.pham 2018-07-27\n  * @param {Function} callBack\n  * @param {boolean} isShowProgress\n  */\n\n\n  saveArrControlCalendar(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.SAVE_ARR_CONTROL_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListControlCalendar(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.LIST_CONTROL_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Device.Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListBySiteControlCalendar(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.LIST_BY_SITE_CONTROL_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  deleteListCalendarControl(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.DELETE_LIST_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  deleteItemCalendarControl(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.DELETE_ITEM_CALENDAR, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {ErrorEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  updateControlMode(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.UPDATE_MODE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n   * API get detail\n   * @author Long.Pham 2019-05-28\n   * @param {RegenncyEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getProjectDetail(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.MAIN_DEVICE.PROJECT_DETAIL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {ErrorEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  updateModePowerAndEnergy(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.UPDATE_MODE_POWER_ENERGY, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n\n  getPowerNowByDay(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.MAIN_DEVICE.POWER_NOW_BY_DAY, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/services/MainDeviceService.js"],"names":["CMSHttp","Constants","Libs","MainDeviceService","instance","_instance","getListInverter","objE","callBack","http","post","URL","MAIN_DEVICE","LIST_INVERTER","status","rs","data","total_row","Array","isArray","error","msg","getListDeviceByHashId","LIST","getDataListHardware","PARAMETER","getListParameterByDevice","getListAlertByDevice","LIST_ALERT","updateOnOff","UPDATE_ON_OFF","mess","saveControlCalendar","SAVE_CONTROL_CALENDAR","isObjectEmpty","saveArrControlCalendar","SAVE_ARR_CONTROL_CALENDAR","getListControlCalendar","LIST_CONTROL_CALENDAR","getListBySiteControlCalendar","LIST_BY_SITE_CONTROL_CALENDAR","deleteListCalendarControl","DELETE_LIST_CALENDAR","deleteItemCalendarControl","DELETE_ITEM_CALENDAR","updateControlMode","UPDATE_MODE","getProjectDetail","PROJECT_DETAIL","updateModePowerAndEnergy","UPDATE_MODE_POWER_ENERGY","getPowerNowByDay","POWER_NOW_BY_DAY"],"mappings":"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","sourcesContent":["import CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nimport Libs from '../utils/Libs';\n\nexport default class MainDeviceService {\n    static _instance;\n    static get instance() {\n        if (!this._instance) {\n            this._instance = new MainDeviceService();\n        }\n        return this._instance;\n    }\n\n    \n    \n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListInverter(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.LIST_INVERTER, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n    getListDeviceByHashId(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.LIST, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getDataListHardware(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.PARAMETER, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    \n    getListParameterByDevice(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.PARAMETER, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n    \n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListAlertByDevice(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.LIST_ALERT, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n\n    \n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     updateOnOff(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.UPDATE_ON_OFF, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    \n\n    /**\n     * API call for save data\n     * @author long.pham 2018-07-27\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n     saveControlCalendar(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.SAVE_CONTROL_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n\n\n     /**\n     * API call for save data\n     * @author long.pham 2018-07-27\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n      saveArrControlCalendar(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.SAVE_ARR_CONTROL_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListControlCalendar(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.LIST_CONTROL_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Device.Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListBySiteControlCalendar(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.LIST_BY_SITE_CONTROL_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    \n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     deleteListCalendarControl(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.DELETE_LIST_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    \n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     deleteItemCalendarControl(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.DELETE_ITEM_CALENDAR, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    \n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {ErrorEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     updateControlMode(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.UPDATE_MODE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    /**\n     * API get detail\n     * @author Long.Pham 2019-05-28\n     * @param {RegenncyEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n\n     getProjectDetail(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.MAIN_DEVICE.PROJECT_DETAIL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n\n\n    \n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {ErrorEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     updateModePowerAndEnergy(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.UPDATE_MODE_POWER_ENERGY, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    \n    getPowerNowByDay(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.MAIN_DEVICE.POWER_NOW_BY_DAY, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}