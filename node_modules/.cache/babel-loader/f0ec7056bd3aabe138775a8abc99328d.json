{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport DeletePopupJsx from './DeletePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport Libs from '../../../../../utils/Libs';\n\nclass DeletePopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curItem: this.props.curItem\n    };\n    this.jsxTemplate = DeletePopupJsx;\n  }\n  /**\n   * @description close popup\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  onClickCloseDelete() {\n    if (!this.props.onClickCloseDelete || typeof this.props.onClickCloseDelete !== 'function') return;\n    this.props.onClickCloseDelete(false, null);\n  }\n  /** \n   * @description delete\n   * @author Long.Pham 12/05/2021\n  */\n\n\n  async onDeleteAction() {\n    let params = Object.assign({}, this.state.curItem),\n        self = this;\n    params.status = -1;\n    params.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n    ProjectService.instance.delete(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseDelete(true, data);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default DeletePopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/Project/DeletePopup.js"],"names":["BaseComponent","DeletePopupJsx","ProjectService","Libs","DeletePopup","constructor","props","state","curItem","jsxTemplate","onClickCloseDelete","onDeleteAction","params","Object","assign","self","status","updated_by","employee","first_name","last_name","instance","delete","data","msg","toast","setValidateMessage","isBlank"],"mappings":"AACA,OAAOA,aAAP,MAA0B,2BAA1B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,MAAMC,WAAN,SAA0BJ,aAA1B,CAAwC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE;AADX,KAAb;AAGA,SAAKC,WAAL,GAAmBR,cAAnB;AACH;AAED;AACJ;AACA;AACA;;;AACKS,EAAAA,kBAAkB,GAAG;AAClB,QAAI,CAAC,KAAKJ,KAAL,CAAWI,kBAAZ,IAAkC,OAAO,KAAKJ,KAAL,CAAWI,kBAAlB,KAAyC,UAA/E,EAA2F;AAC3F,SAAKJ,KAAL,CAAWI,kBAAX,CAA8B,KAA9B,EAAqC,IAArC;AACH;AAGD;AACJ;AACA;AACA;;;AACwB,QAAdC,cAAc,GAAG;AACnB,QAAIC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKP,KAAL,CAAWC,OAA7B,CAAb;AAAA,QAAoDO,IAAI,GAAG,IAA3D;AACAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,CAAC,CAAjB;AACAJ,IAAAA,MAAM,CAACK,UAAP,GAAoB,KAAKC,QAAL,CAAcC,UAAd,GAA2B,GAA3B,GAAiC,KAAKD,QAAL,CAAcE,SAAnE;AACAlB,IAAAA,cAAc,CAACmB,QAAf,CAAwBC,MAAxB,CAA+BV,MAA/B,EAAuC,UAAUI,MAAV,EAAkBO,IAAlB,EAAwBC,GAAxB,EAA6B;AAChE,UAAIR,MAAJ,EAAY;AACRD,QAAAA,IAAI,CAACU,KAAL,CAAWD,GAAX,EAAgB,MAAhB;AACAT,QAAAA,IAAI,CAACT,KAAL,CAAWI,kBAAX,CAA8B,IAA9B,EAAoCa,IAApC;AACH,OAHD,MAIK,IAAIA,IAAJ,EAAU;AACXR,QAAAA,IAAI,CAACW,kBAAL,CAAwBH,IAAxB;AACH,OAFI,MAGA,IAAI,CAACpB,IAAI,CAACwB,OAAL,CAAaH,GAAb,CAAL,EAAwB;AACzBT,QAAAA,IAAI,CAACU,KAAL,CAAWD,GAAX,EAAgB,OAAhB;AACH;AACJ,KAXD,EAWG,IAXH;AAYH;;AAvCmC;;AAyCxC,eAAepB,WAAf","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport DeletePopupJsx from './DeletePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport Libs from '../../../../../utils/Libs';\n\nclass DeletePopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem\n        }\n        this.jsxTemplate = DeletePopupJsx;\n    }\n\n    /**\n     * @description close popup\n     * @author Long.Pham 12/05/2021\n     */\n     onClickCloseDelete() {\n        if (!this.props.onClickCloseDelete || typeof this.props.onClickCloseDelete !== 'function') return;\n        this.props.onClickCloseDelete(false, null);\n    }\n\n\n    /** \n     * @description delete\n     * @author Long.Pham 12/05/2021\n    */\n    async onDeleteAction() {\n        let params = Object.assign({}, this.state.curItem), self = this;\n        params.status = -1;\n        params.updated_by = this.employee.first_name + ' ' + this.employee.last_name;\n        ProjectService.instance.delete(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseDelete(true, data);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default DeletePopup;"]},"metadata":{},"sourceType":"module"}