{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport MoveDevicePopupJsx from './MoveDevicePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport DeviceService from '../../../../../services/DeviceService';\nimport Constants from '../../../../../utils/Constants'; // import MoveDevicePopupValidate from './MoveDevicePopupValidate';\n\nimport EstimationSensorValidate from './EstimationSensorValidate';\n\nclass MoveDevicePopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleDropdownChange = (item, name, index) => {\n      if (Libs.isObjectEmpty(item)) return;\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var dataItem = dataList[index];\n      if (Libs.isObjectEmpty(dataItem)) return;\n      dataList[index].id_project = item.id;\n      this.setState({\n        dataList: dataList\n      }); // var self = this;\n      // let curItem = self.state.curItem;\n      // var { t } = this.props;\n      // if (name === 'id_project') {\n      //     if (Libs.isObjectEmpty(item)) {\n      //         curItem.id_device_type = '';\n      //     } else {\n      //         var value = item.value;\n      //         curItem[name] = value;\n      //         self.setValidateMessage({ id_device_type: '' }, true);\n      //     }\n      // }\n      // if (name === 'id_device_group') {\n      //     if (Libs.isObjectEmpty(item)) {\n      //         curItem.id_device_group = '';\n      //     } else {\n      //         var value = item.value;\n      //         curItem[name] = value;\n      //         self.setValidateMessage({ id_device_group: '' }, true);\n      //     }\n      // }\n      // self.setState({\n      //     curItem: curItem\n      // });\n    };\n\n    this.loadConfig = () => {\n      var item = this.props.curItem,\n          self = this;\n      if (Libs.isObjectEmpty(item)) return;\n      ProjectService.instance.getDetailConfig(item, data => {\n        if (data) {\n          self.setState({\n            curItem: data,\n            dataConfigRevenue: Libs.isArrayData(data.dataConfigRevenue) ? data.dataConfigRevenue : []\n          });\n        }\n      }, false);\n    };\n\n    this.state = {\n      curItemProject: this.props.curItem,\n      curItem: {},\n      dataYear: this.getListYear(),\n      dataConfigRevenue: [],\n      dataList: [],\n      dataListProject: [],\n      searchParam: {}\n    };\n    this.jsxTemplate = MoveDevicePopupJsx;\n    this.handleInputChangeItem = this.handleInputChangeItem.bind(this);\n    this.handleDropdownChange = this.handleDropdownChange.bind(this);\n  }\n\n  componentDidMount() {\n    // this.loadConfig();\n    this.getListDeviceByProject();\n    this.getDataListProject();\n  }\n\n  /**\n   * ge list project\n   * @author Long.Pham 2019-06-03\n   */\n  getDataListProject() {\n    let self = this;\n    var {\n      curItemProject\n    } = this.state;\n    var params = {\n      id_language: this.employee.id_language,\n      id_project: null\n    };\n    ProjectService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataListProject: data\n        });\n      } else {\n        self.setState({\n          dataListProject: []\n        });\n      }\n    });\n  }\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n\n\n  getListDeviceByProject() {\n    let self = this;\n    var {\n      curItemProject,\n      searchParam\n    } = this.state;\n    searchParam.id_project = curItemProject.id;\n    searchParam.id_language = this.employee.id_language;\n    DeviceService.instance.getListDeviceByProject(searchParam, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n      } else {\n        self.setState({\n          dataList: []\n        });\n      }\n\n      self.forceUpdate();\n    });\n  }\n  /**\n   * @description Item click event\n   * @author Long.Pham 12-05-2021\n   * @param index element in the list\n   */\n\n\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n  async onSave() {\n    var {\n      curItem,\n      dataList,\n      curItemProject\n    } = this.state,\n        self = this;\n    var params = Object.assign({}, curItem);\n    params.screen_mode = Constants.SCREEN_MODE.EDIT;\n    params.dataList = dataList;\n    ProjectService.instance.saveMoveDevice(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onItemClickCloseMove(false);\n      }\n    }, true);\n  }\n\n}\n\nexport default MoveDevicePopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleSystem/Project/MoveDevicePopup.js"],"names":["BaseComponent","Libs","MoveDevicePopupJsx","ProjectService","DeviceService","Constants","EstimationSensorValidate","MoveDevicePopup","constructor","props","handleDropdownChange","item","name","index","isObjectEmpty","dataList","state","isArrayData","dataItem","id_project","id","setState","loadConfig","curItem","self","instance","getDetailConfig","data","dataConfigRevenue","curItemProject","dataYear","getListYear","dataListProject","searchParam","jsxTemplate","handleInputChangeItem","bind","componentDidMount","getListDeviceByProject","getDataListProject","params","id_language","employee","getDropdownList","total_row","forceUpdate","onSave","Object","assign","screen_mode","SCREEN_MODE","EDIT","saveMoveDevice","status","msg","toast","onItemClickCloseMove"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport MoveDevicePopupJsx from './MoveDevicePopup.jsx';\nimport ProjectService from '../../../../../services/ProjectService';\nimport DeviceService from '../../../../../services/DeviceService';\nimport Constants from '../../../../../utils/Constants';\n// import MoveDevicePopupValidate from './MoveDevicePopupValidate';\nimport EstimationSensorValidate from './EstimationSensorValidate';\n\nclass MoveDevicePopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItemProject: this.props.curItem,\n            curItem: {},\n            dataYear: this.getListYear(),\n            dataConfigRevenue: [],\n            dataList: [],\n            dataListProject: [],\n            searchParam: {}\n        }\n\n        this.jsxTemplate = MoveDevicePopupJsx;\n        this.handleInputChangeItem = this.handleInputChangeItem.bind(this);\n        this.handleDropdownChange = this.handleDropdownChange.bind(this);\n    }\n\n    componentDidMount(){\n        // this.loadConfig();\n        this.getListDeviceByProject();\n        this.getDataListProject();\n    }\n\n\n\n    handleDropdownChange = (item, name, index) => {\n        if(Libs.isObjectEmpty(item)) return;\n        var {dataList} = this.state;\n        if(!Libs.isArrayData(dataList)) return;\n        var dataItem = dataList[index];\n        if(Libs.isObjectEmpty(dataItem)) return;\n\n        dataList[index].id_project = item.id;\n\n        this.setState({\n            dataList: dataList\n        });\n\n\n\n        // var self = this;\n        // let curItem = self.state.curItem;\n        // var { t } = this.props;\n\n        // if (name === 'id_project') {\n        //     if (Libs.isObjectEmpty(item)) {\n        //         curItem.id_device_type = '';\n        //     } else {\n        //         var value = item.value;\n        //         curItem[name] = value;\n        //         self.setValidateMessage({ id_device_type: '' }, true);\n        //     }\n        // }\n\n        // if (name === 'id_device_group') {\n        //     if (Libs.isObjectEmpty(item)) {\n        //         curItem.id_device_group = '';\n        //     } else {\n        //         var value = item.value;\n        //         curItem[name] = value;\n        //         self.setValidateMessage({ id_device_group: '' }, true);\n        //     }\n        // }\n\n        // self.setState({\n        //     curItem: curItem\n        // });\n    }\n\n\n    /**\n     * ge list project\n     * @author Long.Pham 2019-06-03\n     */\n     getDataListProject() {\n        let self = this;\n        var {curItemProject} = this.state;\n        var params = {\n            id_language: this.employee.id_language,\n            id_project:  null\n        };\n\n        ProjectService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataListProject: data\n                });\n            } else {\n                self.setState({\n                    dataListProject: []\n                });\n            }\n        })\n    }\n\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n     getListDeviceByProject() {\n        let self = this;\n        var { curItemProject, searchParam } = this.state;\n        searchParam.id_project = curItemProject.id;\n        searchParam.id_language = this.employee.id_language;\n        DeviceService.instance.getListDeviceByProject(searchParam, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n            } else {\n                self.setState({\n                    dataList: []\n                });\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n     loadConfig = () => {\n        var item = this.props.curItem, self = this;\n        if(Libs.isObjectEmpty(item)) return;\n\n        ProjectService.instance.getDetailConfig(item, data => {\n            if (data) {\n                self.setState({\n                    curItem: data,\n                    dataConfigRevenue: Libs.isArrayData(data.dataConfigRevenue) ? data.dataConfigRevenue: []\n                });\n            }\n        }, false);\n    }\n\n    \n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var { curItem, dataList, curItemProject } = this.state, self = this;\n\n        var params = Object.assign({}, curItem);\n        params.screen_mode = Constants.SCREEN_MODE.EDIT;\n        params.dataList = dataList;\n        ProjectService.instance.saveMoveDevice(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onItemClickCloseMove(false);\n            }\n        }, true);\n    }\n}\nexport default MoveDevicePopup;"]},"metadata":{},"sourceType":"module"}