{"ast":null,"code":"import BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport RoleService from '../../../../../services/RoleService';\nimport EmployeeService from '../../../../../services/EmployeeService';\n\nclass AddPopup extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.onFileAvatarChange = event => {\n      var {\n        t\n      } = this.props;\n      var target = event.target;\n      var file = target.files[0];\n      if (!file || file === undefined || file === null) return;\n      var fileName = file.name,\n          fileSize = file.size;\n      var checkExtFile = Libs.checkExtensionFile(fileName, 1);\n      var msgAvatarError = null;\n\n      if (!checkExtFile) {\n        msgAvatarError = t('message.msg_err_ext_image_file');\n      } else if (fileSize <= 0) {\n        msgAvatarError = t('message.msg_err_file_size');\n      } else if (fileSize > Constants.COMMON.MAX_IMAGE_SIZE) {\n        msgAvatarError = t('message.msg_err_max_size_upload');\n      }\n\n      var self = this;\n      var {\n        curItem\n      } = this.state;\n\n      if (!Libs.isBlank(msgAvatarError)) {\n        curItem.file_upload = '';\n        curItem.file_message = msgAvatarError;\n        this.setState({\n          curItem: curItem\n        });\n        return;\n      } else {\n        curItem.file_message = '';\n        this.setState({\n          curItem: curItem\n        });\n      } //Read file upload\n\n\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        curItem.file_upload = e.target.result;\n        curItem.file_name = fileName;\n        self.setState({\n          curItem: curItem\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n\n    this.onClickDeleteAvatar = event => {\n      var {\n        curItem\n      } = this.state;\n      curItem.file_message = '';\n      curItem.file_upload = '';\n      curItem.avatar_full = null;\n      curItem.avatar = null;\n      this.setState({\n        curItem: curItem\n      });\n    };\n\n    this.state = {\n      curItem: this.props.curItem,\n      allLanguage: this.props.allLanguage,\n      dataRoles: [],\n      dataRegency: []\n    };\n    this.jsxTemplate = AddPopupJsx;\n  }\n  /**\n   * @description Called immediately after the component is mounted in the DOM. Called after the render function\n   * @author Long.Pham 12/05/2021\n   */\n\n\n  componentDidMount() {\n    var curItem = this.state.curItem;\n\n    if (curItem.screen_mode === Constants.SCREEN_MODE.ADD) {\n      curItem.status = 1;\n      curItem.role_data = [];\n      curItem.regency_data = [];\n    }\n\n    this.getDataRole(); // this.getDataRegency();\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 2019-01-17\n   */\n\n\n  handleRoleInputChange(event, index) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        curItem,\n        dataRoles\n      } = this.state;\n      var role_data = curItem.role_data;\n      var item = dataRoles[index];\n      if (Libs.isObjectEmpty(item)) return;\n\n      if (value === 1) {\n        role_data.push({\n          id_employee: '',\n          id_role: item.id\n        });\n      } else {\n        if (Libs.isArrayData(role_data)) {\n          role_data.map((v, index) => {\n            if (v.id_role === item.id) {\n              role_data.splice(index, 1);\n            }\n          });\n        }\n      }\n\n      dataRoles[index].is_checked = value;\n      curItem.role_data = role_data;\n\n      if (Libs.isArrayData(role_data)) {\n        curItem.role_message = null;\n      }\n\n      this.setState({\n        curItem: curItem,\n        dataRoles: dataRoles\n      });\n    }\n  }\n  /**\n   * setValue method to Input\n   * @author Long.Pham 2019-01-17\n   */\n\n\n  handleRegencyInputChange(event, index) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        curItem,\n        dataRegency\n      } = this.state;\n      var regency_data = curItem.regency_data;\n      var item = dataRegency[index];\n      if (Libs.isObjectEmpty(item)) return;\n\n      if (value === 1) {\n        regency_data.push({\n          id_employee: '',\n          id_regency: item.id\n        });\n      } else {\n        if (Libs.isArrayData(regency_data)) {\n          regency_data.map((k, index) => {\n            if (k.id_regency === item.id) {\n              regency_data.splice(index, 1);\n            }\n          });\n        }\n      }\n\n      dataRegency[index].is_checked = value;\n      curItem.regency_data = regency_data;\n      this.setState({\n        curItem: curItem,\n        dataRegency: dataRegency\n      });\n    }\n  }\n  /**\n  * ge list roles\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getDataRole() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    RoleService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataRoles: data\n        }, () => {\n          let curItem = self.state.curItem;\n\n          if (curItem.screen_mode == Constants.SCREEN_MODE.EDIT) {\n            var dataRoles = self.state.dataRoles;\n\n            if (Libs.isArrayData(dataRoles)) {\n              dataRoles.map((v, i) => {\n                var findItem = Libs.find(curItem.role_data, 'id_role', v.id);\n\n                if (!Libs.isObjectEmpty(findItem)) {\n                  dataRoles[i].is_checked = 1;\n                }\n              });\n            }\n\n            self.setState({\n              dataRoles: dataRoles\n            });\n          }\n        });\n      }\n    });\n  }\n\n  generatePassword() {\n    var curItem = this.state.curItem;\n    var password = Libs.generateStrRandom(2, 2, 2, 2);\n    curItem.password = password;\n    curItem.password_confirm = password;\n    this.setState({\n      curItem: curItem\n    });\n    this.setValidateMessage({\n      password: ''\n    }, true);\n    this.setValidateMessage({\n      password_confirm: ''\n    }, true);\n  }\n  /**\n   * @description Upload icon  \n   * @author Long.Pham 12/05/2021\n   */\n\n\n  /**\n   * @description validate a field input\n   * @author Long.Pham 12/05/2021\n   * @param {*} event \n   */\n  async validateOne(event) {\n    var {\n      t\n    } = this.props;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n    var curItem = this.state.curItem;\n\n    if (name) {\n      let param = {\n        [name]: value\n      };\n      let v = new AddPopupValidate(this.props);\n      let error = await v.validateOne(param, name);\n      const regexp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n\n      if (name === 'password') {\n        if (value.length < 8 || regexp.exec(value) === null) {\n          error = {\n            password: t('employee.password_valid_min_8character')\n          };\n        } else {\n          error = {\n            password: ''\n          };\n        }\n      }\n\n      if (name === 'password_confirm' && Libs.isBlank(error.password_confirm)) {\n        if (curItem.password !== value) {\n          error = {\n            password_confirm: t('employee.password_incorrect')\n          };\n        } else {\n          error = {\n            password_confirm: ''\n          };\n        }\n      }\n\n      if (error != null) {\n        this.setValidateMessage(error, true);\n      }\n    }\n  }\n  /**\n   * @description save data\n   * @author long.pham 12/05/2021\n   */\n\n\n  async onSave() {\n    var {\n      t\n    } = this.props;\n    var curItem = this.state.curItem,\n        self = this;\n    var params = Object.assign({}, curItem);\n    var errorFlag = false;\n    var screenMode = !Libs.isBlank(curItem.id) ? Constants.SCREEN_MODE.EDIT : !Libs.isBlank(this.props.curItem.screen_mode) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD;\n    let v = new AddPopupValidate(this.props);\n    let errors = await v.FLValidationAll(curItem);\n\n    if (screenMode === Constants.SCREEN_MODE.ADD || !Libs.isBlank(curItem.password) || !Libs.isBlank(curItem.password_confirm)) {\n      const regexp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n      var password = curItem.password;\n\n      if (password.length < 8 || regexp.exec(password) === null) {\n        errors = Object.assign(Libs.isObjectEmpty(errors) ? {} : errors, {\n          password: t('employee.password_valid_min_8character')\n        });\n        errorFlag = true;\n      } else {\n        if (!Libs.isObjectEmpty(errors)) {\n          delete errors[password];\n        }\n\n        errorFlag = false;\n      }\n\n      var password_confirm = curItem.password_confirm;\n\n      if (password_confirm !== password || Libs.isBlank(curItem.password_confirm)) {\n        errors = Object.assign(Libs.isObjectEmpty(errors) ? {} : errors, {\n          password_confirm: t('employee.password_incorrect')\n        });\n        errorFlag = true;\n      } else {\n        errorFlag = false;\n\n        if (!Libs.isObjectEmpty(errors)) {\n          delete errors[password_confirm];\n        }\n      }\n    }\n\n    if (!Libs.isArrayData(curItem.role_data)) {\n      curItem.role_message = t('employee.role_data');\n      self.setState({\n        curItem: curItem\n      }, () => {\n        self.toast(t('employee.role_data'), \"error\");\n      });\n      errorFlag = true;\n    } else {\n      curItem.role_message = null;\n      errorFlag = false;\n      self.setState({\n        curItem: curItem\n      });\n    }\n\n    if (errors) {\n      this.setValidateMessage(errors, true);\n      errorFlag = true;\n      return;\n    } //remove message validation\n\n\n    this.removeAllValidateMessage();\n\n    if (errorFlag) {\n      return;\n    }\n\n    params.screen_mode = screenMode;\n    params.id_language = this.employee.id_language;\n    params.iso_code = this.employee.iso_code;\n    params.password = Libs.SHA3(curItem.password);\n    params.created_by = this.employee.first_name + \" \" + this.employee.last_name;\n    EmployeeService.instance.save(params, function (status, data, msg) {\n      if (status) {\n        self.toast(msg, \"info\");\n        self.props.onClickCloseAdd(true);\n      } else if (data) {\n        self.setValidateMessage(data);\n      } else if (!Libs.isBlank(msg)) {\n        self.toast(msg, \"error\");\n      }\n    }, true);\n  }\n\n}\n\nexport default AddPopup;","map":{"version":3,"sources":["/Volumes/Data/sources/solarmon_production/solarmon_frontend/src/containers/views/desktop/ModuleSystem/Employees/AddPopup.js"],"names":["BaseComponent","Libs","Constants","AddPopupJsx","AddPopupValidate","RoleService","EmployeeService","AddPopup","constructor","props","onFileAvatarChange","event","t","target","file","files","undefined","fileName","name","fileSize","size","checkExtFile","checkExtensionFile","msgAvatarError","COMMON","MAX_IMAGE_SIZE","self","curItem","state","isBlank","file_upload","file_message","setState","reader","FileReader","onload","e","result","file_name","readAsDataURL","onClickDeleteAvatar","avatar_full","avatar","allLanguage","dataRoles","dataRegency","jsxTemplate","componentDidMount","screen_mode","SCREEN_MODE","ADD","status","role_data","regency_data","getDataRole","handleRoleInputChange","index","value","type","checked","item","isObjectEmpty","push","id_employee","id_role","id","isArrayData","map","v","splice","is_checked","role_message","handleRegencyInputChange","id_regency","k","params","id_language","employee","instance","getDropdownList","data","total_row","EDIT","i","findItem","find","generatePassword","password","generateStrRandom","password_confirm","setValidateMessage","validateOne","param","error","regexp","length","exec","onSave","Object","assign","errorFlag","screenMode","errors","FLValidationAll","toast","removeAllValidateMessage","iso_code","SHA3","created_by","first_name","last_name","save","msg","onClickCloseAdd"],"mappings":"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","sourcesContent":["\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport Constants from '../../../../../utils/Constants';\nimport AddPopupJsx from './AddPopup.jsx';\nimport AddPopupValidate from './AddPopupValidate';\nimport RoleService from '../../../../../services/RoleService';\nimport EmployeeService from '../../../../../services/EmployeeService';\n\nclass AddPopup extends BaseComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            curItem: this.props.curItem,\n            allLanguage: this.props.allLanguage,\n            dataRoles: [],\n            dataRegency: []\n        }\n\n        this.jsxTemplate = AddPopupJsx;\n    }\n    /**\n     * @description Called immediately after the component is mounted in the DOM. Called after the render function\n     * @author Long.Pham 12/05/2021\n     */\n    componentDidMount() {\n        var curItem = this.state.curItem;\n        if (curItem.screen_mode === Constants.SCREEN_MODE.ADD) {\n            curItem.status = 1;\n            curItem.role_data = [];\n            curItem.regency_data = [];\n        }\n        this.getDataRole();\n        // this.getDataRegency();\n    }\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 2019-01-17\n     */\n    handleRoleInputChange(event, index) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n        if (name) {\n            let { curItem, dataRoles } = this.state;\n\n            var role_data = curItem.role_data;\n            var item = dataRoles[index];\n            if (Libs.isObjectEmpty(item)) return;\n\n            if (value === 1) {\n                role_data.push({\n                    id_employee: '',\n                    id_role: item.id\n                });\n            } else {\n                if (Libs.isArrayData(role_data)) {\n                    role_data.map((v, index) => {\n                        if (v.id_role === item.id) {\n                            role_data.splice(index, 1);\n                        }\n                    })\n                }\n            }\n\n            dataRoles[index].is_checked = value;\n            curItem.role_data = role_data;\n\n            if (Libs.isArrayData(role_data)) {\n                curItem.role_message = null;\n            }\n\n            this.setState({\n                curItem: curItem,\n                dataRoles: dataRoles\n            });\n        }\n    }\n\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 2019-01-17\n     */\n    handleRegencyInputChange(event, index) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n        if (name) {\n            let { curItem, dataRegency } = this.state;\n\n            var regency_data = curItem.regency_data;\n            var item = dataRegency[index];\n            if (Libs.isObjectEmpty(item)) return;\n\n            if (value === 1) {\n                regency_data.push({\n                    id_employee: '',\n                    id_regency: item.id\n                });\n            } else {\n                \n                if (Libs.isArrayData(regency_data)) {\n                    regency_data.map((k, index) => {\n                        if (k.id_regency === item.id) {\n                            regency_data.splice(index, 1);\n                        }\n                    })\n                }\n            }\n\n            dataRegency[index].is_checked = value;\n            curItem.regency_data = regency_data;\n            this.setState({\n                curItem: curItem,\n                dataRegency: dataRegency\n            });\n        }\n    }\n\n\n    /**\n    * ge list roles\n    * @author Long.Pham 2019-06-03\n    */\n    getDataRole() {\n        let self = this;\n        var params = {\n            id_language: this.employee.id_language\n        };\n\n        RoleService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataRoles: data\n                }, () => {\n                    let curItem = self.state.curItem;\n\n                    if (curItem.screen_mode == Constants.SCREEN_MODE.EDIT) {\n\n                        var dataRoles = self.state.dataRoles;\n                        if (Libs.isArrayData(dataRoles)) {\n                            dataRoles.map((v, i) => {\n                                var findItem = Libs.find(curItem.role_data, 'id_role', v.id);\n                                if (!Libs.isObjectEmpty(findItem)) {\n                                    dataRoles[i].is_checked = 1;\n                                }\n                            })\n                        }\n                        self.setState({\n                            dataRoles: dataRoles\n                        });\n                    }\n                });\n            }\n        })\n    }\n\n\n    generatePassword() {\n        var curItem = this.state.curItem;\n        var password = Libs.generateStrRandom(2, 2, 2, 2);\n        curItem.password = password;\n        curItem.password_confirm = password;\n        this.setState({ curItem: curItem });\n        this.setValidateMessage({ password: '' }, true);\n        this.setValidateMessage({ password_confirm: '' }, true);\n    }\n\n    /**\n     * @description Upload icon  \n     * @author Long.Pham 12/05/2021\n     */\n    onFileAvatarChange = (event) => {\n        var { t } = this.props;\n        var target = event.target;\n        var file = target.files[0];\n        if (!file || file === undefined || file === null) return;\n        var fileName = file.name, fileSize = file.size;\n        var checkExtFile = Libs.checkExtensionFile(fileName, 1);\n        var msgAvatarError = null;\n        if (!checkExtFile) {\n            msgAvatarError = t('message.msg_err_ext_image_file')\n        }\n        else if (fileSize <= 0) {\n            msgAvatarError = t('message.msg_err_file_size');\n        }\n        else if (fileSize > Constants.COMMON.MAX_IMAGE_SIZE) {\n            msgAvatarError = t('message.msg_err_max_size_upload');\n        }\n\n        var self = this;\n        var { curItem } = this.state;\n        if (!Libs.isBlank(msgAvatarError)) {\n            curItem.file_upload = '';\n            curItem.file_message = msgAvatarError;\n            this.setState({\n                curItem: curItem\n            });\n\n            return;\n        } else {\n            curItem.file_message = '';\n            this.setState({\n                curItem: curItem\n            });\n        }\n\n        //Read file upload\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            curItem.file_upload = e.target.result;\n            curItem.file_name = fileName;\n            self.setState({\n                curItem: curItem\n            });\n        };\n        reader.readAsDataURL(file);\n    }\n\n\n    /**\n     * @description Delete icon upload \n     * @author Long.Pham 12/05/2021\n     */\n    onClickDeleteAvatar = (event) => {\n        var { curItem } = this.state;\n        curItem.file_message = '';\n        curItem.file_upload = '';\n        curItem.avatar_full = null;\n        curItem.avatar = null;\n\n        this.setState({\n            curItem: curItem\n        });\n    }\n\n\n\n    /**\n     * @description validate a field input\n     * @author Long.Pham 12/05/2021\n     * @param {*} event \n     */\n    async validateOne(event) {\n        var { t } = this.props;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        var curItem = this.state.curItem;\n        if (name) {\n            let param = {\n                [name]: value\n            }\n            let v = new AddPopupValidate(this.props);\n            let error = await v.validateOne(param, name);\n            const regexp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n            if (name === 'password') {\n                if (value.length < 8 || regexp.exec(value) === null) {\n                    error = { password: t('employee.password_valid_min_8character') };\n                } else {\n                    error = { password: '' };\n                }\n            }\n\n            if (name === 'password_confirm' && Libs.isBlank(error.password_confirm)) {\n                if (curItem.password !== value) {\n                    error = { password_confirm: t('employee.password_incorrect') };\n                } else {\n                    error = { password_confirm: '' };\n                }\n            }\n\n            if (error != null) {\n                this.setValidateMessage(error, true);\n            }\n        }\n    }\n\n\n    /**\n     * @description save data\n     * @author long.pham 12/05/2021\n     */\n    async onSave() {\n        var { t } = this.props;\n        var curItem = this.state.curItem, self = this;\n        var params = Object.assign({}, curItem);\n        var errorFlag = false;\n        var screenMode = (!Libs.isBlank(curItem.id)) ? Constants.SCREEN_MODE.EDIT : ((!Libs.isBlank(this.props.curItem.screen_mode)) ? this.props.curItem.screen_mode : Constants.SCREEN_MODE.ADD);\n        let v = new AddPopupValidate(this.props);\n        let errors = await v.FLValidationAll(curItem);\n\n        if (screenMode === Constants.SCREEN_MODE.ADD || !Libs.isBlank(curItem.password) || !Libs.isBlank(curItem.password_confirm)) {\n            const regexp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$/;\n            var password = curItem.password;\n            if (password.length < 8 || regexp.exec(password) === null) {\n                errors = Object.assign(Libs.isObjectEmpty(errors) ? {} : errors, { password: t('employee.password_valid_min_8character') });\n                errorFlag = true;\n            } else {\n                if (!Libs.isObjectEmpty(errors)) {\n                    delete errors[password];\n                }\n                errorFlag = false;\n            }\n\n            var password_confirm = curItem.password_confirm;\n            if (password_confirm !== password || Libs.isBlank(curItem.password_confirm)) {\n                errors = Object.assign(Libs.isObjectEmpty(errors) ? {} : errors, { password_confirm: t('employee.password_incorrect') });\n                errorFlag = true;\n            } else {\n                errorFlag = false;\n                if (!Libs.isObjectEmpty(errors)) {\n                    delete errors[password_confirm];\n                }\n            }\n        }\n\n\n\n        if (!Libs.isArrayData(curItem.role_data)) {\n            curItem.role_message = t('employee.role_data');\n            self.setState({\n                curItem: curItem\n            }, () => {\n                self.toast(t('employee.role_data'), \"error\");\n            });\n            errorFlag = true;\n\n        } else {\n            curItem.role_message = null;\n            errorFlag = false;\n            self.setState({\n                curItem: curItem\n            });\n        }\n\n        if (errors) {\n            this.setValidateMessage(errors, true);\n            errorFlag = true;\n            return;\n        }\n        //remove message validation\n        this.removeAllValidateMessage();\n        if (errorFlag) {\n            return;\n        }\n        \n        params.screen_mode = screenMode;\n        params.id_language = this.employee.id_language;\n        params.iso_code = this.employee.iso_code;\n        params.password = Libs.SHA3(curItem.password);\n        params.created_by = this.employee.first_name + \" \" + this.employee.last_name;\n\n        EmployeeService.instance.save(params, function (status, data, msg) {\n            if (status) {\n                self.toast(msg, \"info\");\n                self.props.onClickCloseAdd(true);\n            }\n            else if (data) {\n                self.setValidateMessage(data);\n            }\n            else if (!Libs.isBlank(msg)) {\n                self.toast(msg, \"error\");\n            }\n        }, true);\n    }\n}\nexport default AddPopup;"]},"metadata":{},"sourceType":"module"}