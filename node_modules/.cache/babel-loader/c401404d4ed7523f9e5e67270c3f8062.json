{"ast":null,"code":"import React from 'react';\nimport AnalyticsJsx from './Analytics.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\n\nclass Analytics extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.reloadData = () => {\n      this.forceUpdate();\n    };\n\n    this.handleDropdownChange = (item, name) => {\n      var self = this;\n      let curItem = self.state.curItem;\n\n      if (Libs.isObjectEmpty(item)) {\n        curItem.type = 2;\n      } else {\n        var value = item.value;\n        curItem[name] = value;\n      }\n\n      self.setState({\n        curItem: curItem\n      });\n    };\n\n    this.state = {\n      hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n      curItem: {\n        data_send_time: 1,\n        type: 3\n      },\n      dataStatus: [{\n        id: 1,\n        value: 1,\n        label: \"Performance analytics\"\n      }, {\n        id: 2,\n        value: 2,\n        label: \"Device analytics\"\n      } // {\n      //     id: 3,\n      //     value: 3,\n      //     label: \"Alarm dashboard\"\n      // },\n      // {\n      //     id: 4,\n      //     value: 4,\n      //     label: \"Inverter diagnostic\"\n      // },\n      ],\n      dataList: [],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      }\n    };\n    this.jsxTemplate = AnalyticsJsx;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let self = this;\n\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      this.setState({\n        hash_id: nextProps.match.params.id\n      });\n    }\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Analytics);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModuleProject/Analytics/Analytics.js"],"names":["React","AnalyticsJsx","BaseComponent","Libs","withTranslation","Constants","Analytics","constructor","props","context","reloadData","forceUpdate","handleDropdownChange","item","name","self","curItem","state","isObjectEmpty","type","value","setState","hash_id","params","id","data_send_time","dataStatus","label","dataList","searchParam","limit","COMMON","LIMIT","offset","index","jsxTemplate","componentWillReceiveProps","nextProps","match","render","call","HighOrderComponentTranslated"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AACA,MAAMC,SAAN,SAAwBJ,aAAxB,CAAsC;AAElCK,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACxB,UAAMD,KAAN,EAAaC,OAAb;;AADwB,SAsD5BC,UAtD4B,GAsDf,MAAK;AACd,WAAKC,WAAL;AACH,KAxD2B;;AAAA,SA0D5BC,oBA1D4B,GA0DL,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnC,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWD,OAAzB;;AAEA,UAAIb,IAAI,CAACe,aAAL,CAAmBL,IAAnB,CAAJ,EAA8B;AAC1BG,QAAAA,OAAO,CAACG,IAAR,GAAe,CAAf;AACH,OAFD,MAEO;AACH,YAAIC,KAAK,GAAGP,IAAI,CAACO,KAAjB;AACAJ,QAAAA,OAAO,CAACF,IAAD,CAAP,GAAgBM,KAAhB;AACH;;AAEDL,MAAAA,IAAI,CAACM,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAEA;AADC,OAAd;AAGH,KAxE2B;;AAGxB,SAAKC,KAAL,GAAa;AACTK,MAAAA,OAAO,EAAE,CAACnB,IAAI,CAACe,aAAL,CAAmB,KAAKK,MAAxB,CAAD,GAAmC,KAAKA,MAAL,CAAYC,EAA/C,GAAoD,IADpD;AAETR,MAAAA,OAAO,EAAE;AACLS,QAAAA,cAAc,EAAE,CADX;AAELN,QAAAA,IAAI,EAAE;AAFD,OAFA;AAMTO,MAAAA,UAAU,EAAE,CACR;AACIF,QAAAA,EAAE,EAAE,CADR;AAEIJ,QAAAA,KAAK,EAAE,CAFX;AAGIO,QAAAA,KAAK,EAAE;AAHX,OADQ,EAMR;AACIH,QAAAA,EAAE,EAAE,CADR;AAEIJ,QAAAA,KAAK,EAAE,CAFX;AAGIO,QAAAA,KAAK,EAAE;AAHX,OANQ,CAWR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBQ,OANH;AA6BTC,MAAAA,QAAQ,EAAE,EA7BD;AA8BTC,MAAAA,WAAW,EAAE;AACTC,QAAAA,KAAK,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBC,KADf;AAETC,QAAAA,MAAM,EAAE,CAFC;AAGTC,QAAAA,KAAK,EAAE;AAHE;AA9BJ,KAAb;AAsCA,SAAKC,WAAL,GAAmBlC,YAAnB;AAEH;;AAEDmC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAItB,IAAI,GAAG,IAAX;;AACA,QAAIsB,SAAS,CAACC,KAAV,CAAgBf,MAAhB,CAAuBC,EAAvB,KAA8B,KAAKhB,KAAL,CAAW8B,KAAX,CAAiBf,MAAjB,CAAwBC,EAA1D,EAA8D;AAC1D,WAAKH,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEe,SAAS,CAACC,KAAV,CAAgBf,MAAhB,CAAuBC;AADtB,OAAd;AAGH;AACJ;;AAsBDe,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKJ,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAAP;AACH;;AA9EiC;;AAiFtC,MAAMC,4BAA4B,GAAGrC,eAAe,CAAC,QAAD,CAAf,CAA0BE,SAA1B,CAArC;AACA,eAAemC,4BAAf","sourcesContent":["import React from 'react';\nimport AnalyticsJsx from './Analytics.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nclass Analytics extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n            curItem: {\n                data_send_time: 1,\n                type: 3\n            },\n            dataStatus: [\n                {\n                    id: 1,\n                    value: 1,\n                    label: \"Performance analytics\"\n                },\n                {\n                    id: 2,\n                    value: 2,\n                    label: \"Device analytics\"\n                },\n                // {\n                //     id: 3,\n                //     value: 3,\n                //     label: \"Alarm dashboard\"\n                // },\n                // {\n                //     id: 4,\n                //     value: 4,\n                //     label: \"Inverter diagnostic\"\n                // },\n                \n            ],\n            dataList: [],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n        };\n\n\n        this.jsxTemplate = AnalyticsJsx;\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.setState({\n                hash_id: nextProps.match.params.id\n            });\n        }\n    }\n    \n    reloadData = () =>{\n        this.forceUpdate();\n    }\n\n    handleDropdownChange = (item, name) => {\n        var self = this;\n        let curItem = self.state.curItem;\n\n        if (Libs.isObjectEmpty(item)) {\n            curItem.type = 2;\n        } else {\n            var value = item.value;\n            curItem[name] = value;\n        }\n\n        self.setState({\n            curItem: curItem\n        });\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Analytics)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}