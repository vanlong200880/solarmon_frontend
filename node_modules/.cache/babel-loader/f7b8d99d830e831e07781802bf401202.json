{"ast":null,"code":"import ActivitiesJsx from './Activities.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport MainActivitiesService from '../../../../../services/MainActivitiesService';\nimport ErrorLevelService from '../../../../../services/ErrorLevelService';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport moment from 'moment';\n\nclass Activities extends BaseComponent {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleCheckStatusInputChange = (event, index) => {\n      var {\n        dataStatus\n      } = this.state;\n      if (!Libs.isArrayData(dataStatus)) return;\n      dataStatus[index].is_checked = dataStatus[index].is_checked ? 0 : 1;\n      this.setState({\n        dataStatus: dataStatus\n      });\n    };\n\n    this.handleCheckTypeInputChange = (event, index) => {\n      var {\n        dataErrorType\n      } = this.state;\n      if (!Libs.isArrayData(dataErrorType)) return;\n      dataErrorType[index].is_checked = dataErrorType[index].is_checked ? 0 : 1;\n      this.setState({\n        dataErrorType: dataErrorType\n      });\n    };\n\n    this.handleCheckLevelInputChange = (event, index) => {\n      var {\n        dataErrorLevel\n      } = this.state;\n      if (!Libs.isArrayData(dataErrorLevel)) return;\n      dataErrorLevel[index].is_checked = dataErrorLevel[index].is_checked ? 0 : 1;\n      this.setState({\n        dataErrorLevel: dataErrorLevel\n      });\n    };\n\n    this.downloadData = () => {\n      var {\n        dataList\n      } = this.state;\n      var {\n        t\n      } = this.props;\n      if (!Libs.isArrayData(dataList)) return;\n      var dataExport = [];\n\n      for (var i = 0, len = dataList.length; i < len; i++) {\n        var timeAgo = dataList[i].times_ago + \" \" + t(\"common.\" + dataList[i].times_ago_unit) + (dataList[i].times_ago > 1 && \"s\");\n        dataExport.push({\n          'ID': dataList[i].id,\n          'Device Name': dataList[i].name,\n          'Type': dataList[i].error_type_name,\n          'Level': dataList[i].error_level_name,\n          'Opened': dataList[i].start_date_format,\n          'Open period': timeAgo,\n          'Message': dataList[i].message,\n          'Description': dataList[i].description,\n          'Solutions': dataList[i].solutions,\n          'Note': dataList[i].note,\n          'Review status': dataList[i].alert_state_name\n        });\n      }\n\n      const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      const fileExtension = '.xlsx';\n      const ws = XLSX.utils.json_to_sheet(dataExport, {\n        skipHeader: false\n      });\n      const wb = {\n        SheetNames: ['Alerts'],\n        Sheets: {\n          'Alerts': ws\n        }\n      };\n      const excelBuffer = XLSX.write(wb, {\n        bookType: 'xlsx',\n        type: 'array'\n      });\n      const data = new Blob([excelBuffer], {\n        type: fileType\n      });\n      FileSaver.saveAs(data, \"Export-alerts-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    };\n\n    this.handleCheckItemInputChange = index => {\n      var {\n        dataList\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n      var item = dataList[index];\n      if (Libs.isObjectEmpty(item)) return;\n      dataList[index].is_checked = dataList[index].is_checked ? 0 : 1;\n      this.setState({\n        dataList: dataList\n      });\n    };\n\n    this.handleCheckAllInputChange = () => {\n      var {\n        dataList,\n        checked_all\n      } = this.state;\n      if (!Libs.isArrayData(dataList)) return;\n\n      for (var i = 0, len = dataList.length; i < len; i++) {\n        dataList[i].is_checked = checked_all ? 0 : 1;\n      }\n\n      this.setState({\n        dataList: dataList,\n        checked_all: checked_all ? 0 : 1\n      });\n    };\n\n    this.handleDropdownChange = (item, name) => {\n      if (Libs.isObjectEmpty(item)) return;\n      var self = this,\n          value = item.value;\n      let {\n        searchParam\n      } = self.state;\n\n      if (name === 'id_error_level') {\n        if (Libs.isObjectEmpty(item)) {\n          searchParam.id_error_level = '';\n        }\n      }\n\n      if (name === 'id_error_type') {\n        if (Libs.isObjectEmpty(item)) {\n          searchParam.id_error_type = '';\n        }\n      }\n\n      if (name === 'status') {\n        if (Libs.isObjectEmpty(item)) {\n          searchParam.status = '';\n        }\n      }\n\n      searchParam[name] = value;\n      self.setState({\n        searchParam: searchParam\n      });\n    };\n\n    this.onClickCloseDeleteAll = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        deleteAll: false\n      });\n    };\n\n    this.onItemClickDeleteAll = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        deleteAll: true\n      });\n    };\n\n    this.onClickCloseDelete = (status, data) => {\n      if (status && data) {\n        this.getList();\n      }\n\n      this.setState({\n        delete: false\n      });\n    };\n\n    this.onClickCloseAdd = status => {\n      if (status) {\n        this.getList();\n      }\n\n      this.setState({\n        add: false\n      });\n    };\n\n    this.onItemClickDelete = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      this.setState({\n        curItem: item,\n        delete: true\n      });\n    };\n\n    this.onItemClick = index => {\n      if (!Libs.isArrayData(this.state.dataList)) return;\n      var item = this.state.dataList[index];\n      if (Libs.isObjectEmpty(item)) return;\n      var params = this.state.curItem;\n      params.id = item.id;\n      item.screen_mode = Constants.SCREEN_MODE.EDIT;\n      this.setState({\n        curItem: item,\n        add: true\n      });\n    };\n\n    this.jsxTemplate = ActivitiesJsx;\n    this.state = {\n      hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n      checked_all: 0,\n      curItem: {},\n      dataList: [],\n      dataErrorType: [],\n      dataErrorLevel: [],\n      dataStatus: [{\n        id: 1,\n        value: 1,\n        label: \"Opened\",\n        is_checked: 0\n      }, {\n        id: 0,\n        value: 0,\n        label: \"Closed\",\n        is_checked: 0\n      }],\n      searchParam: {\n        limit: Constants.COMMON.LIMIT,\n        offset: 0,\n        index: 1\n      },\n      viewActivities: false,\n      formSearch: false,\n      delete: false,\n      deleteAll: false,\n      add: false\n    };\n    this.paging = {\n      total: 0,\n      current: 1,\n      currentInput: 1\n    };\n    this.inputChangedHandler = this.inputChangedHandler.bind(this);\n    this.inputChangedEnter = this.inputChangedEnter.bind(this);\n    this.inputChangedBlue = this.inputChangedBlue.bind(this);\n    this.handleInputDateChange = this.handleInputDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getListErrorLevel();\n    this.getListErrorType();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let self = this;\n\n    if (nextProps.match.params.id !== this.props.match.params.id) {\n      this.setState({\n        hash_id: nextProps.match.params.id\n      }, () => {\n        self.getListErrorLevel();\n        self.getListErrorType();\n      });\n    }\n  }\n\n  /**\n   * setValue method to Input\n   * @author Long.Pham 20/05/2021\n   */\n  handleInputDateChange(event) {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (target.type === 'checkbox') {\n      value = target.checked ? 1 : 0;\n    }\n\n    if (name) {\n      let {\n        searchParam\n      } = this.state;\n      searchParam[name] = value;\n      this.setState({\n        searchParam: searchParam\n      });\n    }\n  }\n  /**\n  * ge list error state\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorType() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorType: data\n        });\n      } else {\n        self.setState({\n          dataErrorType: []\n        });\n      }\n    });\n  }\n  /**\n  * ge list error level\n  * @author Long.Pham 2019-06-03\n  */\n\n\n  getListErrorLevel() {\n    let self = this;\n    var params = {\n      id_language: this.employee.id_language\n    };\n    ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataErrorLevel: data\n        }, () => {\n          self.getList();\n        });\n      } else {\n        self.setState({\n          dataErrorLevel: []\n        });\n      }\n    });\n  }\n\n  /**\n   * get list\n   * @author Long.Pham 2019-06-03\n   */\n  getList() {\n    let self = this;\n    var {\n      dataErrorLevel,\n      dataErrorType,\n      dataStatus\n    } = this.state;\n    let params = this.state.searchParam;\n    params.id_language = this.employee.id_language;\n    params.id_employee = this.employee.id_employee;\n    params.hash_id = this.state.hash_id;\n    params.errorLevel = dataErrorLevel.filter(item => item.is_checked == 1);\n    params.errorType = dataErrorType.filter(item => item.is_checked == 1);\n    params.dataStatus = dataStatus.filter(item => item.is_checked == 1);\n    params.type = 'private';\n    MainActivitiesService.instance.getList(params, (data, total_row) => {\n      if (Libs.isArrayData(data)) {\n        self.setState({\n          dataList: data\n        });\n        var total = parseInt(total_row / self.state.searchParam.limit);\n\n        if (total_row % self.state.searchParam.limit > 0) {\n          total = total + 1;\n        }\n\n        self.paging.total = total;\n        self.paging.current = self.state.searchParam.index;\n        self.paging.currentInput = self.state.searchParam.index;\n        self.state.total_row = total_row;\n      } else {\n        self.setState({\n          dataList: [],\n          total_row: 0\n        });\n        self.paging.total = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n      }\n\n      self.forceUpdate();\n    });\n  }\n  /**\n   * @description Item click event\n   * @author Long.Pham 12-05-2021\n   * @param index element in the list\n   */\n\n\n  inputChangedHandler(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n\n    if (name === 'current') {\n      if (!Libs.isBlank(value)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(value)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      self.paging.currentInput = value;\n      self.forceUpdate();\n    }\n\n    if (name === 'limit') {\n      var {\n        searchParam\n      } = this.state;\n      searchParam.limit = value;\n      this.setState({\n        searchParam: searchParam\n      }, () => {\n        self.getList();\n      });\n    }\n  }\n\n  inputChangedEnter(event) {\n    let self = this;\n\n    if (event.key === 'Enter') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n\n  inputChangedBlue(event) {\n    let self = this;\n    let target = event.target;\n    let name = target.name;\n\n    if (name === 'current') {\n      var currentInput = this.paging.currentInput;\n\n      if (!Libs.isBlank(currentInput)) {\n        var {\n          t\n        } = this.props;\n\n        if (!Libs.isNumber(currentInput)) {\n          self.toast(t('common.page_is_number'), \"error\");\n          return;\n        }\n      }\n\n      if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n\n      if (parseInt(currentInput) > this.paging.total) {\n        currentInput = self.paging.total;\n      }\n\n      if (currentInput <= 0) {\n        currentInput = 1;\n      }\n\n      self.paging.current = currentInput;\n      self.paging.currentInput = currentInput;\n      this.onSelectPage(currentInput);\n      self.forceUpdate();\n    }\n  }\n  /**\n   * @description Select page in pagging\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onSelectPage(index) {\n    let self = this;\n    self.state.searchParam.index = index;\n\n    if (index > 0) {\n      self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n    } else {\n      self.state.searchParam.offset = 0;\n    }\n\n    self.getList();\n  }\n  /**\n   * @description reload data\n   * @author long.pham 09/05/2021\n   * @param {int} index\n   */\n\n\n  onClickReload() {\n    let self = this;\n    self.getList();\n  }\n  /**\n  * Func filter table\n  * @author Long.Pham 12-05-2021\n  * @param  {Object} e\n  */\n\n\n  onSort(event, sortKey) {\n    this.state.searchParam.sort_column = sortKey;\n    this.state.searchParam.order_by = this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc' ? 'desc' : 'asc';\n    this.getList();\n  }\n  /**\n    * @description Call form search\n    * @author Long.Pham 12/05/2021\n    */\n\n\n  onSearch() {\n    let formSearch = this.state.formSearch === false ? true : false;\n    this.setState({\n      formSearch: formSearch\n    });\n  }\n\n  onResetSearch() {\n    let self = this;\n    let searchParam = this.state.searchParam;\n    searchParam.date_from = null;\n    searchParam.date_to = null;\n    searchParam.id_error_level = null;\n    searchParam.id_error_type = null;\n    searchParam.status = null;\n    searchParam.is_follow = null;\n    searchParam.index = 1;\n    searchParam.offset = 0;\n    self.paging.current = 1;\n    self.paging.currentInput = 1;\n    self.paging.total = 1;\n    self.setState({\n      searchParam: searchParam\n    }, () => {\n      self.getList();\n    });\n  }\n  /**\n   * Func search\n   * @author Long.Pham 12/05/2021\n   * @param  {Object} e\n   */\n\n\n  handleSearch() {\n    this.getList();\n  }\n\n  render() {\n    return this.jsxTemplate.call(this);\n  }\n\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Activities);\nexport default HighOrderComponentTranslated;","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/containers/views/desktop/ModulePrivate/Activities/Activities.js"],"names":["ActivitiesJsx","BaseComponent","Libs","withTranslation","Constants","MainActivitiesService","ErrorLevelService","ErrorTypeService","FileSaver","XLSX","moment","Activities","constructor","props","context","handleCheckStatusInputChange","event","index","dataStatus","state","isArrayData","is_checked","setState","handleCheckTypeInputChange","dataErrorType","handleCheckLevelInputChange","dataErrorLevel","downloadData","dataList","t","dataExport","i","len","length","timeAgo","times_ago","times_ago_unit","push","id","name","error_type_name","error_level_name","start_date_format","message","description","solutions","note","alert_state_name","fileType","fileExtension","ws","utils","json_to_sheet","skipHeader","wb","SheetNames","Sheets","excelBuffer","write","bookType","type","data","Blob","saveAs","format","handleCheckItemInputChange","item","isObjectEmpty","handleCheckAllInputChange","checked_all","handleDropdownChange","self","value","searchParam","id_error_level","id_error_type","status","onClickCloseDeleteAll","getList","deleteAll","onItemClickDeleteAll","curItem","onClickCloseDelete","delete","onClickCloseAdd","add","onItemClickDelete","onItemClick","params","screen_mode","SCREEN_MODE","EDIT","jsxTemplate","hash_id","label","limit","COMMON","LIMIT","offset","viewActivities","formSearch","paging","total","current","currentInput","inputChangedHandler","bind","inputChangedEnter","inputChangedBlue","handleInputDateChange","componentDidMount","getListErrorLevel","getListErrorType","componentWillReceiveProps","nextProps","match","target","checked","id_language","employee","instance","getDropdownList","total_row","id_employee","errorLevel","filter","errorType","parseInt","forceUpdate","isBlank","isNumber","toast","key","onSelectPage","onClickReload","onSort","sortKey","sort_column","order_by","onSearch","onResetSearch","date_from","date_to","is_follow","handleSearch","render","call","HighOrderComponentTranslated"],"mappings":"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","sourcesContent":["import ActivitiesJsx from './Activities.jsx';\nimport BaseComponent from '../../../../BaseComponent';\nimport Libs from '../../../../../utils/Libs';\nimport { withTranslation } from 'react-i18next';\nimport Constants from '../../../../../utils/Constants';\nimport MainActivitiesService from '../../../../../services/MainActivitiesService';\nimport ErrorLevelService from '../../../../../services/ErrorLevelService';\nimport ErrorTypeService from '../../../../../services/ErrorTypeService';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport moment from 'moment';\n\nclass Activities extends BaseComponent {\n\n    constructor(props, context) {\n        super(props, context);\n        this.jsxTemplate = ActivitiesJsx;\n        this.state = {\n            hash_id: !Libs.isObjectEmpty(this.params) ? this.params.id : null,\n            checked_all: 0,\n            curItem: {},\n            dataList: [],\n            dataErrorType: [],\n            dataErrorLevel: [],\n            dataStatus: [\n                {\n                    id: 1,\n                    value: 1,\n                    label: \"Opened\",\n                    is_checked: 0\n                },\n                {\n                    id: 0,\n                    value: 0,\n                    label: \"Closed\",\n                    is_checked: 0\n                }\n            ],\n            searchParam: {\n                limit: Constants.COMMON.LIMIT,\n                offset: 0,\n                index: 1,\n            },\n            viewActivities: false,\n            formSearch: false,\n            delete: false,\n            deleteAll: false,\n            add: false\n        };\n\n        this.paging = {\n            total: 0,\n            current: 1,\n            currentInput: 1\n        };\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\n        this.inputChangedEnter = this.inputChangedEnter.bind(this);\n        this.inputChangedBlue = this.inputChangedBlue.bind(this);\n        this.handleInputDateChange = this.handleInputDateChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.getListErrorLevel();\n        this.getListErrorType();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let self = this;\n        if (nextProps.match.params.id !== this.props.match.params.id) {\n            this.setState({\n                hash_id: nextProps.match.params.id\n            }, () => {\n                self.getListErrorLevel();\n                self.getListErrorType();\n            });\n        }\n    }\n\n\n    handleCheckStatusInputChange = (event, index) => {\n        var { dataStatus } = this.state;\n        if (!Libs.isArrayData(dataStatus)) return;\n        dataStatus[index].is_checked = dataStatus[index].is_checked ? 0 : 1\n\n        this.setState({\n            dataStatus: dataStatus\n        })\n    }\n\n\n    handleCheckTypeInputChange = (event, index) => {\n        var { dataErrorType } = this.state;\n        if (!Libs.isArrayData(dataErrorType)) return;\n        dataErrorType[index].is_checked = dataErrorType[index].is_checked ? 0 : 1\n\n        this.setState({\n            dataErrorType: dataErrorType\n        })\n    }\n\n    handleCheckLevelInputChange = (event, index) => {\n        var { dataErrorLevel } = this.state;\n        if (!Libs.isArrayData(dataErrorLevel)) return;\n        dataErrorLevel[index].is_checked = dataErrorLevel[index].is_checked ? 0 : 1\n\n        this.setState({\n            dataErrorLevel: dataErrorLevel\n        })\n    }\n\n    downloadData = () => {\n        var { dataList } = this.state;\n        var { t } = this.props;\n        if (!Libs.isArrayData(dataList)) return;\n\n        var dataExport = [];\n        for (var i = 0, len = dataList.length; i < len; i++) {\n            var timeAgo = dataList[i].times_ago + \" \" + t(\"common.\" + dataList[i].times_ago_unit) + (dataList[i].times_ago > 1 && \"s\");\n            dataExport.push({\n                'ID': dataList[i].id,\n                'Device Name': dataList[i].name,\n                'Type': dataList[i].error_type_name,\n                'Level': dataList[i].error_level_name,\n                'Opened': dataList[i].start_date_format,\n                'Open period': timeAgo,\n                'Message': dataList[i].message,\n                'Description': dataList[i].description,\n                'Solutions': dataList[i].solutions,\n                'Note': dataList[i].note,\n                'Review status': dataList[i].alert_state_name\n            });\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n        const ws = XLSX.utils.json_to_sheet(dataExport, { skipHeader: false });\n        const wb = {\n            SheetNames: ['Alerts'],\n            Sheets: { 'Alerts': ws }\n        };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, \"Export-alerts-\" + moment().format('YYYY-MM-DD_hh:mm:ss') + fileExtension);\n    }\n\n    handleCheckItemInputChange = (index) => {\n        var { dataList } = this.state;\n        if (!Libs.isArrayData(dataList)) return;\n        var item = dataList[index];\n        if (Libs.isObjectEmpty(item)) return;\n        dataList[index].is_checked = dataList[index].is_checked ? 0 : 1;\n        this.setState({\n            dataList: dataList\n        })\n    }\n\n    handleCheckAllInputChange = () => {\n        var { dataList, checked_all } = this.state;\n        if (!Libs.isArrayData(dataList)) return;\n        for (var i = 0, len = dataList.length; i < len; i++) {\n            dataList[i].is_checked = checked_all ? 0 : 1;\n        }\n\n        this.setState({\n            dataList: dataList,\n            checked_all: checked_all ? 0 : 1\n        })\n    }\n\n    handleDropdownChange = (item, name) => {\n        if (Libs.isObjectEmpty(item)) return;\n        var self = this, value = item.value;\n        let { searchParam } = self.state;\n        if (name === 'id_error_level') {\n            if (Libs.isObjectEmpty(item)) {\n                searchParam.id_error_level = '';\n            }\n        }\n\n        if (name === 'id_error_type') {\n            if (Libs.isObjectEmpty(item)) {\n                searchParam.id_error_type = '';\n            }\n        }\n\n        if (name === 'status') {\n            if (Libs.isObjectEmpty(item)) {\n                searchParam.status = '';\n            }\n        }\n\n        searchParam[name] = value;\n        self.setState({\n            searchParam: searchParam\n        });\n    }\n\n    /**\n     * setValue method to Input\n     * @author Long.Pham 20/05/2021\n     */\n    handleInputDateChange(event) {\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (target.type === 'checkbox') {\n            value = target.checked ? 1 : 0;\n        }\n\n        if (name) {\n            let { searchParam } = this.state;\n            searchParam[name] = value;\n            this.setState({ searchParam: searchParam });\n        }\n    }\n\n    /**\n    * ge list error state\n    * @author Long.Pham 2019-06-03\n    */\n    getListErrorType() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorTypeService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorType: data\n                });\n            } else {\n                self.setState({\n                    dataErrorType: []\n                });\n            }\n        })\n    }\n\n    /**\n   * ge list error level\n   * @author Long.Pham 2019-06-03\n   */\n    getListErrorLevel() {\n        let self = this;\n        var params = { id_language: this.employee.id_language };\n\n        ErrorLevelService.instance.getDropdownList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataErrorLevel: data\n                }, () => {\n                    self.getList();\n                });\n            } else {\n                self.setState({\n                    dataErrorLevel: []\n                });\n            }\n        })\n    }\n\n    onClickCloseDeleteAll = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            deleteAll: false\n        })\n    }\n\n    /**\n * @description Item click event delete all\n * @author Long.Pham 12-05-2021\n * @param index Order element in the list\n */\n    onItemClickDeleteAll = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            deleteAll: true\n        });\n    }\n\n\n    onClickCloseDelete = (status, data) => {\n        if (status && data) {\n            this.getList();\n        }\n        this.setState({\n            delete: false\n        })\n    }\n\n    onClickCloseAdd = (status) => {\n        if (status) {\n            this.getList();\n        }\n        this.setState({\n            add: false\n        })\n    }\n\n    /**\n  * @description Item click event delete\n  * @author Long.Pham 12-05-2021\n  * @param index Order element in the list\n  */\n    onItemClickDelete = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        this.setState({\n            curItem: item,\n            delete: true\n        });\n    }\n\n    /**\n     * get list\n     * @author Long.Pham 2019-06-03\n     */\n    getList() {\n        let self = this;\n        var { dataErrorLevel, dataErrorType, dataStatus } = this.state;\n        let params = this.state.searchParam;\n        params.id_language = this.employee.id_language;\n        params.id_employee = this.employee.id_employee;\n        params.hash_id = this.state.hash_id;\n        params.errorLevel = dataErrorLevel.filter((item) => item.is_checked == 1);\n        params.errorType = dataErrorType.filter((item) => item.is_checked == 1);\n        params.dataStatus = dataStatus.filter((item) => item.is_checked == 1);\n        params.type = 'private';\n\n        MainActivitiesService.instance.getList(params, (data, total_row) => {\n            if (Libs.isArrayData(data)) {\n                self.setState({\n                    dataList: data\n                });\n\n                var total = parseInt(total_row / self.state.searchParam.limit);\n                if (total_row % self.state.searchParam.limit > 0) {\n                    total = total + 1;\n                }\n                self.paging.total = total;\n                self.paging.current = self.state.searchParam.index;\n                self.paging.currentInput = self.state.searchParam.index;\n                self.state.total_row = total_row;\n\n            } else {\n                self.setState({\n                    dataList: [],\n                    total_row: 0\n                });\n                self.paging.total = 0;\n                self.paging.current = 1;\n                self.paging.currentInput = 1;\n            }\n            self.forceUpdate();\n        });\n    }\n\n\n    /**\n     * @description Item click event\n     * @author Long.Pham 12-05-2021\n     * @param index element in the list\n     */\n    onItemClick = (index) => {\n        if (!Libs.isArrayData(this.state.dataList)) return;\n        var item = this.state.dataList[index];\n        if (Libs.isObjectEmpty(item)) return;\n        var params = this.state.curItem;\n        params.id = item.id;\n        item.screen_mode = Constants.SCREEN_MODE.EDIT;\n        this.setState({\n            curItem: item,\n            add: true\n        })\n    }\n\n    inputChangedHandler(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        let value = target.value;\n        if (name === 'current') {\n            if (!Libs.isBlank(value)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(value)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            self.paging.currentInput = value;\n            self.forceUpdate();\n        }\n\n        if (name === 'limit') {\n            var { searchParam } = this.state;\n            searchParam.limit = value;\n            this.setState({\n                searchParam: searchParam\n            }, () => {\n                self.getList();\n            })\n        }\n    }\n\n    inputChangedEnter(event) {\n        let self = this;\n        if (event.key === 'Enter') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n    inputChangedBlue(event) {\n        let self = this;\n        let target = event.target;\n        let name = target.name;\n        if (name === 'current') {\n            var currentInput = this.paging.currentInput;\n            if (!Libs.isBlank(currentInput)) {\n                var { t } = this.props;\n                if (!Libs.isNumber(currentInput)) {\n                    self.toast(t('common.page_is_number'), \"error\");\n                    return;\n                }\n            }\n\n            if (Libs.isBlank(currentInput) && !Libs.isNumber(currentInput)) return;\n            if (parseInt(currentInput) > this.paging.total) {\n                currentInput = self.paging.total;\n            }\n\n            if (currentInput <= 0) {\n                currentInput = 1;\n            }\n\n            self.paging.current = currentInput;\n            self.paging.currentInput = currentInput;\n            this.onSelectPage(currentInput);\n            self.forceUpdate();\n        }\n    }\n\n\n    /**\n     * @description Select page in pagging\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onSelectPage(index) {\n        let self = this;\n        self.state.searchParam.index = index;\n\n        if (index > 0) {\n            self.state.searchParam.offset = (index - 1) * self.state.searchParam.limit;\n        } else {\n            self.state.searchParam.offset = 0;\n        }\n        self.getList();\n    }\n\n\n    /**\n     * @description reload data\n     * @author long.pham 09/05/2021\n     * @param {int} index\n     */\n    onClickReload() {\n        let self = this;\n        self.getList();\n    }\n\n\n    /**\n    * Func filter table\n    * @author Long.Pham 12-05-2021\n    * @param  {Object} e\n    */\n\n    onSort(event, sortKey) {\n        this.state.searchParam.sort_column = sortKey;\n        this.state.searchParam.order_by = (this.state.searchParam.order_by === '' || this.state.searchParam.order_by === 'asc') ? 'desc' : 'asc';\n        this.getList();\n    }\n\n    /**\n      * @description Call form search\n      * @author Long.Pham 12/05/2021\n      */\n    onSearch() {\n        let formSearch = (this.state.formSearch === false) ? true : false;\n        this.setState({\n            formSearch: formSearch\n        });\n    }\n\n    onResetSearch() {\n        let self = this;\n        let searchParam = this.state.searchParam;\n        searchParam.date_from = null;\n        searchParam.date_to = null;\n        searchParam.id_error_level = null;\n        searchParam.id_error_type = null;\n        searchParam.status = null;\n        searchParam.is_follow = null;\n        searchParam.index = 1;\n        searchParam.offset = 0;\n        self.paging.current = 1;\n        self.paging.currentInput = 1;\n        self.paging.total = 1;\n        self.setState({\n            searchParam: searchParam\n        }, () => {\n            self.getList();\n        });\n    }\n\n    /**\n     * Func search\n     * @author Long.Pham 12/05/2021\n     * @param  {Object} e\n     */\n    handleSearch() {\n        this.getList();\n    }\n\n    render() {\n        return this.jsxTemplate.call(this)\n    }\n}\n\nconst HighOrderComponentTranslated = withTranslation('common')(Activities)\nexport default HighOrderComponentTranslated;"]},"metadata":{},"sourceType":"module"}