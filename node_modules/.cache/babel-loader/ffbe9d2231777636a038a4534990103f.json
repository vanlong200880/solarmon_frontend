{"ast":null,"code":"import Libs from '../utils/Libs';\nimport CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\nexport default class ClientNotifyService {\n  static get instance() {\n    if (!this._instance) {\n      this._instance = new ClientNotifyService();\n    }\n\n    return this._instance;\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getNotifySize(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.CLIENT_NOTIFY.NOTIFY_SIZE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {Entity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getList(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_NOTIFY.LIST, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * API call for delete\n   * @author long.pham\n   * @param @param {Entity} objE\n   * @param {function(status,msg)} callBack \n   * @param  {boolean} isShowProgress\n   */\n\n\n  delete(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_NOTIFY.DELETE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n   * API call for delete\n   * @author long.pham\n   * @param @param {Entity} objE\n   * @param {function(status,msg)} callBack \n   * @param  {boolean} isShowProgress\n   */\n\n\n  closeAlert(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_NOTIFY.CLOSE_ALL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n  * API call for save data\n  * @author long.pham 2018-07-27\n  * @param {Function} callBack\n  * @param {boolean} isShowProgress\n  */\n\n\n  save(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.CLIENT_NOTIFY.SAVE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/services/ClientNotifyService.js"],"names":["Libs","CMSHttp","Constants","ClientNotifyService","instance","_instance","getNotifySize","objE","callBack","http","post","URL","CLIENT_NOTIFY","NOTIFY_SIZE","status","rs","data","total_row","error","msg","getList","LIST","Array","isArray","delete","DELETE","mess","isObjectEmpty","closeAlert","CLOSE_ALL","save","SAVE"],"mappings":"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","sourcesContent":["import Libs from '../utils/Libs';\nimport CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\n\nexport default class ClientNotifyService {\n    static _instance;\n    static get instance() {\n        if (!this._instance) {\n            this._instance = new ClientNotifyService();\n        }\n        return this._instance;\n    }\n\n    \n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getNotifySize(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.CLIENT_NOTIFY.NOTIFY_SIZE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {Entity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n    getList(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_NOTIFY.LIST, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n     /**\n      * API call for delete\n      * @author long.pham\n      * @param @param {Entity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n      delete(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_NOTIFY.DELETE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n    \n     /**\n      * API call for delete\n      * @author long.pham\n      * @param @param {Entity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n      closeAlert(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_NOTIFY.CLOSE_ALL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n     /**\n     * API call for save data\n     * @author long.pham 2018-07-27\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n      save(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.CLIENT_NOTIFY.SAVE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}