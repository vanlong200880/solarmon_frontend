{"ast":null,"code":"import Libs from '../utils/Libs';\nimport CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\n/*\n * EmployeeService.js\n * Lớp service, xử lý gọi API cho danh mục người dùng\n * \n * @author Long.Pham 13/06/2021\n */\n\nexport default class EmployeeService {\n  static get instance() {\n    if (!this._instance) {\n      this._instance = new EmployeeService();\n    }\n\n    return this._instance;\n  }\n  /**\n   * API login\n   * @author ong.Pham 13/06/2021\n   * @param {EmployeeEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getLogin(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.LOGIN, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //error http => lib http  proccess\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data, rs.status, rs.mess);\n        }\n      });\n    } catch (error) {\n      callBack({});\n    }\n  }\n  /**\n   * Gọi API lấy thông tin chi tiết người dùng\n   * @author thanh.bay\n   * @param {UserEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getForgotPassword(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.FORGOT_PASSWORD, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack([]);\n    }\n  }\n  /**\n   * Gọi API lấy thông tin chi tiết người dùng\n   * @author thanh.bay\n   * @param {UserEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getResetPassword(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.RESET_PASSWORD, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data, rs.status, rs.mess);\n        }\n      });\n    } catch (error) {\n      callBack([]);\n    }\n  }\n  /**\n   * Gọi API lấy thông tin chi tiết người dùng\n   * @author Long.Pham\n   * @param {UserEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getDetailEmployee(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.EMPLOYEE.DETAIL_UPDATE_PROFILE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(rs.status, rs.mess, data);\n        }\n      });\n    } catch (error) {\n      callBack([]);\n    }\n  }\n  /**\n   * Gọi API lưu hoặc thêm người dùng\n   * @author thanh.bay 2018-09-18 09:51\n   * @param {UserEntity} objE\n   * @param {function(status, data, msg)} callBack\n   * @param  {boolean} isShowProgress\n   */\n\n\n  saveUpdateProfile(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.SAVE_UPDATE_PROFILE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      var data = null;\n      var msg = error;\n      callBack(false, data, msg);\n    }\n  }\n  /**\n   * API call for change password\n   * @author long.pham 2019-07-27\n   * @param {StaffEntity} objE\n   * @param {Function} callBack\n   * @param {boolean} isShowProgress\n   */\n\n\n  employeeChangePassword(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.EMPLOYEE.CHANGE_PASSWORD, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {RoleEntity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getList(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.LIST, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {RoleEntity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListProjectConfigMail(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.LIST_CONFIG_MAIL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * @author long.pham 2018-07-27\n   * @param  {RoleEntity} objE\n   * @param  {function(data,total_row,msg)} callBack\n   * @param  {Boolean} isShowProgress\n   */\n\n\n  getListAll(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.LIST_ALL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = [];\n          var total_row = 0;\n\n          if (rs.status && Array.isArray(rs.data)) {\n            data = rs.data;\n            total_row = rs.total_row;\n          }\n\n          callBack(data, total_row, \"\");\n        }\n      });\n    } catch (error) {\n      var msg = error;\n      callBack(false, 0, msg);\n    }\n  }\n  /**\n   * API call for save data\n   * @author long.pham 2018-07-27\n   * @param {Function} callBack\n   * @param {boolean} isShowProgress\n   */\n\n\n  save(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.SAVE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, null, error);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  updateStatus(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.EMPLOYEE.UPDATE_STATUS, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n    * API call for update Role status\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  updateStatusMailConfig(objE, callBack) {\n    try {\n      var http = new CMSHttp(false);\n      http.post(Constants.URL.EMPLOYEE.UPDATE_STATUS_MAIL_CONFIG, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var msg = rs.mess;\n          callBack(rs.status, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n    * API call for delete\n    * @author long.pham\n    * @param @param {RoleEntity} objE\n    * @param {function(status,msg)} callBack \n    * @param  {boolean} isShowProgress\n    */\n\n\n  delete(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.DELETE, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            return;\n          }\n\n          var data = null;\n          var msg = rs.mess;\n\n          if (!Libs.isObjectEmpty(rs.data)) {\n            data = rs.data;\n          }\n\n          callBack(rs.status, data, msg);\n        }\n      });\n    } catch (error) {\n      callBack(false, error);\n    }\n  }\n  /**\n   * Gọi API lấy thông tin chi tiết người dùng\n   * @author Long.Pham\n   * @param {UserEntity} objE \n   * @param {function(data)} callBack\n   * @param {boolean} isShowProgress \n   */\n\n\n  getDetail(objE, callBack) {\n    try {\n      var http = new CMSHttp(true);\n      http.post(Constants.URL.EMPLOYEE.DETAIL, objE, function (status, rs) {\n        if (typeof callBack === 'function') {\n          if (!status || !rs) {\n            //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n            return;\n          }\n\n          var data = {};\n\n          if (rs.status && typeof rs.data === 'object') {\n            data = rs.data;\n          }\n\n          callBack(data);\n        }\n      });\n    } catch (error) {\n      callBack([]);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/services/EmployeeService.js"],"names":["Libs","CMSHttp","Constants","EmployeeService","instance","_instance","getLogin","objE","callBack","http","post","URL","EMPLOYEE","LOGIN","status","rs","data","mess","error","getForgotPassword","FORGOT_PASSWORD","getResetPassword","RESET_PASSWORD","getDetailEmployee","DETAIL_UPDATE_PROFILE","saveUpdateProfile","SAVE_UPDATE_PROFILE","msg","isObjectEmpty","employeeChangePassword","CHANGE_PASSWORD","getList","LIST","total_row","Array","isArray","getListProjectConfigMail","LIST_CONFIG_MAIL","getListAll","LIST_ALL","save","SAVE","updateStatus","UPDATE_STATUS","updateStatusMailConfig","UPDATE_STATUS_MAIL_CONFIG","delete","DELETE","getDetail","DETAIL"],"mappings":"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","sourcesContent":["import Libs from '../utils/Libs';\nimport CMSHttp from '../utils/CMSHttp';\nimport Constants from '../utils/Constants';\n\n/*\n * EmployeeService.js\n * Lớp service, xử lý gọi API cho danh mục người dùng\n * \n * @author Long.Pham 13/06/2021\n */\n\nexport default class EmployeeService {\n    static _instance;\n    static get instance() {\n        if (!this._instance) {\n            this._instance = new EmployeeService();\n        }\n        return this._instance;\n    }\n\n    /**\n     * API login\n     * @author ong.Pham 13/06/2021\n     * @param {EmployeeEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n\n    getLogin(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.LOGIN, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //error http => lib http  proccess\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data, rs.status, rs.mess);\n                }\n            })\n        } catch (error) {\n            callBack({});\n        }\n    }\n\n\n    \n    /**\n     * Gọi API lấy thông tin chi tiết người dùng\n     * @author thanh.bay\n     * @param {UserEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n    getForgotPassword(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.FORGOT_PASSWORD, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack([]);\n        }\n    }\n\n\n    /**\n     * Gọi API lấy thông tin chi tiết người dùng\n     * @author thanh.bay\n     * @param {UserEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n     getResetPassword(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.RESET_PASSWORD, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data, rs.status, rs.mess);\n                }\n            })\n        } catch (error) {\n            callBack([]);\n        }\n    }\n\n    /**\n     * Gọi API lấy thông tin chi tiết người dùng\n     * @author Long.Pham\n     * @param {UserEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n    getDetailEmployee(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.EMPLOYEE.DETAIL_UPDATE_PROFILE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, rs.mess, data);\n                }\n            })\n        } catch (error) {\n            callBack([]);\n        }\n    }\n\n\n    /**\n     * Gọi API lưu hoặc thêm người dùng\n     * @author thanh.bay 2018-09-18 09:51\n     * @param {UserEntity} objE\n     * @param {function(status, data, msg)} callBack\n     * @param  {boolean} isShowProgress\n     */\n    saveUpdateProfile(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.SAVE_UPDATE_PROFILE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            var data = null;\n            var msg = error;\n            callBack(false, data, msg);\n        }\n    }\n\n\n    /**\n     * API call for change password\n     * @author long.pham 2019-07-27\n     * @param {StaffEntity} objE\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n     employeeChangePassword(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.EMPLOYEE.CHANGE_PASSWORD, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {RoleEntity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getList(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.LIST, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {RoleEntity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListProjectConfigMail(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.LIST_CONFIG_MAIL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n    /**\n     * @author long.pham 2018-07-27\n     * @param  {RoleEntity} objE\n     * @param  {function(data,total_row,msg)} callBack\n     * @param  {Boolean} isShowProgress\n     */\n     getListAll(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.LIST_ALL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = [];\n                    var total_row = 0;\n                    if (rs.status && Array.isArray(rs.data)) {\n                        data = rs.data;\n                        total_row = rs.total_row;\n                    }\n                    callBack(data, total_row, \"\");\n                }\n            });\n        } catch (error) {\n            var msg = error;\n            callBack(false, 0, msg);\n        }\n    }\n\n\n\n    /**\n     * API call for save data\n     * @author long.pham 2018-07-27\n     * @param {Function} callBack\n     * @param {boolean} isShowProgress\n     */\n     save(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.SAVE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, null, error);\n        }\n    }\n\n\n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     updateStatus(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.EMPLOYEE.UPDATE_STATUS, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    /**\n      * API call for update Role status\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     updateStatusMailConfig(objE, callBack) {\n        try {\n            var http = new CMSHttp(false);\n            http.post(Constants.URL.EMPLOYEE.UPDATE_STATUS_MAIL_CONFIG, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var msg = rs.mess;\n                    callBack(rs.status, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n    /**\n      * API call for delete\n      * @author long.pham\n      * @param @param {RoleEntity} objE\n      * @param {function(status,msg)} callBack \n      * @param  {boolean} isShowProgress\n      */\n     delete(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.DELETE, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        return;\n                    }\n                    var data = null;\n                    var msg = rs.mess;\n                    if (!Libs.isObjectEmpty(rs.data)) {\n                        data = rs.data;\n                    }\n                    callBack(rs.status, data, msg);\n                }\n            })\n        } catch (error) {\n            callBack(false, error);\n        }\n    }\n\n\n\n    /**\n     * Gọi API lấy thông tin chi tiết người dùng\n     * @author Long.Pham\n     * @param {UserEntity} objE \n     * @param {function(data)} callBack\n     * @param {boolean} isShowProgress \n     */\n     getDetail(objE, callBack) {\n        try {\n            var http = new CMSHttp(true);\n            http.post(Constants.URL.EMPLOYEE.DETAIL, objE, function (status, rs) {\n                if (typeof callBack === 'function') {\n                    if (!status || !rs) {\n                        //lỗi do http nên không làm gì vì đã có http thư viện xử lý\n                        return;\n                    }\n                    var data = {};\n                    if (rs.status && typeof rs.data === 'object') {\n                        data = rs.data;\n                    }\n                    callBack(data);\n                }\n            })\n        } catch (error) {\n            callBack([]);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}