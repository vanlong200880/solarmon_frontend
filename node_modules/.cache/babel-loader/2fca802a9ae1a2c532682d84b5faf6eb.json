{"ast":null,"code":"/**\n * 数据遍历\n * @author ydr.me\n * 2014-09-14 17:26\n */var typeis=require('./typeis.js');var udf;var canListTypeArr='array object nodelist htmlcollection arguments namednodemap'.split(' ');var REG_BEGIN_0=/^0+/;var w=global;/**\n * 判断对象是否有自己的静态属性\n * @param obj\n * @param key\n * @returns {boolean}\n */exports.hasStatic=function(obj,key){try{return Object.prototype.hasOwnProperty.call(obj,key);}catch(err){return false;}};/**\n * 遍历元素\n * @param {Array/Object} list  数组、可枚举对象\n * @param {Function} callback  回调，返回false时停止遍历\n * @param {Boolean} [reverse=false] 数组倒序\n *\n * @example\n * // 与 jQuery.each 一样\n * // 返回 false 时将退出当前遍历\n * data.each(list, function(key, val){});\n */exports.each=function(list,callback,reverse){var i;var j;// 数组 或 类似数组\nif(list&&typeis.number(list.length)){if(reverse){for(i=list.length-1,j=0;i>=0;i--){if(callback.call(w,i,list[i])===false){break;}}}else{for(i=0,j=list.length;i<j;i++){if(callback.call(w,i,list[i])===false){break;}}}}// 纯对象\nelse if(list!==null&&list!==udf){for(i in list){if(exports.hasStatic(list,i)){if(callback.call(w,i,list[i])===false){break;}}}}};/**\n * 重复运行\n * @param count {Number} 重复次数\n * @param fn {Function} 重复方法\n */exports.repeat=function(count,fn){var i=-1;while(++i<count){if(fn(i,count)===false){break;}}};/**\n * 扩展静态对象\n * @param {Boolean|Object} [isExtendDeep] 是否深度扩展，可省略，默认false\n * @param {Object}  [source] 源对象\n * @param {...Object}  [target] 目标对象，可以是多个\n * @returns {*}\n *\n * @example\n * // 使用方法与 jQuery.extend 一样\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => true\n *\n * // 如果不想污染原始对象，可以传递一个空对象作为容器\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, {}, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => fale\n */exports.extend=function(isExtendDeep,source,target){var args=arguments;var firstArgIsBoolean=typeof args[0]==='boolean';var current=firstArgIsBoolean?1:0;var length=args.length;var i;var obj;var sourceType;var objType;isExtendDeep=firstArgIsBoolean&&args[0]===true;source=args[current++];for(;current<length;current++){obj=args[current];for(i in obj){if(exports.hasStatic(obj,i)&&obj[i]!==undefined){sourceType=typeis(source[i]);objType=typeis(obj[i]);if(objType==='object'&&isExtendDeep){source[i]=sourceType!==objType?{}:source[i];exports.extend.call(this,isExtendDeep,source[i],obj[i]);}else if(objType==='array'&&isExtendDeep){source[i]=sourceType!==objType?[]:source[i];exports.extend.call(this,isExtendDeep,source[i],obj[i]);}else{source[i]=obj[i];}}}}return source;};/**\n * 萃取\n * @param data {Object} 传递的数据\n * @param keys {Array} 摘取的键数组\n * @param [filter] {Function} 过滤方法，默认取不为 undefined 键值\n * @returns {Object}\n */exports.select=function(data,keys,filter){var data2={};data=data||{};filter=filter||function(val){return val!==udf;};keys.forEach(function(key){if(filter(data[key])){data2[key]=data[key];}});return data2;};/**\n * 转换对象为一个纯数组，只要对象有length属性即可\n * @param {Object} [obj] 对象\n * @param {Boolean} [isConvertWhole] 是否转换整个对象为数组中的第0个元素，当该对象无length属性时，默认false\n * @returns {Array}\n *\n * @example\n * var o = {0:\"foo\", 1:\"bar\", length: 2}\n * data.toArray(o);\n * // => [\"foo\", \"bar\"]\n *\n * var a1 = [1, 2, 3];\n * // 转换后的数组是之前的副本\n * var a2 = data.toArray(a1);\n * // => [1, 2, 3]\n * a2 === a1;\n * // => false\n */exports.toArray=function(obj,isConvertWhole){var ret=[];var i=0;var j;var objType=typeis(obj);if(canListTypeArr.indexOf(objType)>-1&&typeis(obj.length)==='number'&&obj.length>=0){for(j=obj.length;i<j;i++){ret.push(obj[i]);}}else if(obj&&isConvertWhole){ret.push(obj);}return ret;};/**\n * 对象1级比较，找出相同和不同的键\n * @param obj1 {Object|Array}\n * @param obj2 {Object|Array}\n * @returns {Object}\n *\n * @example\n * data.compare({a:1,b:2,c:3}, {a:1,d:4});\n * // =>\n * // {\n     * //    same: [\"a\"],\n     * //    only: [\n     * //       [\"b\", \"c\"],\n     * //       [\"d\"]\n     * //    ],\n     * //    different: [\"b\", \"c\", \"d\"]\n     * // }\n */exports.compare=function(obj1,obj2){var obj1Type=typeis(obj1);var obj2Type=typeis(obj2);var obj1Only=[];var obj2Only=[];var same=[];// 类型不同\nif(obj1Type!==obj2Type){return null;}// 对象\nif(obj1Type==='object'||obj1Type==='array'){exports.each(obj1,function(key,val){if(obj2[key]!==val){obj1Only.push(key);}else{same.push(key);}});exports.each(obj2,function(key,val){if(obj1[key]!==val){obj2Only.push(key);}});return{same:same,only:[obj1Only,obj2Only],different:obj1Only.concat(obj2Only)};}else{return null;}};/**\n * 比较两个长整型数值\n * @param long1 {String} 长整型数值字符串1\n * @param long2 {String} 长整型数值字符串2\n * @param [operator=\">\"] {String} 比较操作符，默认比较 long1 > long2\n * @returns {*}\n */exports.than=function(long1,long2,operator){operator=operator||'>';long1=String(long1).replace(REG_BEGIN_0,'');long2=String(long2).replace(REG_BEGIN_0,'');// 1. 比较长度\nif(long1.length>long2.length){return operator==='>';}else if(long1.length<long2.length){return operator==='<';}var long1List=exports.humanize(long1,',',15).split(',');var long2List=exports.humanize(long2,',',15).split(',');//[\n// '123456',\n// '789012345678901',\n// '234567890123456',\n// '789012345678901',\n// '234567890123457'\n// ]\n// 2. 比较数组长度\nif(long1List.length>long2List.length){return operator==='>';}else if(long1List.length<long2List.length){return operator==='<';}// 3. 遍历比较\nvar ret=false;exports.each(long1List,function(index,number1){var number2=long2List[index];if(number1>number2){ret=operator==='>';return false;}else if(number1<number2){ret=operator==='<';return false;}});return ret;};/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\nvar qs=require('querystring');var encryption=require('../../utils/Crypto.js');/**\n * 获取 gravatar\n * @param email {String} 邮箱\n * @param [options] {Object} 配置\n * @param [options.origin=\"http://gravatar.duoshuo.com/avatar/\"] {String} 服务器\n * @param [options.size=100] {Number} 尺寸\n * @param [options.default=\"retro\"] {Number} 默认头像\n * @param [options.forcedefault=false] {*} 是否忽略默认头像\n * @param [options.rating=null] {*} 评级\n * @returns {string}\n */exports.gravatar=function(email,options){options=options||{};email=email.toLowerCase();if(!options.origin){options.origin='http://cn.gravatar.com/avatar/';}options.origin+=encryption.md5(email)+'?';if(!options.size){options.size=100;}if(!options.default){//options.default = 'http://s.ydr.me/p/i/avatar.png';\noptions.default='retro';}if(options.forcedefault){options.forcedefault='y';}else{options.forcedefault=false;}var query={s:options.size};if(options.default){query.d=options.default;}if(options.forcedefault){query.f=options.forcedefault;}if(options.rating){query.r=options.rating;}return options.origin+qs.stringify(query);};","map":{"version":3,"sources":["/Volumes/Data/sources/solars/frontend/src/validator/libs/dato.js"],"names":["typeis","require","udf","canListTypeArr","split","REG_BEGIN_0","w","global","exports","hasStatic","obj","key","Object","prototype","hasOwnProperty","call","err","each","list","callback","reverse","i","j","number","length","repeat","count","fn","extend","isExtendDeep","source","target","args","arguments","firstArgIsBoolean","current","sourceType","objType","undefined","select","data","keys","filter","data2","val","forEach","toArray","isConvertWhole","ret","indexOf","push","compare","obj1","obj2","obj1Type","obj2Type","obj1Only","obj2Only","same","only","different","concat","than","long1","long2","operator","String","replace","long1List","humanize","long2List","index","number1","number2","qs","encryption","gravatar","email","options","toLowerCase","origin","md5","size","default","forcedefault","query","s","d","f","rating","r","stringify"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAGA,GAAIA,CAAAA,MAAM,CAAGC,OAAO,CAAC,aAAD,CAApB,CACA,GAAIC,CAAAA,GAAJ,CACA,GAAIC,CAAAA,cAAc,CAAG,8DAA8DC,KAA9D,CAAoE,GAApE,CAArB,CACA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,GAAIC,CAAAA,CAAC,CAAGC,MAAR,CAGA;AACA;AACA;AACA;AACA;AACA,GACAC,OAAO,CAACC,SAAR,CAAoB,SAAUC,GAAV,CAAeC,GAAf,CAAoB,CACpC,GAAI,CACA,MAAOC,CAAAA,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,CAA0CC,GAA1C,CAAP,CACH,CAAC,MAAOK,GAAP,CAAY,CACV,MAAO,MAAP,CACH,CACJ,CAND,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAR,OAAO,CAACS,IAAR,CAAe,SAAUC,IAAV,CAAgBC,QAAhB,CAA0BC,OAA1B,CAAmC,CAC9C,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,CAAJ,CAEA;AACA,GAAIJ,IAAI,EAAIlB,MAAM,CAACuB,MAAP,CAAcL,IAAI,CAACM,MAAnB,CAAZ,CAAwC,CACpC,GAAIJ,OAAJ,CAAa,CACT,IAAKC,CAAC,CAAGH,IAAI,CAACM,MAAL,CAAc,CAAlB,CAAqBF,CAAC,CAAG,CAA9B,CAAiCD,CAAC,EAAI,CAAtC,CAAyCA,CAAC,EAA1C,CAA8C,CAC1C,GAAIF,QAAQ,CAACJ,IAAT,CAAcT,CAAd,CAAiBe,CAAjB,CAAoBH,IAAI,CAACG,CAAD,CAAxB,IAAiC,KAArC,CAA4C,CACxC,MACH,CACJ,CACJ,CAND,IAMO,CACH,IAAKA,CAAC,CAAG,CAAJ,CAAOC,CAAC,CAAGJ,IAAI,CAACM,MAArB,CAA6BH,CAAC,CAAGC,CAAjC,CAAoCD,CAAC,EAArC,CAAyC,CACrC,GAAIF,QAAQ,CAACJ,IAAT,CAAcT,CAAd,CAAiBe,CAAjB,CAAoBH,IAAI,CAACG,CAAD,CAAxB,IAAiC,KAArC,CAA4C,CACxC,MACH,CACJ,CACJ,CACJ,CACD;AAfA,IAgBK,IAAIH,IAAI,GAAK,IAAT,EAAiBA,IAAI,GAAKhB,GAA9B,CAAmC,CACpC,IAAKmB,CAAL,GAAUH,CAAAA,IAAV,CAAgB,CACZ,GAAIV,OAAO,CAACC,SAAR,CAAkBS,IAAlB,CAAwBG,CAAxB,CAAJ,CAAgC,CAC5B,GAAIF,QAAQ,CAACJ,IAAT,CAAcT,CAAd,CAAiBe,CAAjB,CAAoBH,IAAI,CAACG,CAAD,CAAxB,IAAiC,KAArC,CAA4C,CACxC,MACH,CACJ,CACJ,CACJ,CACJ,CA9BD,CAiCA;AACA;AACA;AACA;AACA,GACAb,OAAO,CAACiB,MAAR,CAAiB,SAAUC,KAAV,CAAiBC,EAAjB,CAAqB,CAClC,GAAIN,CAAAA,CAAC,CAAG,CAAC,CAAT,CAEA,MAAO,EAAEA,CAAF,CAAMK,KAAb,CAAoB,CAChB,GAAIC,EAAE,CAACN,CAAD,CAAIK,KAAJ,CAAF,GAAiB,KAArB,CAA4B,CACxB,MACH,CACJ,CACJ,CARD,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAlB,OAAO,CAACoB,MAAR,CAAiB,SAAUC,YAAV,CAAwBC,MAAxB,CAAgCC,MAAhC,CAAwC,CACrD,GAAIC,CAAAA,IAAI,CAAGC,SAAX,CACA,GAAIC,CAAAA,iBAAiB,CAAG,MAAOF,CAAAA,IAAI,CAAC,CAAD,CAAX,GAAoB,SAA5C,CACA,GAAIG,CAAAA,OAAO,CAAGD,iBAAiB,CAAG,CAAH,CAAO,CAAtC,CACA,GAAIV,CAAAA,MAAM,CAAGQ,IAAI,CAACR,MAAlB,CACA,GAAIH,CAAAA,CAAJ,CACA,GAAIX,CAAAA,GAAJ,CACA,GAAI0B,CAAAA,UAAJ,CACA,GAAIC,CAAAA,OAAJ,CAEAR,YAAY,CAAGK,iBAAiB,EAAIF,IAAI,CAAC,CAAD,CAAJ,GAAY,IAAhD,CACAF,MAAM,CAAGE,IAAI,CAACG,OAAO,EAAR,CAAb,CAEA,KAAOA,OAAO,CAAGX,MAAjB,CAAyBW,OAAO,EAAhC,CAAoC,CAChCzB,GAAG,CAAGsB,IAAI,CAACG,OAAD,CAAV,CACA,IAAKd,CAAL,GAAUX,CAAAA,GAAV,CAAe,CACX,GAAIF,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAuBW,CAAvB,GAA6BX,GAAG,CAACW,CAAD,CAAH,GAAWiB,SAA5C,CAAuD,CACnDF,UAAU,CAAGpC,MAAM,CAAC8B,MAAM,CAACT,CAAD,CAAP,CAAnB,CACAgB,OAAO,CAAGrC,MAAM,CAACU,GAAG,CAACW,CAAD,CAAJ,CAAhB,CAEA,GAAIgB,OAAO,GAAK,QAAZ,EAAwBR,YAA5B,CAA0C,CACtCC,MAAM,CAACT,CAAD,CAAN,CAAYe,UAAU,GAAKC,OAAf,CAAyB,EAAzB,CAA8BP,MAAM,CAACT,CAAD,CAAhD,CACAb,OAAO,CAACoB,MAAR,CAAeb,IAAf,CAAoB,IAApB,CAA0Bc,YAA1B,CAAwCC,MAAM,CAACT,CAAD,CAA9C,CAAmDX,GAAG,CAACW,CAAD,CAAtD,EACH,CAHD,IAGO,IAAIgB,OAAO,GAAK,OAAZ,EAAuBR,YAA3B,CAAyC,CAC5CC,MAAM,CAACT,CAAD,CAAN,CAAYe,UAAU,GAAKC,OAAf,CAAyB,EAAzB,CAA8BP,MAAM,CAACT,CAAD,CAAhD,CACAb,OAAO,CAACoB,MAAR,CAAeb,IAAf,CAAoB,IAApB,CAA0Bc,YAA1B,CAAwCC,MAAM,CAACT,CAAD,CAA9C,CAAmDX,GAAG,CAACW,CAAD,CAAtD,EACH,CAHM,IAGA,CACHS,MAAM,CAACT,CAAD,CAAN,CAAYX,GAAG,CAACW,CAAD,CAAf,CACH,CACJ,CACJ,CACJ,CAED,MAAOS,CAAAA,MAAP,CACH,CAlCD,CAqCA;AACA;AACA;AACA;AACA;AACA;AACA,GACAtB,OAAO,CAAC+B,MAAR,CAAiB,SAAUC,IAAV,CAAgBC,IAAhB,CAAsBC,MAAtB,CAA8B,CAC3C,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEAH,IAAI,CAAGA,IAAI,EAAI,EAAf,CAEAE,MAAM,CAAGA,MAAM,EAAI,SAAUE,GAAV,CAAe,CAC1B,MAAOA,CAAAA,GAAG,GAAK1C,GAAf,CACH,CAFL,CAIAuC,IAAI,CAACI,OAAL,CAAa,SAAUlC,GAAV,CAAe,CACxB,GAAI+B,MAAM,CAACF,IAAI,CAAC7B,GAAD,CAAL,CAAV,CAAuB,CACnBgC,KAAK,CAAChC,GAAD,CAAL,CAAa6B,IAAI,CAAC7B,GAAD,CAAjB,CACH,CACJ,CAJD,EAMA,MAAOgC,CAAAA,KAAP,CACH,CAhBD,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAnC,OAAO,CAACsC,OAAR,CAAkB,SAAUpC,GAAV,CAAeqC,cAAf,CAA+B,CAC7C,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAI3B,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,CAAJ,CACA,GAAIe,CAAAA,OAAO,CAAGrC,MAAM,CAACU,GAAD,CAApB,CAEA,GAAIP,cAAc,CAAC8C,OAAf,CAAuBZ,OAAvB,EAAkC,CAAC,CAAnC,EAAwCrC,MAAM,CAACU,GAAG,CAACc,MAAL,CAAN,GAAuB,QAA/D,EAA2Ed,GAAG,CAACc,MAAJ,EAAc,CAA7F,CAAgG,CAC5F,IAAKF,CAAC,CAAGZ,GAAG,CAACc,MAAb,CAAqBH,CAAC,CAAGC,CAAzB,CAA4BD,CAAC,EAA7B,CAAiC,CAC7B2B,GAAG,CAACE,IAAJ,CAASxC,GAAG,CAACW,CAAD,CAAZ,EACH,CACJ,CAJD,IAIO,IAAIX,GAAG,EAAIqC,cAAX,CAA2B,CAC9BC,GAAG,CAACE,IAAJ,CAASxC,GAAT,EACH,CAED,MAAOsC,CAAAA,GAAP,CACH,CAfD,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAxC,OAAO,CAAC2C,OAAR,CAAkB,SAAUC,IAAV,CAAgBC,IAAhB,CAAsB,CACpC,GAAIC,CAAAA,QAAQ,CAAGtD,MAAM,CAACoD,IAAD,CAArB,CACA,GAAIG,CAAAA,QAAQ,CAAGvD,MAAM,CAACqD,IAAD,CAArB,CACA,GAAIG,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,IAAI,CAAG,EAAX,CAEA;AACA,GAAIJ,QAAQ,GAAKC,QAAjB,CAA2B,CACvB,MAAO,KAAP,CACH,CAED;AACA,GAAID,QAAQ,GAAK,QAAb,EAAyBA,QAAQ,GAAK,OAA1C,CAAmD,CAC/C9C,OAAO,CAACS,IAAR,CAAamC,IAAb,CAAmB,SAAUzC,GAAV,CAAeiC,GAAf,CAAoB,CACnC,GAAIS,IAAI,CAAC1C,GAAD,CAAJ,GAAciC,GAAlB,CAAuB,CACnBY,QAAQ,CAACN,IAAT,CAAcvC,GAAd,EACH,CAFD,IAEO,CACH+C,IAAI,CAACR,IAAL,CAAUvC,GAAV,EACH,CACJ,CAND,EAQAH,OAAO,CAACS,IAAR,CAAaoC,IAAb,CAAmB,SAAU1C,GAAV,CAAeiC,GAAf,CAAoB,CACnC,GAAIQ,IAAI,CAACzC,GAAD,CAAJ,GAAciC,GAAlB,CAAuB,CACnBa,QAAQ,CAACP,IAAT,CAAcvC,GAAd,EACH,CACJ,CAJD,EAMA,MAAO,CACH+C,IAAI,CAAEA,IADH,CAEHC,IAAI,CAAE,CACFH,QADE,CAEFC,QAFE,CAFH,CAMHG,SAAS,CAAEJ,QAAQ,CAACK,MAAT,CAAgBJ,QAAhB,CANR,CAAP,CAQH,CAvBD,IAuBO,CACH,MAAO,KAAP,CACH,CACJ,CAvCD,CA0CA;AACA;AACA;AACA;AACA;AACA;AACA,GACAjD,OAAO,CAACsD,IAAR,CAAe,SAAUC,KAAV,CAAiBC,KAAjB,CAAwBC,QAAxB,CAAkC,CAC7CA,QAAQ,CAAGA,QAAQ,EAAI,GAAvB,CACAF,KAAK,CAAGG,MAAM,CAACH,KAAD,CAAN,CAAcI,OAAd,CAAsB9D,WAAtB,CAAmC,EAAnC,CAAR,CACA2D,KAAK,CAAGE,MAAM,CAACF,KAAD,CAAN,CAAcG,OAAd,CAAsB9D,WAAtB,CAAmC,EAAnC,CAAR,CAEA;AACA,GAAI0D,KAAK,CAACvC,MAAN,CAAewC,KAAK,CAACxC,MAAzB,CAAiC,CAC7B,MAAOyC,CAAAA,QAAQ,GAAK,GAApB,CACH,CAFD,IAEO,IAAIF,KAAK,CAACvC,MAAN,CAAewC,KAAK,CAACxC,MAAzB,CAAiC,CACpC,MAAOyC,CAAAA,QAAQ,GAAK,GAApB,CACH,CAED,GAAIG,CAAAA,SAAS,CAAG5D,OAAO,CAAC6D,QAAR,CAAiBN,KAAjB,CAAwB,GAAxB,CAA6B,EAA7B,EAAiC3D,KAAjC,CAAuC,GAAvC,CAAhB,CACA,GAAIkE,CAAAA,SAAS,CAAG9D,OAAO,CAAC6D,QAAR,CAAiBL,KAAjB,CAAwB,GAAxB,CAA6B,EAA7B,EAAiC5D,KAAjC,CAAuC,GAAvC,CAAhB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAIgE,SAAS,CAAC5C,MAAV,CAAmB8C,SAAS,CAAC9C,MAAjC,CAAyC,CACrC,MAAOyC,CAAAA,QAAQ,GAAK,GAApB,CACH,CAFD,IAEO,IAAIG,SAAS,CAAC5C,MAAV,CAAmB8C,SAAS,CAAC9C,MAAjC,CAAyC,CAC5C,MAAOyC,CAAAA,QAAQ,GAAK,GAApB,CACH,CAED;AACA,GAAIjB,CAAAA,GAAG,CAAG,KAAV,CAEAxC,OAAO,CAACS,IAAR,CAAamD,SAAb,CAAwB,SAAUG,KAAV,CAAiBC,OAAjB,CAA0B,CAC9C,GAAIC,CAAAA,OAAO,CAAGH,SAAS,CAACC,KAAD,CAAvB,CAEA,GAAIC,OAAO,CAAGC,OAAd,CAAuB,CACnBzB,GAAG,CAAGiB,QAAQ,GAAK,GAAnB,CACA,MAAO,MAAP,CACH,CAHD,IAGO,IAAIO,OAAO,CAAGC,OAAd,CAAuB,CAC1BzB,GAAG,CAAGiB,QAAQ,GAAK,GAAnB,CACA,MAAO,MAAP,CACH,CACJ,CAVD,EAYA,MAAOjB,CAAAA,GAAP,CACH,CA9CD,CAiDA;AACA;AACA;AACA;AACA;AAEA,GAAI0B,CAAAA,EAAE,CAAGzE,OAAO,CAAC,aAAD,CAAhB,CACA,GAAI0E,CAAAA,UAAU,CAAG1E,OAAO,CAAC,uBAAD,CAAxB,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACAO,OAAO,CAACoE,QAAR,CAAmB,SAAUC,KAAV,CAAiBC,OAAjB,CAA0B,CACzCA,OAAO,CAAGA,OAAO,EAAI,EAArB,CACAD,KAAK,CAAGA,KAAK,CAACE,WAAN,EAAR,CAEA,GAAI,CAACD,OAAO,CAACE,MAAb,CAAqB,CACjBF,OAAO,CAACE,MAAR,CAAiB,gCAAjB,CACH,CAEDF,OAAO,CAACE,MAAR,EAAkBL,UAAU,CAACM,GAAX,CAAeJ,KAAf,EAAwB,GAA1C,CAEA,GAAI,CAACC,OAAO,CAACI,IAAb,CAAmB,CACfJ,OAAO,CAACI,IAAR,CAAe,GAAf,CACH,CAED,GAAI,CAACJ,OAAO,CAACK,OAAb,CAAsB,CAClB;AACAL,OAAO,CAACK,OAAR,CAAkB,OAAlB,CACH,CAED,GAAIL,OAAO,CAACM,YAAZ,CAA0B,CACtBN,OAAO,CAACM,YAAR,CAAuB,GAAvB,CACH,CAFD,IAEO,CACHN,OAAO,CAACM,YAAR,CAAuB,KAAvB,CACH,CAED,GAAIC,CAAAA,KAAK,CAAG,CACRC,CAAC,CAAER,OAAO,CAACI,IADH,CAAZ,CAIA,GAAIJ,OAAO,CAACK,OAAZ,CAAqB,CACjBE,KAAK,CAACE,CAAN,CAAUT,OAAO,CAACK,OAAlB,CACH,CAED,GAAIL,OAAO,CAACM,YAAZ,CAA0B,CACtBC,KAAK,CAACG,CAAN,CAAUV,OAAO,CAACM,YAAlB,CACH,CAED,GAAIN,OAAO,CAACW,MAAZ,CAAoB,CAChBJ,KAAK,CAACK,CAAN,CAAUZ,OAAO,CAACW,MAAlB,CACH,CAED,MAAOX,CAAAA,OAAO,CAACE,MAAR,CAAiBN,EAAE,CAACiB,SAAH,CAAaN,KAAb,CAAxB,CACH,CA1CD","sourcesContent":["/**\n * 数据遍历\n * @author ydr.me\n * 2014-09-14 17:26\n */\n\n\nvar typeis = require('./typeis.js');\nvar udf;\nvar canListTypeArr = 'array object nodelist htmlcollection arguments namednodemap'.split(' ');\nvar REG_BEGIN_0 = /^0+/;\nvar w = global;\n\n\n/**\n * 判断对象是否有自己的静态属性\n * @param obj\n * @param key\n * @returns {boolean}\n */\nexports.hasStatic = function (obj, key) {\n    try {\n        return Object.prototype.hasOwnProperty.call(obj, key);\n    } catch (err) {\n        return false;\n    }\n};\n\n\n/**\n * 遍历元素\n * @param {Array/Object} list  数组、可枚举对象\n * @param {Function} callback  回调，返回false时停止遍历\n * @param {Boolean} [reverse=false] 数组倒序\n *\n * @example\n * // 与 jQuery.each 一样\n * // 返回 false 时将退出当前遍历\n * data.each(list, function(key, val){});\n */\nexports.each = function (list, callback, reverse) {\n    var i;\n    var j;\n\n    // 数组 或 类似数组\n    if (list && typeis.number(list.length)) {\n        if (reverse) {\n            for (i = list.length - 1, j = 0; i >= 0; i--) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        } else {\n            for (i = 0, j = list.length; i < j; i++) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        }\n    }\n    // 纯对象\n    else if (list !== null && list !== udf) {\n        for (i in list) {\n            if (exports.hasStatic(list, i)) {\n                if (callback.call(w, i, list[i]) === false) {\n                    break;\n                }\n            }\n        }\n    }\n};\n\n\n/**\n * 重复运行\n * @param count {Number} 重复次数\n * @param fn {Function} 重复方法\n */\nexports.repeat = function (count, fn) {\n    var i = -1;\n\n    while (++i < count) {\n        if (fn(i, count) === false) {\n            break;\n        }\n    }\n};\n\n\n/**\n * 扩展静态对象\n * @param {Boolean|Object} [isExtendDeep] 是否深度扩展，可省略，默认false\n * @param {Object}  [source] 源对象\n * @param {...Object}  [target] 目标对象，可以是多个\n * @returns {*}\n *\n * @example\n * // 使用方法与 jQuery.extend 一样\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => true\n *\n * // 如果不想污染原始对象，可以传递一个空对象作为容器\n * var o1 = {a: 1};\n * var o2 = {b: 2};\n * var o3 = data.extend(true, {}, o1, o2);\n * // => {a: 1, b: 2}\n * o1 === o3\n * // => fale\n */\nexports.extend = function (isExtendDeep, source, target) {\n    var args = arguments;\n    var firstArgIsBoolean = typeof(args[0]) === 'boolean';\n    var current = firstArgIsBoolean ? 1 : 0;\n    var length = args.length;\n    var i;\n    var obj;\n    var sourceType;\n    var objType;\n\n    isExtendDeep = firstArgIsBoolean && args[0] === true;\n    source = args[current++];\n\n    for (; current < length; current++) {\n        obj = args[current];\n        for (i in obj) {\n            if (exports.hasStatic(obj, i) && obj[i] !== undefined) {\n                sourceType = typeis(source[i]);\n                objType = typeis(obj[i]);\n\n                if (objType === 'object' && isExtendDeep) {\n                    source[i] = sourceType !== objType ? {} : source[i];\n                    exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n                } else if (objType === 'array' && isExtendDeep) {\n                    source[i] = sourceType !== objType ? [] : source[i];\n                    exports.extend.call(this, isExtendDeep, source[i], obj[i]);\n                } else {\n                    source[i] = obj[i];\n                }\n            }\n        }\n    }\n\n    return source;\n};\n\n\n/**\n * 萃取\n * @param data {Object} 传递的数据\n * @param keys {Array} 摘取的键数组\n * @param [filter] {Function} 过滤方法，默认取不为 undefined 键值\n * @returns {Object}\n */\nexports.select = function (data, keys, filter) {\n    var data2 = {};\n\n    data = data || {};\n\n    filter = filter || function (val) {\n            return val !== udf;\n        };\n\n    keys.forEach(function (key) {\n        if (filter(data[key])) {\n            data2[key] = data[key];\n        }\n    });\n\n    return data2;\n};\n\n\n/**\n * 转换对象为一个纯数组，只要对象有length属性即可\n * @param {Object} [obj] 对象\n * @param {Boolean} [isConvertWhole] 是否转换整个对象为数组中的第0个元素，当该对象无length属性时，默认false\n * @returns {Array}\n *\n * @example\n * var o = {0:\"foo\", 1:\"bar\", length: 2}\n * data.toArray(o);\n * // => [\"foo\", \"bar\"]\n *\n * var a1 = [1, 2, 3];\n * // 转换后的数组是之前的副本\n * var a2 = data.toArray(a1);\n * // => [1, 2, 3]\n * a2 === a1;\n * // => false\n */\nexports.toArray = function (obj, isConvertWhole) {\n    var ret = [];\n    var i = 0;\n    var j;\n    var objType = typeis(obj);\n\n    if (canListTypeArr.indexOf(objType) > -1 && typeis(obj.length) === 'number' && obj.length >= 0) {\n        for (j = obj.length; i < j; i++) {\n            ret.push(obj[i]);\n        }\n    } else if (obj && isConvertWhole) {\n        ret.push(obj);\n    }\n\n    return ret;\n};\n\n\n/**\n * 对象1级比较，找出相同和不同的键\n * @param obj1 {Object|Array}\n * @param obj2 {Object|Array}\n * @returns {Object}\n *\n * @example\n * data.compare({a:1,b:2,c:3}, {a:1,d:4});\n * // =>\n * // {\n     * //    same: [\"a\"],\n     * //    only: [\n     * //       [\"b\", \"c\"],\n     * //       [\"d\"]\n     * //    ],\n     * //    different: [\"b\", \"c\", \"d\"]\n     * // }\n */\nexports.compare = function (obj1, obj2) {\n    var obj1Type = typeis(obj1);\n    var obj2Type = typeis(obj2);\n    var obj1Only = [];\n    var obj2Only = [];\n    var same = [];\n\n    // 类型不同\n    if (obj1Type !== obj2Type) {\n        return null;\n    }\n\n    // 对象\n    if (obj1Type === 'object' || obj1Type === 'array') {\n        exports.each(obj1, function (key, val) {\n            if (obj2[key] !== val) {\n                obj1Only.push(key);\n            } else {\n                same.push(key);\n            }\n        });\n\n        exports.each(obj2, function (key, val) {\n            if (obj1[key] !== val) {\n                obj2Only.push(key);\n            }\n        });\n\n        return {\n            same: same,\n            only: [\n                obj1Only,\n                obj2Only\n            ],\n            different: obj1Only.concat(obj2Only)\n        };\n    } else {\n        return null;\n    }\n};\n\n\n/**\n * 比较两个长整型数值\n * @param long1 {String} 长整型数值字符串1\n * @param long2 {String} 长整型数值字符串2\n * @param [operator=\">\"] {String} 比较操作符，默认比较 long1 > long2\n * @returns {*}\n */\nexports.than = function (long1, long2, operator) {\n    operator = operator || '>';\n    long1 = String(long1).replace(REG_BEGIN_0, '');\n    long2 = String(long2).replace(REG_BEGIN_0, '');\n\n    // 1. 比较长度\n    if (long1.length > long2.length) {\n        return operator === '>';\n    } else if (long1.length < long2.length) {\n        return operator === '<';\n    }\n\n    var long1List = exports.humanize(long1, ',', 15).split(',');\n    var long2List = exports.humanize(long2, ',', 15).split(',');\n\n    //[\n    // '123456',\n    // '789012345678901',\n    // '234567890123456',\n    // '789012345678901',\n    // '234567890123457'\n    // ]\n\n    // 2. 比较数组长度\n    if (long1List.length > long2List.length) {\n        return operator === '>';\n    } else if (long1List.length < long2List.length) {\n        return operator === '<';\n    }\n\n    // 3. 遍历比较\n    var ret = false;\n\n    exports.each(long1List, function (index, number1) {\n        var number2 = long2List[index];\n\n        if (number1 > number2) {\n            ret = operator === '>';\n            return false;\n        } else if (number1 < number2) {\n            ret = operator === '<';\n            return false;\n        }\n    });\n\n    return ret;\n};\n\n\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////[ ONLY NODEJS ]////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////\n\nvar qs = require('querystring');\nvar encryption = require('../../utils/Crypto.js');\n\n\n/**\n * 获取 gravatar\n * @param email {String} 邮箱\n * @param [options] {Object} 配置\n * @param [options.origin=\"http://gravatar.duoshuo.com/avatar/\"] {String} 服务器\n * @param [options.size=100] {Number} 尺寸\n * @param [options.default=\"retro\"] {Number} 默认头像\n * @param [options.forcedefault=false] {*} 是否忽略默认头像\n * @param [options.rating=null] {*} 评级\n * @returns {string}\n */\nexports.gravatar = function (email, options) {\n    options = options || {};\n    email = email.toLowerCase();\n\n    if (!options.origin) {\n        options.origin = 'http://cn.gravatar.com/avatar/';\n    }\n\n    options.origin += encryption.md5(email) + '?';\n\n    if (!options.size) {\n        options.size = 100;\n    }\n\n    if (!options.default) {\n        //options.default = 'http://s.ydr.me/p/i/avatar.png';\n        options.default = 'retro';\n    }\n\n    if (options.forcedefault) {\n        options.forcedefault = 'y';\n    } else {\n        options.forcedefault = false;\n    }\n\n    var query = {\n        s: options.size\n    };\n\n    if (options.default) {\n        query.d = options.default;\n    }\n\n    if (options.forcedefault) {\n        query.f = options.forcedefault;\n    }\n\n    if (options.rating) {\n        query.r = options.rating;\n    }\n\n    return options.origin + qs.stringify(query);\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}